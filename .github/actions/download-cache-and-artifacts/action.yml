name: "Download build artifacts"
description: "Download build artifacts"

inputs:
  packages:
    description: 'packages to cache'
    required: false
    type: string
    default: 'dist nxcache'
  persistent-packages:
    description: 'cache key'
    required: false
    type: string
    default: 'nxcache'
  cache-key-suffix:
    description: 'cache key suffix'
    required: false
    type: string
    default: ''    
runs:
  using: "composite"
  steps:
    - name: download and extract artifacts from s3
      shell: bash
      env:
        REMOTE_PATH: "alfresco-ng2-components/build-cache/${{ github.run_id }}"      
      run: |
        packages=( $(echo ${{ inputs.packages }}) )
        for i in "${packages[@]}"; do
          time aws s3 cp --no-progress s3://${S3_BUILD_BUCKET_SHORT_NAME}/${REMOTE_PATH}/$i.tar.gz $i.tar.gz
          du -h $i.tar.gz
          time tar xzf $i.tar.gz
        done
    - name: download and extract persistent artifacts from s3
      shell: bash
      env:
        REMOTE_PATH: "alfresco-ng2-components/build-cache/${{ hashFiles('**/package-lock.json') }}"      
      run: |
        echo using hashfile '${{ hashFiles("**/package-lock.json") }}'
        echo remote path $REMOTE_PATH
        if [ -n "${{ inputs.cache-key-suffix }}" ]; then
          REMOTE_PATH="${REMOTE_PATH}-${{ inputs.cache-key-suffix }}"
        fi      
        packages=( $(echo ${{ inputs.persistent-packages }}) )
        for i in "${packages[@]}"; do
          time aws s3 cp --no-progress s3://${S3_BUILD_BUCKET_SHORT_NAME}/${REMOTE_PATH}/$i.tar.gz $i.tar.gz
          du -h $i.tar.gz
          time tar xzf $i.tar.gz
        done        
    - name: show files
      shell: bash
      run: |
        echo "====DIST===="
        find dist -maxdepth 1 -type d || true
        echo "====NXCACHE===="
        find nxcache -maxdepth 1 -type d || true
        echo "====ADF===="
        find node_modules/@alfresco/ -maxdepth 1 -type d || true
        echo "====NX===="
        find node_modules/nx/ -maxdepth 1 -type d || true
