name: "dev-build"

on:
  push:
    branches:
      - AAE-7986-dev-act
      #
      #   - /^master(-patch.*)?$/
      #   - /^develop(-patch.*)?$/
      #   - master
      #   - develop
      # #remove after upgrade
      #   - angular-14-rebase
      #   - /.*old-env.*/
      #   - /.*next-release.*/
      #   - /.*beta.*/

# on:
#   pull_request:
#     types:
#       - closed

# jobs:
#   if_merged:
#     if: github.event.pull_request.merged == true
#     runs-on: ubuntu-latest
#     steps:
#     - run: |
#         echo The PR was merged

# on:
#   pull_request:
#     types: [opened, reopened]
# https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#pull_request
env:
  TRAVIS_BRANCH: ${{ github.ref_name }}
  GITHUB_BRANCH: ${{ github.ref_name }}
  TRAVIS_BUILD_DIR: ${{ github.workspace }}
  TRAVIS_COMMIT: ${{ github.sha }}
  TRAVIS_BUILD_ID: ${{ github.run_id }}

jobs:
  main:
    name: "Build Components"
    runs-on: ubuntu-22.04
    # TODO : pull request not merged
    # if: github.event.pull_request.merged == true
    env:
      TRAVIS_BRANCH: develop
      # TRAVIS_EVENT_TYPE: push
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all history for all tags and branches
      - uses: .github/actions/setup
      - name: override NX_CALCULATION_FLAGS
        run: echo 'NX_CALCULATION_FLAGS=--base=origin/develop --head=HEAD' >> $GITHUB_ENV
      - run: echo $TRAVIS_EVENT_TYPE
      - run: echo $S3_NODE_MODULES_CACHE_ID
      - run: echo $HEAD_COMMIT_HASH
      - run: echo $NX_CALCULATION_FLAGS
      - run: npm ci
      - run: npx nx affected $NX_CALCULATION_FLAGS --target=lint --parallel=3
      - name: install chrome      
        uses: browser-actions/setup-chrome@latest
      - name: install xvfb
        run: sudo apt-get install -y x11-xserver-utils xvfb
      - run: /usr/bin/xvfb-run --auto-servernum npx nx affected:test $NX_CALCULATION_FLAGS --exclude="insights,core,extensions,process-services,process-services-cloud" }}
      - name: test cleanup
        run: | 
            xvfb_pid=$(ps x | grep -v grep | grep xvfb-run | awk '{print $1}')
            if [ "$xvfb_pid" != "" ]; then
                echo "Killing the following xvfb process: $xvfb_pid"
                sudo kill $xvfb_pid
            else
                echo "Nothing to kill"
            fi
      - run: nx affected:build $NX_CALCULATION_FLAGS --prod --exclude="demoshell"
      - run: nx $NX_CALCULATION_FLAGS build demoshell --configuration production 
      - run: nx run stories:build-storybook --configuration ci
# UPDATE BUILD CACHE
      - uses: .github/actions/update-cache

  e2e-test:
    name: "e2e Test"
    needs: 
      - main
    runs-on: ubuntu-22.04
    strategy: 
      fail-fast: false
      matrix:        
        components: 
          - process Cloud::Storybook Playwright
          - Core
          # - Content::Components
          # - Content::Directives
          # - Content::Document List
          # - Content::Metadata
          # - Content::Upload and Versioning
          # - Search
          # - Process::Form
          # - Process::Process
          # - Process::Tasks
          # - Process::Widgets
          # - Process Cloud::Form
          # - Process Cloud::People
          # - Process Cloud::Process
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - uses: .github/actions/get-cache
      - uses: .github/actions/setup

      - name: Install playRight
        run: |
          npm install -D @playwright/test
          npx playwright install
      - name: echos some npm config
        run: |
          npm config rm proxy
          npm config rm https-proxy
          npm config ls -l
      - name: Process Cloud Storybook Playwright
        # if: matrix.components == 'process Cloud::Storybook Playwright'
        run: |
          npx playwright install chromium
          sudo sysctl -w fs.inotify.max_user_watches=524288
          npx playwright test --config='e2e-playwright/playwright.config.ts' || exit 1

      # # before e2e script
      # - name: e2e test
      #   run: ./scripts/ci/utils/artifact-from-s3.sh -a "$S3_SMART_RUNNER_PATH/$TRAVIS_JOB_ID.tar.bz2" -o "$SMART_RUNNER_DIRECTORY"
      #   #check cs env
      - run: |
          echo "====== Check content UP ====="
          ./node_modules/@alfresco/adf-cli/bin/adf-cli check-cs-env --host "$E2E_HOST" -u "$E2E_USERNAME" -p "$E2E_PASSWORD" || exit 1
        # check ps env
      - run: |
          echo "====== Check PS UP ====="
          ./node_modules/@alfresco/adf-cli/bin/adf-cli init-aps-env --host "$E2E_HOST" -u "$E2E_USERNAME" -p "$E2E_PASSWORD" --license "$AWS_S3_BUCKET_ACTIVITI_LICENSE"
      - run:
          bash ./scripts/travis/e2e/e2e.sh "core"
      # # after e2e
      # - name: after e2e
      #   run: ./scripts/ci/utils/artifact-to-s3.sh -a "$SMART_RUNNER_DIRECTORY" -o "$S3_SMART_RUNNER_PATH/$TRAVIS_JOB_ID.tar.bz2"      
    