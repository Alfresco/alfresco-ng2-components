name: "release"

on:
  workflow_call:
    inputs:
      dry-run-release:
        description: 'enable dry-run on artifact push'
        required: false
        type: boolean
        default: true

  push:
    branches:
      - master
      - master-patch-*
env:
  BASE_REF: ${{ github.base_ref }}
  HEAD_REF: ${{ github.head_ref }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  GITHUB_BRANCH: ${{ github.ref_name }}
  TRAVIS_BUILD_DIR: ${{ github.workspace }}
  TRAVIS_COMMIT: ${{ github.sha }}
  BUILD_ID: ${{ github.run_id }}
  TRAVIS_RUN_NUMBER: ${{ github.run_attempt }}
  TRAVIS_BUILD_NUMBER: ${{ github.run_id }}
  JOB_ID: ${{ github.run_id }}
  PROXY_HOST_BPM: ${{ secrets.E2E_HOST }}
  E2E_HOST_APA: ${{ secrets.E2E_HOST_APA }}
  E2E_HOST: ${{ secrets.E2E_HOST }}
  E2E_USERNAME: ${{ secrets.E2E_ADMIN_EMAIL_IDENTITY }}
  E2E_PASSWORD: ${{ secrets.E2E_PASSWORD }}
  E2E_ADMIN_EMAIL_IDENTITY: ${{ secrets.E2E_ADMIN_EMAIL_IDENTITY }}
  E2E_ADMIN_PASSWORD_IDENTITY: ${{ secrets.E2E_ADMIN_PASSWORD_IDENTITY }}
  USERNAME_ADF: ${{ secrets.E2E_USERNAME }}
  PASSWORD_ADF: ${{ secrets.E2E_PASSWORD }}
  URL_HOST_ADF: ${{ secrets.URL_HOST_ADF }}
  IDENTITY_ADMIN_EMAIL: ${{ secrets.E2E_ADMIN_EMAIL_IDENTITY }}
  IDENTITY_ADMIN_PASSWORD: ${{ secrets.E2E_ADMIN_PASSWORD_IDENTITY }}
  AWS_S3_BUCKET_ACTIVITI_LICENSE: ${{ secrets.AWS_S3_BUCKET_ACTIVITI_LICENSE }}
  HOST_SSO: ${{ secrets.HOST_SSO }}
  LOG_LEVEL: "ERROR"
  E2E_LOG_LEVEL: "ERROR"
  E2E_MODELER_USERNAME: ${{ secrets.E2E_MODELER_USERNAME }}
  E2E_MODELER_PASSWORD: ${{ secrets.E2E_MODELER_PASSWORD }}
  EXTERNAL_ACS_HOST: ${{ secrets.EXTERNAL_ACS_HOST }}
  E2E_DEVOPS_USERNAME: ${{ secrets.E2E_DEVOPS_USERNAME }}
  E2E_DEVOPS_PASSWORD: ${{ secrets.E2E_DEVOPS_PASSWORD }}
  USERNAME_SUPER_ADMIN_ADF: ${{ secrets.USERNAME_SUPER_ADMIN_ADF }}
  PASSWORD_SUPER_ADMIN_ADF: ${{ secrets.PASSWORD_SUPER_ADMIN_ADF }}
  HR_USER: ${{ secrets.HR_USER }}
  HR_USER_PASSWORD: ${{ secrets.HR_USER_PASSWORD }}
  SMART_RUNNER_PATH: ".protractor-smartrunner"
  S3_DBP_PATH:  ${{ secrets.S3_DBP_PATH }}
  S3_BUILD_BUCKET: ${{ secrets.S3_BUILD_BUCKET }}
  S3_BUILD_BUCKET_SHORT_NAME: ${{ secrets.S3_BUILD_BUCKET_SHORT_NAME }}
  NODE_OPTIONS: "--max-old-space-size=5120"
  DOCKER_REPOSITORY_DOMAIN: ${{ secrets.DOCKER_REPOSITORY_DOMAIN }}
  DOCKER_REPOSITORY_USER: ${{ secrets.DOCKER_REPOSITORY_USER }}
  DOCKER_REPOSITORY_PASSWORD: ${{ secrets.DOCKER_REPOSITORY_PASSWORD }}
  DOCKER_REPOSITORY_STORYBOOK: "${{ secrets.DOCKER_REPOSITORY_DOMAIN }}/alfresco/storybook"
  DOCKER_REPOSITORY: "${{ secrets.DOCKER_REPOSITORY_DOMAIN }}/alfresco/demo-shell"
  NPM_REGISTRY_ADDRESS: ${{ secrets.NPM_REGISTRY_ADDRESS }}
  NPM_REGISTRY_TOKEN: ${{ secrets.NPM_REGISTRY_TOKEN }}
  GH_TOKEN: ${{ secrets.BOT_GITHUB_TOKEN }}

jobs:
  setup:
    timeout-minutes: 20
    name: "Release tag"
    runs-on: ubuntu-22.04
    env:
      GITHUB_TOKEN: $GH_TOKEN
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - id: set-dryrun
        uses: ./.github/actions/enable-dryrun
        with: 
          dry-run-flag: ${{ inputs.dry-run-release }}    
      - name: install NPM
        uses: actions/setup-node@v3
        with:
          node-version: 14
      - name: "Release tag"
        run: |
          echo "DRYRUN: ${{ steps.set-dryrun.outputs.dryrun }}"
#          git fetch --all
 #         set -u; bash -x ./scripts/travis/release/git-tag.sh ${{ steps.set-dryrun.outputs.dryrun }}
