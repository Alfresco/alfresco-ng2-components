name: "pull-request"

on:
  push:
    branches:
      - AAE-7986-dev-act*
      #
      #   - /^master(-patch.*)?$/
      #   - /^develop(-patch.*)?$/
      #   - master
      #   - develop
      # #remove after upgrade
      #   - angular-14-rebase
      #   - /.*old-env.*/
      #   - /.*next-release.*/
      #   - /.*beta.*/
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: Enable SSH debug
        type: boolean
        required: false
        default: false
    ssh_debug_timeout:
      debug_enabled:
        description: SSH debug timeout, in minutes
        required: false
        default: "60"

# on:
#   pull_request:
#     types:
#       - closed

# jobs:
#   if_merged:
#     if: github.event.pull_request.merged == true
#     runs-on: ubuntu-latest
#     steps:
#     - run: |
#         echo The PR was merged

# on:
#   pull_request:
#     types: [opened, reopened]
# https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#pull_request
env:
  TRAVIS_BRANCH: ${{ github.ref_name }}
  GITHUB_BRANCH: ${{ github.ref_name }}
  TRAVIS_BUILD_DIR: ${{ github.workspace }}
  TRAVIS_COMMIT: ${{ github.sha }}
  TRAVIS_BUILD_ID: ${{ github.run_id }}
  TRAVIS_RUN_NUMBER: ${{ github.run_attempt }}
  E2E_HOST_APA: ${{ secrets.E2E_HOST_APA }}
  E2E_HOST: ${{ secrets.E2E_HOST }}
  E2E_USERNAME: ${{ secrets.E2E_ADMIN_EMAIL_IDENTITY }}
  E2E_PASSWORD: ${{ secrets.E2E_PASSWORD }}
  E2E_ADMIN_EMAIL_IDENTITY: ${{ secrets.E2E_ADMIN_EMAIL_IDENTITY }}
  E2E_ADMIN_PASSWORD_IDENTITY: ${{ secrets.E2E_ADMIN_PASSWORD_IDENTITY }}
  USERNAME_ADF: ${{ secrets.E2E_USERNAME }}
  PASSWORD_ADF: ${{ secrets.E2E_PASSWORD }}
  URL_HOST_ADF: ${{ secrets.URL_HOST_ADF }}  
  IDENTITY_ADMIN_EMAIL: ${{ secrets.E2E_ADMIN_EMAIL_IDENTITY }}
  IDENTITY_ADMIN_PASSWORD: ${{ secrets.E2E_ADMIN_PASSWORD_IDENTITY }}
  AWS_S3_BUCKET_ACTIVITI_LICENSE: ${{ secrets.AWS_S3_BUCKET_ACTIVITI_LICENSE }}
  HOST_SSO: ${{ secrets.HOST_SSO }}
  LOG_LEVEL: "ERROR"
  E2E_LOG_LEVEL: "ERROR"
  PROXY_HOST_BPM: ${{ secrets.E2E_HOST }}
jobs:
  main:
    timeout-minutes: 20
    name: "Build Components"
    runs-on: ubuntu-22.04
    # TODO : pull request not merged
    # if: github.event.pull_request.merged == true
    env:
      TRAVIS_BRANCH: develop
      # TRAVIS_EVENT_TYPE: push
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all history for all tags and branches
      - uses: ./.github/actions/setup
      - name: debug nx-set-sha
        run: |
          echo "BASE: ${{ env.NX_BASE }}"
          echo "HEAD: ${{ env.NX_HEAD }}"
      # TODO: remove override
      - name: override NX_CALCULATION_FLAGS
        run: echo NX_CALCULATION_FLAGS=--base=origin/develop --head=HEAD >> $GITHUB_ENV
      - run: echo $TRAVIS_EVENT_TYPE
      - run: echo $S3_NODE_MODULES_CACHE_ID
      - run: echo $HEAD_COMMIT_HASH
      - run: echo $NX_CALCULATION_FLAGS
      # TODO TRAVIS_JOB_ID TO SET
      - run: npm ci
      - run: npx nx affected $NX_CALCULATION_FLAGS --target=lint --parallel=3
      - name: install chrome
        uses: browser-actions/setup-chrome@latest
      - name: install xvfb
        run: sudo apt-get install -y x11-xserver-utils xvfb
      - run: /usr/bin/xvfb-run --auto-servernum npx nx affected:test $NX_CALCULATION_FLAGS --exclude="insights,core,extensions,process-services,process-services-cloud" }}
      - name: test cleanup
        run: |
          xvfb_pid=$(ps x | grep -v grep | grep xvfb-run | awk '{print $1}')
          if [ "$xvfb_pid" != "" ]; then
              echo "Killing the following xvfb process: $xvfb_pid"
              sudo kill $xvfb_pid
          else
              echo "Nothing to kill"
          fi
      - run: nx affected:build $NX_CALCULATION_FLAGS --prod --exclude="demoshell"
      - run: nx $NX_CALCULATION_FLAGS build demoshell --configuration production
      - run: nx build demoshell --configuration production
      - run: nx run stories:build-storybook --configuration ci
      - uses: ./.github/actions/upload-artifacts

  playwright:
    timeout-minutes: 20
    name: "playwright"
    needs: [ main ]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all history for all
      - uses: ./.github/actions/setup
      - name: clean 
        run: |
            rm -rf nxcache
            rm -rf dist
      - uses: ./.github/actions/download-artifacts
      - run: find nxcache -type d -maxdepth 1
      - run: find dist -type d -maxdepth 2
      - run: nx run testing:bundle

      - name: Install playRight
        run: |
          npm install -D @playwright/test
          npx playwright install
      - name: build adf cli
        run: |
          nx build cli
      - name: Process Cloud Storybook Playwright
        run: |
          npx playwright install chromium
          sudo sysctl -w fs.inotify.max_user_watches=524288
          npx playwright test --config='e2e-playwright/playwright.config.ts' || exit 1
      - name: debug
        run: ls -lath node_modules/@alfresco || true
      - uses: ./.github/actions/upload-artifacts  

      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3
      #   if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
      #   with:
      #     timeout-minutes: ${{ inputs.ssh_debug_timeout }}
      #     limit-access-to-actor: true
      # - run: sleep 300
      #   if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}


  e2e:
    timeout-minutes: 25
    name: "e2e: ${{ matrix.e2e-test.description }}"
    needs: [ playwright ]
    runs-on: ubuntu-22.04
    strategy: 
      fail-fast: false
      matrix:        
        e2e-test:
          - description: "Core"
            name: "core"
            folder: "core"
            provider: "ALL"
            auth: "OAUTH"
          - description: "Content: Components"
            name: "content-services"
            folder: "content-services/components"
            provider: "ECM"
            auth: "BASIC"
          - description: "Content: Directives"
            name: "content-services"
            folder: "content-services/directives"
            provider: "ECM"
            auth: "BASIC"
          - description: "Content: Document List"
            name: "content-services"
            folder: "content-services/document-list"
            provider: "ECM"
            auth: "BASIC"
          - description: "Content: Metadata"
            name: "content-services"
            folder: "content-services/metadata"
            provider: "ECM"
            auth: "BASIC"
          - description: "Content: Upload and Versioning"
            name: "content-services browser"
            folder: "content-services/upload"
            provider: "ECM"
            auth: "BASIC"
          - description: "Search"
            name: "content-services"
            folder: "search"
            provider: "ECM"
            auth: "BASIC"
          - description: "Process: Form"
            name: "process-services"
            folder: "process-services/form"
            provider: "BPM"
            auth: "OAUTH"
          - description: "Process: Process"
            name: "process-services/process"
            folder: "process-services/process"
            provider: "BPM"
            auth: "OAUTH"
          - description: "Process: Widget"
            name: "process-services/widgets"
            folder: "process-services/widgets"
            provider: "BPM"
            auth: "OAUTH"
          - description: "Process Cloud: Form"
            name: "process-services-cloud/form-field"
            folder: "process-services-cloud/form-field"
            provider: "ALL"
            auth: "OAUTH"
            proxy: $E2E_HOST_APA
          - description: "Process Cloud : People"
            name: "process-services-cloud"
            folder: "process-services-cloud/people"
            provider: "ALL"
            auth: "OAUTH"
            proxy: $E2E_HOST_APA
          - description: "Process Cloud : Process"
            name: "process-services-cloud"
            folder: "process-services-cloud/process"
            provider: "ALL"
            auth: "OAUTH"
            proxy: $E2E_HOST_APA
          - description: "Process Cloud : Start Task"
            name: "process-services-cloud"
            folder: "process-services-cloud/start-task"
            provider: "ALL"
            auth: "OAUTH"
            proxy: $E2E_HOST_APA
          - description: "Process Cloud : Tasks List"
            name: "process-services-cloud"
            folder: "process-services-cloud/task-list"
            provider: "ALL"
            auth: "OAUTH"
            proxy: $E2E_HOST_APA


    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all history for all
      - uses: ./.github/actions/setup
        with:
          enable-cache: "true"
      - name: clean 
        run: |
            rm -rf nxcache
            rm -rf dist
      - name: debug
        run: |
          echo '${{ toJson(matrix) }}'
      - uses: ./.github/actions/download-artifacts
      - name: copy cli into node modules
        run: nx run cli:bundle
        shell: bash      
      - run: find nxcache -type d -maxdepth 1
      - run: find dist -type d -maxdepth 2
      - name: e2e
        uses: ./.github/actions/e2e
        with:
          e2e-test-name: ${{ matrix.e2e-test.name }}
          e2e-test-folder: ${{ matrix.e2e-test.folder }}
          e2e-test-provider: ${{ matrix.e2e-test.provider }}
          e2e-test-auth: ${{ matrix.e2e-test.auth }}
          upload-to-s3: false
          download-from-s3: false
      # - name: Debug on failure
      #   uses: mxschmitt/action-tmate@v3
      #   env:
      #     FOLDER: "core"
      #     PROVIDER: 'ALL'
      #     AUTH_TYPE: 'OAUTH'
      #   if: ${{ failure() }}
      #   with:
      #     timeout-minutes: 60
      #     limit-access-to-actor: true          