name: "dev-build"

on:
  push:
    branches:
      - AAE-7986-dev-act-maurizio
      #
      #   - /^master(-patch.*)?$/
      #   - /^develop(-patch.*)?$/
      #   - master
      #   - develop
      # #remove after upgrade
      #   - angular-14-rebase
      #   - /.*old-env.*/
      #   - /.*next-release.*/
      #   - /.*beta.*/

env:
  NODE_MODULES_DIR: "./node_modules"
  TRAVIS_BRANCH: ${{ github.ref_name }}
  TRAVIS_BUILD_DIR: ${{ github.workspace }}
  TRAVIS_COMMIT: ${{ github.sha }}   
  PLAYWRIGHT_WORKERS: 2
  PLAYWRIGHT_STORYBOOK_E2E_HOST: http://localhost
  PLAYWRIGHT_STORYBOOK_E2E_PORT: 4400
  SMART_RUNNER_DIRECTORY: .protractor-smartrunner
  S3_DBP_PATH: s3://alfresco-travis-builds/adf
  DEMO_SHELL_DIR: ./dist/demo-shell
  BUILT_LIBS_DIR: ./dist/libs  
    
jobs:
  prerequisite:
    name: "Before anything unnece$$ary happens..."
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3      
      - name: build guard check
        if: ${{ github.event_name == 'pull_request' }}
        run: ./scripts/ci/jobs/dbpci-build-guard-check $TRAVIS_PULL_REQUEST || exit 1
  build-lib:
    name: "Lib::Build"
    needs: prerequisite
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: install NPM
        uses: actions/setup-node@v3
        with:
          node-version: 14 
      - name: node_modules_cache
        id: cache-npm 
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with: 
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: create .travis folder
        run: mkdir -p .travis
      - name: create travis env file
        uses: mikefarah/yq@v4.28.1
        with:
          cmd: |
            yq eval '.env | {"env" : .}' .travis.yml > .travis/env.yml
      - uses: Alfresco/alfresco-build-tools/.github/actions/travis-env-load@v1.17.0
        with:
          # ignore_regex: ^BRANCH_NAME=.*
          yml_path: .travis/env.yml
      - name: debug
        run: ls -la | grep .travis
      - name: before install
        run: bash ./scripts/ci/job_hooks/before_install.sh
      - name: install
        run: bash ./scripts/ci/job_hooks/install.sh
      - name: Build::lib
        run: |
          sudo ln -s $(npm bin)/nx /usr/bin/nx
          ./scripts/travis/build/build-libs.sh || exit 1
       #   ./scripts/travis/release/release-npm.sh || exit 1        
      - name: Lint
        run : nx affected:lint $NX_CALCULATION_FLAGS --parallel=5
      # skip Build Demo shell on this stage  
  unit-test-lib:
    name: "Unit Test Lib"
    needs: 
      - prerequisite
      - build-lib
    runs-on: ubuntu-latest
    strategy: 
      fail-fast: false
      matrix:        
        components: 
          - content::unit
          - core-extension::unit
          - process-insights::unit
          - process-cloud::unit        
    steps:       
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: install NPM
        uses: actions/setup-node@v3
        with:
          node-version: 14 
      - name: install ci
        run: | 
          sudo ln -s $(npm bin)/nx /usr/bin/nx
          bash ./scripts/ci/job_hooks/install.sh 
          ./scripts/travis/build/build-libs.sh || exit 1 
      - name: install chrome      
        uses: browser-actions/setup-chrome@latest        
      - name: setup variables
        run: |          
          sudo apt-get install -y x11-xserver-utils
          sudo apt-get install -y xvfb             
      - name: ${{ matrix.components }}
        if: matrix.components == 'content::unit'
        run: /usr/bin/xvfb-run --auto-servernum nx affected:test $NX_CALCULATION_FLAGS --exclude="insights,core,extensions,process-services,process-services-cloud" }}
      - name: ${{ matrix.components }}
        if: matrix.components == 'core-extension::unit'
        run: /usr/bin/xvfb-run --auto-servernum nx affected:test $NX_CALCULATION_FLAGS --exclude="insights,content-services,process-services,process-services-cloud"
      - name: ${{ matrix.components }}
        if: matrix.components == 'process-insights::unit'
        run: /usr/bin/xvfb-run --auto-servernum nx affected:test $NX_CALCULATION_FLAGS --exclude="core,extensions,content-services,process-services-cloud"
      - name: ${{ matrix.components }}
        if: matrix.components == 'process-cloud::unit'
        run: /usr/bin/xvfb-run --auto-servernum nx affected:test $NX_CALCULATION_FLAGS --exclude="insights,core,extensions,content-services,process-services"
  postUnitTest:
    name: "Post Unit Test"
    needs: 
      - prerequisite
      - build-lib
      - unit-test-lib
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Release Tag
        run: echo "git-tag.sh" #./scripts/travis/release/git-tag.sh
      - name: Deprecate develop builds
        run: |
          echo "only when merged"
#         ADF_VERSION=$(npm view @alfresco/adf-core@${TAG_NPM} version)
#         bash ./scripts/travis/release/deprecate-develop-build.sh -v ${ADF_VERSION}
  e2e_test:
    name: "e2e Test"
    needs: 
      - prerequisite
      - build-lib
      - unit-test-lib
      - postUnitTest
    runs-on: ubuntu-latest
    strategy: 
      fail-fast: false
      matrix:        
        components: 
          - process Cloud::Storybook Playwright
          - Core
          - Content::Components
          - Content::Directives
          - Content::Document List
          - Content::Metadata
          - Content::Upload and Versioning
          - Search
          - Process::Form
          - Process::Process
          - Process::Tasks
          - Process::Widgets
          - Process Cloud::Form
          - Process Cloud::People
          - Process Cloud::Process
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: install NPM
        uses: actions/setup-node@v3
        with:
          node-version: 14 
      - name: Install playRight
        run: |
          npm install -D @playwright/test 
          npx playwright install
      - name: echos some npm config
        run: |
          npm config rm proxy
          npm config rm https-proxy 
      - name: before install
        run : |
          bash ./scripts/ci/job_hooks/before_install.sh 
          bash ./scripts/ci/job_hooks/install.sh
      - name: ${{ matrix.components }}
        if: matrix.components == 'process Cloud::Storybook Playwright'
        run: |
          bash ./scripts/ci/jobs/dbpci-before-playwright         
          bash ./scripts/travis/storybook-testing/storybook-test.sh
      - name: ${{ matrix.components }}
        if: matrix.components == 'Core'
        run: |
          bash ./scripts/ci/job_hooks/before_e2e.sh
          bash ./scripts/ci/check-env/check-cs-env.sh || travis_terminate 1
          bash ./scripts/ci/check-env/check-ps-env.sh || travis_terminate 1
          bash ./scripts/travis/e2e/e2e.sh "core"
          bash ./scripts/ci/job_hooks/after_e2e.sh
      
    

