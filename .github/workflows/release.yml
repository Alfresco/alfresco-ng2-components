name: "release"

on:
  workflow_call:
    inputs:
      dry-run-release:
        description: 'enable dry-run on artifact push'
        required: false
        type: boolean
        default: true
  pull_request:
    types: [closed]
    branches:
      - develop
      - master
      - develop-patch*
      - master-patch*

env:
  BASE_REF: ${{ github.base_ref }}
  HEAD_REF: ${{ github.head_ref }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  GITHUB_BRANCH: ${{ github.ref_name }}
  GH_BUILD_DIR: ${{ github.workspace }}
  GH_COMMIT: ${{ github.sha }}
  BUILD_ID: ${{ github.run_id }}
  GH_RUN_NUMBER: ${{ github.run_attempt }}
  GH_BUILD_NUMBER: ${{ github.run_id }}
  JOB_ID: ${{ github.run_id }}
  PROXY_HOST_BPM: ${{ secrets.E2E_HOST }}
  E2E_HOST_APA: ${{ secrets.E2E_HOST_APA }}
  E2E_HOST: ${{ secrets.E2E_HOST }}
  E2E_USERNAME: ${{ secrets.E2E_ADMIN_EMAIL_IDENTITY }}
  E2E_PASSWORD: ${{ secrets.E2E_PASSWORD }}
  E2E_ADMIN_EMAIL_IDENTITY: ${{ secrets.E2E_ADMIN_EMAIL_IDENTITY }}
  E2E_ADMIN_PASSWORD_IDENTITY: ${{ secrets.E2E_ADMIN_PASSWORD_IDENTITY }}
  USERNAME_ADF: ${{ secrets.E2E_USERNAME }}
  PASSWORD_ADF: ${{ secrets.E2E_PASSWORD }}
  URL_HOST_ADF: ${{ secrets.URL_HOST_ADF }}
  IDENTITY_ADMIN_EMAIL: ${{ secrets.E2E_ADMIN_EMAIL_IDENTITY }}
  IDENTITY_ADMIN_PASSWORD: ${{ secrets.E2E_ADMIN_PASSWORD_IDENTITY }}
  AWS_S3_BUCKET_ACTIVITI_LICENSE: ${{ secrets.AWS_S3_BUCKET_ACTIVITI_LICENSE }}
  HOST_SSO: ${{ secrets.HOST_SSO }}
  LOG_LEVEL: "ERROR"
  E2E_LOG_LEVEL: "ERROR"
  E2E_MODELER_USERNAME: ${{ secrets.E2E_MODELER_USERNAME }}
  E2E_MODELER_PASSWORD: ${{ secrets.E2E_MODELER_PASSWORD }}
  EXTERNAL_ACS_HOST: ${{ secrets.EXTERNAL_ACS_HOST }}
  E2E_DEVOPS_USERNAME: ${{ secrets.E2E_DEVOPS_USERNAME }}
  E2E_DEVOPS_PASSWORD: ${{ secrets.E2E_DEVOPS_PASSWORD }}
  USERNAME_SUPER_ADMIN_ADF: ${{ secrets.USERNAME_SUPER_ADMIN_ADF }}
  PASSWORD_SUPER_ADMIN_ADF: ${{ secrets.PASSWORD_SUPER_ADMIN_ADF }}
  HR_USER: ${{ secrets.HR_USER }}
  HR_USER_PASSWORD: ${{ secrets.HR_USER_PASSWORD }}
  SMART_RUNNER_PATH: ".protractor-smartrunner"
  S3_DBP_PATH:  ${{ secrets.S3_DBP_PATH }}
  S3_BUILD_BUCKET_SHORT_NAME: ${{ secrets.S3_BUILD_BUCKET_SHORT_NAME }}
  NODE_OPTIONS: "--max-old-space-size=5120"
  DOCKER_REPOSITORY_DOMAIN: ${{ secrets.DOCKER_REPOSITORY_DOMAIN }}
  DOCKER_REPOSITORY_USER: ${{ secrets.DOCKER_REPOSITORY_USER }}
  DOCKER_REPOSITORY_PASSWORD: ${{ secrets.DOCKER_REPOSITORY_PASSWORD }}
  DOCKER_REPOSITORY_STORYBOOK: "${{ secrets.DOCKER_REPOSITORY_DOMAIN }}/alfresco/storybook"
  DOCKER_REPOSITORY: "${{ secrets.DOCKER_REPOSITORY_DOMAIN }}/alfresco/demo-shell"
  NPM_REGISTRY_ADDRESS: ${{ secrets.NPM_REGISTRY_ADDRESS }}
  NPM_REGISTRY_TOKEN: ${{ secrets.NPM_REGISTRY_TOKEN }}

jobs:
  setup:
    timeout-minutes: 20
    if: github.event.pull_request.merged || ${{ inputs.dry-run-release }}
    name: "Setup"
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: ./.github/actions/setup
        with:
          enable-cache: false
          enable-node-modules-cache: false
      - name: install
        run: |
          npm ci
          nx run cli:bundle
          nx run testing:bundle
      - uses: ./.github/actions/upload-node-modules-and-artifacts

  release-demoshell:
    needs: [setup]
    timeout-minutes: 15
    if: github.event.pull_request.merged || ${{ inputs.dry-run-release }}
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - run: git fetch --all
      - id: set-dryrun
        uses: ./.github/actions/enable-dryrun
        with:
          dry-run-flag: ${{ inputs.dry-run-release }}
      - uses: ./.github/actions/setup
        with:
          enable-cache: false
          enable-node-modules-cache: false
      - uses: ./.github/actions/download-node-modules-and-artifacts
      - name: release Demoshell docker
        run: |
          nx build demoshell --configuration production
          . ./scripts/travis/release/docker-tag.sh
          ./scripts/travis/release/release-demoshell-docker.sh ${{ steps.set-dryrun.outputs.dryrun }}

  release-storybook:
    needs: [setup]
    timeout-minutes: 15
    if: github.event.pull_request.merged || ${{ inputs.dry-run-release }}
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - run: git fetch --all
      - id: set-dryrun
        uses: ./.github/actions/enable-dryrun
        with:
          dry-run-flag: ${{ inputs.dry-run-release }}
      - uses: ./.github/actions/setup
        with:
          enable-cache: false
          enable-node-modules-cache: false
          act: ${{ inputs.dry-run-release }}
      - uses: ./.github/actions/download-node-modules-and-artifacts
      - name: release Storybook docker
        run: |
          nx run stories:build-storybook --configuration ci
          . ./scripts/travis/release/docker-tag.sh
          ./scripts/travis/release/release-storybook-docker.sh ${{ steps.set-dryrun.outputs.dryrun }}

  release-npm:
    needs: [setup]
    timeout-minutes: 15
    if: github.event.pull_request.merged == true || ${{ inputs.dry-run-release }}
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: ./.github/actions/setup
        with:
          enable-cache: false
          enable-node-modules-cache: false
      - id: set-dryrun
        uses: ./.github/actions/enable-dryrun
        with:
          dry-run-flag: ${{ inputs.dry-run-release }}
      - uses: ./.github/actions/download-node-modules-and-artifacts
      - name: check PR number
        id: action
        uses: kamatama41/get-pr-number-action@v0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: save PR number
        env:
          GH_TOKEN: ${{ github.token }}
        shell: bash
        run: |
          echo "PR_NUMBER=${{ steps.action.outputs.number }}" >> $GITHUB_ENV
      - name: build libraries
        run: |
          set -u;
          ./scripts/travis/build/bumpversion.sh
          nx affected:build $NX_CALCULATION_FLAGS --prod --exclude="demoshell" --skip-nx-cache
          nx affected $NX_CALCULATION_FLAGS --target=pretheme
      - name: release libraries
        run: ./scripts/travis/release/release-npm.sh ${{ steps.set-dryrun.outputs.dryrun }}

  npm-check-bundle:
    needs: [release-npm]
    timeout-minutes: 15
    if: github.event.pull_request.merged == true || ${{ inputs.dry-run-release }}
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - uses: ./.github/actions/npm-check-bundle
