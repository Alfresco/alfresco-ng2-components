name: "release"

on:
  workflow_call:
  pull_request:
    types: [closed]
    branches:
      - develop
      - master
      - develop-patch*
      - master-patch*


env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  GITHUB_BRANCH: ${{ github.ref_name }}
  TRAVIS_BUILD_DIR: ${{ github.workspace }}
  TRAVIS_COMMIT: ${{ github.sha }}
  BUILD_ID: ${{ github.run_id }}
  TRAVIS_RUN_NUMBER: ${{ github.run_attempt }}
  TRAVIS_BUILD_NUMBER: github-run-${{ github.run_id }}
  JOB_ID: ${{ github.run_id }}
  PROXY_HOST_BPM: ${{ secrets.E2E_HOST }}
  E2E_HOST_APA: ${{ secrets.E2E_HOST_APA }}
  E2E_HOST: ${{ secrets.E2E_HOST }}
  E2E_USERNAME: ${{ secrets.E2E_ADMIN_EMAIL_IDENTITY }}
  E2E_PASSWORD: ${{ secrets.E2E_PASSWORD }}
  E2E_ADMIN_EMAIL_IDENTITY: ${{ secrets.E2E_ADMIN_EMAIL_IDENTITY }}
  E2E_ADMIN_PASSWORD_IDENTITY: ${{ secrets.E2E_ADMIN_PASSWORD_IDENTITY }}
  USERNAME_ADF: ${{ secrets.E2E_USERNAME }}
  PASSWORD_ADF: ${{ secrets.E2E_PASSWORD }}
  URL_HOST_ADF: ${{ secrets.URL_HOST_ADF }}
  IDENTITY_ADMIN_EMAIL: ${{ secrets.E2E_ADMIN_EMAIL_IDENTITY }}
  IDENTITY_ADMIN_PASSWORD: ${{ secrets.E2E_ADMIN_PASSWORD_IDENTITY }}
  AWS_S3_BUCKET_ACTIVITI_LICENSE: ${{ secrets.AWS_S3_BUCKET_ACTIVITI_LICENSE }}
  HOST_SSO: ${{ secrets.HOST_SSO }}
  LOG_LEVEL: "ERROR"
  E2E_LOG_LEVEL: "ERROR"
  E2E_MODELER_USERNAME: ${{ secrets.E2E_MODELER_USERNAME }}
  E2E_MODELER_PASSWORD: ${{ secrets.E2E_MODELER_PASSWORD }}
  EXTERNAL_ACS_HOST: ${{ secrets.EXTERNAL_ACS_HOST }}
  E2E_DEVOPS_USERNAME: ${{ secrets.E2E_DEVOPS_USERNAME }}
  E2E_DEVOPS_PASSWORD: ${{ secrets.E2E_DEVOPS_PASSWORD }}
  USERNAME_SUPER_ADMIN_ADF: ${{ secrets.USERNAME_SUPER_ADMIN_ADF }}
  PASSWORD_SUPER_ADMIN_ADF: ${{ secrets.PASSWORD_SUPER_ADMIN_ADF }}
  HR_USER: ${{ secrets.HR_USER }}
  HR_USER_PASSWORD: ${{ secrets.HR_USER_PASSWORD }}
  NPM_REGISTRY_ADDRESS: ${{ secrets.NPM_REGISTRY_ADDRESS }}
  NPM_REGISTRY_TOKEN: ${{ secrets.NPM_REGISTRY_TOKEN }}
  DOCKER_REPOSITORY_USER: ${{ secrets.DOCKER_REPOSITORY_USER }}
  DOCKER_REPOSITORY_PASSWORD: ${{ secrets.DOCKER_REPOSITORY_PASSWORD }}
  DOCKER_REPOSITORY_DOMAIN: ${{ secrets.DOCKER_REPOSITORY_DOMAIN }}
  DOCKER_REPOSITORY_STORYBOOK: "${{ secrets.DOCKER_REPOSITORY_DOMAIN }}/alfresco/storybook"
  DOCKER_REPOSITORY: "${{ secrets.DOCKER_REPOSITORY_DOMAIN }}/alfresco/demo-shell"
  NODE_OPTIONS: "--max-old-space-size=5120"

jobs:
  # build:
  #   timeout-minutes: 20
  #   if: github.event.pull_request.merged == true
  #   name: "Build Components"
  #   runs-on: ubuntu-22.04
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0
  #     - uses: ./.github/actions/setup
  #     - run: npm -v
  #     - name: install
  #       run: |
  #         npm ci
  #         nx run cli:bundle
  #         nx run testing:bundle
  #     - uses: ./.github/actions/upload-build-artifacts

  release-demoshell:
    # needs: [build]
    timeout-minutes: 10
    # if: github.event.pull_request.merged == true
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - run: git fetch --all
      - uses: ./.github/actions/setup
      - name: clean
        run: |
          rm -rf nxcache
          rm -rf dist      
      - uses: ./.github/actions/download-build-artifacts
      - run: nx run cli:bundle
      - name: push Demoshell docker image
        run: |
          nx build demoshell --configuration production
          . ./scripts/travis/release/docker-tag.sh
          echo $TAGS
          ./scripts/travis/release/release-demoshell-docker.sh

  release-storybook:
    # needs: [build]
    timeout-minutes: 10
    # if: github.event.pull_request.merged == true
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: ./.github/actions/setup
      - name: clean
        run: |
          rm -rf nxcache
          rm -rf dist      
      - uses: ./.github/actions/download-build-artifacts
      - run: nx run cli:bundle
      - name: push Storybook docker image
        run: |
          nx run stories:build-storybook --configuration ci
          . ./scripts/travis/release/docker-tag.sh
          echo $TAGS     
          ./scripts/travis/release/release-storybook-docker.sh

  npm-release:
    # needs: [build]
    timeout-minutes: 10
    # if: github.event.pull_request.merged == true
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: ./.github/actions/setup
      - name: clean
        run: |
          rm -rf nxcache
          rm -rf dist      
      - uses: ./.github/actions/download-build-artifacts
      - run: nx run cli:bundle  
      - name: nx build
        run: |
          set -u;
          ./scripts/travis/build/bumpversion.sh
          nx affected:build $NX_CALCULATION_FLAGS --prod --exclude="demoshell"
          nx affected $NX_CALCULATION_FLAGS --target=pretheme
      - name: release
        run: ./scripts/travis/release/release-npm.sh

  npm-check-bundle:
    needs: [npm-release]
    timeout-minutes: 10
    # if: github.event.pull_request.merged == true
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: ./.github/actions/download-build-artifacts
      - name: Check npm bundle
        run: |
          export ADF_VERSION=$(npm view @alfresco/adf-core@${TAG_NPM} version)
          ./scripts/travis/build/npm-check-bundles.sh -v ${ADF_VERSION}
