git:
  depth: 3
  quiet: true

language: node_js
arch: arm64-graviton2
dist: bionic
node_js:
  - '12.18.4'

before_install: . ./scripts/ci/job_hooks/before_install.sh
install: echo "no install, see the first stage"

env:
    global:
        #E2E VARIABLES
        - SAVE_SCREENSHOT=true
        - REDIRECT_URI=/
        - REDIRECT_URI_LOGOUT=/logout/
        - BROWSER_RUN=true
        - MAXINSTANCES=2
        - DEMO_SHELL_DIR="./dist/demo-shell"
        - BUILT_LIBS_DIR="./lib/dist"
        - NODE_MODULES_DIR="./node_modules"

branches:
  only:
  - master
  - develop
  - /.*old-env.*/
  - /.*next-release.*/
  - /.*beta.*/

stages:
  - name: Setup
  - name: Lint & Build Dist & Release
    if: tag IS blank
  - name: Check bundle
    if: type = push AND tag IS blank
  - name: Unit test
    if: (branch != master AND type != cron AND tag IS blank) OR type = api
  - name: e2e Test
    if: (branch != master AND type != cron AND tag IS blank) OR type = api
  - name: Trigger Alpha ADF child build
    if: (branch = develop AND type = push) OR type = api
  - name: Trigger Beta ADF child build
    if: tag =~ .*beta.*
  - name: Release tag
    if: type = cron OR branch = master

addons:
    chrome: stable
before_script:
    - export GIT_HASH=`git rev-parse HEAD`
services:
    - xvfb

jobs:
    include:
        # Setup ======================
        - stage: Setup
          name: "Setup npm cache"
          script: npm ci
          workspaces:
            create:
              name: node_modules_cache
              paths:
                - "$NODE_MODULES_DIR"
            use: node_modules_cache

        # Run Only for any PR
        - stage: Lint & Build Dist & Release
          name:  Build
          script:
            - ./scripts/travis/build/build.sh
            - ./scripts/travis/release/release-npm.sh
            - ./scripts/travis/release/release-docker.sh
          workspaces:
            create:
              name: built_artefacts_cache
              paths:
                - "$DEMO_SHELL_DIR"
                - "$BUILT_LIBS_DIR"
            use: node_modules_cache

        - stage: Lint & Build Dist & Release
          name:  Lint
          script:
             - ./scripts/lint.sh
          workspaces:
            use: node_modules_cache

        - stage: Unit test
          name: Unit test content
          script:  ./scripts/travis/unit-test/content.sh
          workspaces:
            use: node_modules_cache

        - stage: Unit test
          name: Unit test core extension demo
          script: ./scripts/travis/unit-test/core-extension.sh
          workspaces:
            use: node_modules_cache

        - stage: Unit test
          name: Unit test process insights
          script: ./scripts/travis/unit-test/process.sh
          workspaces:
            use: node_modules_cache

        - stage: Unit test
          name: Unit test process-cloud
          script: ./scripts/travis/unit-test/process-cloud.sh
          workspaces:
            use: node_modules_cache

        - stage: Trigger Alpha ADF child build
          name: Trigger Alpha ADF child build
          script: ./scripts/travis/update/update-project.sh -p $TRAVIS_BUILD_NUMBER -t $GITHUB_TOKEN -v alpha
          workspaces:
            use: node_modules_cache

        - stage: Trigger Beta ADF child build
          name: Trigger Beta ADF child build
          script: ./scripts/travis/update/update-project.sh -p $TRAVIS_BUILD_NUMBER -t $GITHUB_TOKEN -v beta
          workspaces:
            use: node_modules_cache

        - stage: Release tag
          script: ./scripts/travis/release/git-tag.sh

        - stage: e2e Test
          name: core
          before_script:
            - ./scripts/ci/job_hooks/before_e2e.sh
            - ./scripts/ci/check-env/check-cs-env.sh || travis_terminate 1
            - ./scripts/ci/check-env/check-ps-env.sh || travis_terminate 1
          script: ./scripts/travis/e2e/core-e2e.sh
          after_script: ./scripts/ci/job_hooks/after_e2e.sh
          workspaces:
            create:
              name: smartrunner-cache-core
              paths:
                - "$SMART_RUNNER_DIRECTORY"
            use:
              - node_modules_cache
              - built_artefacts_cache
              - smartrunner-cache-core

        - stage: e2e Test
          name:  content
          before_script:
              - ./scripts/ci/job_hooks/before_e2e.sh
              - ./scripts/ci/check-env/check-cs-env.sh || travis_terminate 1
          script: ./scripts/travis/e2e/content-services-e2e.sh
          after_script: ./scripts/ci/job_hooks/after_e2e.sh
          workspaces:
            create:
              name: smartrunner-cache-content
              paths:
                - "$SMART_RUNNER_DIRECTORY"
            use:
              - node_modules_cache
              - built_artefacts_cache
              - smartrunner-cache-content

        - stage: e2e Test
          name:  search
          before_script:
              - ./scripts/ci/job_hooks/before_e2e.sh
              - ./scripts/ci/check-env/check-cs-env.sh || travis_terminate 1
          script: ./scripts/travis/e2e/search-e2e.sh
          after_script: ./scripts/ci/job_hooks/after_e2e.sh
          workspaces:
            create:
              name: smartrunner-cache-search
              paths:
                - "$SMART_RUNNER_DIRECTORY"
            use:
              - node_modules_cache
              - built_artefacts_cache
              - smartrunner-cache-search

        - stage: e2e Test
          name: process
          before_script:
              - ./scripts/ci/job_hooks/before_e2e.sh || travis_terminate 1
              - ./scripts/ci/check-env/check-ps-env.sh || travis_terminate 1
              - ./scripts/ci/check-env/check-external-cs-env.sh || travis_terminate 1
          script: ./scripts/travis/e2e/process-services-e2e.sh
          after_script: ./scripts/ci/job_hooks/after_e2e.sh
          workspaces:
            create:
              name: smartrunner-cache-process
              paths:
                - "$SMART_RUNNER_DIRECTORY"
            use:
              - node_modules_cache
              - built_artefacts_cache
              - smartrunner-cache-process

        - stage: e2e Test
          name: process Cloud
          before_script:
              - ./scripts/ci/job_hooks/before_e2e.sh
              - ./scripts/ci/check-env/check-cs-env.sh || travis_terminate 1
              - ./scripts/ci/check-env/check-ps-cloud-env.sh || travis_terminate 1
          script: ./scripts/travis/e2e/process-services-cloud-e2e.sh
          after_script: ./scripts/ci/job_hooks/after_e2e.sh
          workspaces:
            create:
              name: smartrunner-cache-process-cloud
              paths:
                - "$SMART_RUNNER_DIRECTORY"
            use:
              - node_modules_cache
              - built_artefacts_cache
              - smartrunner-cache-process-cloud

        - stage: Check bundle
          script:
          - ADF_VERSION=$(npm view @alfresco/adf-core@${TAG_NPM} version)
          - ./scripts/travis/build/npm-check-bundles.sh -v ${ADF_VERSION}
          workspaces:
            use: node_modules_cache

notifications:
  slack:
    on_pull_requests: false
    rooms:
      secure: "qcTP/+rhVweMSZZAQMPz4sW7boS8XC0RX1SPYgg7hIfxBr9747WpRLkJ1sirkVaXI/6XfYAyl42CTfPmTuJxIC+co/NSnEDknwVsnKZd0O/ykTpo+mxIN4BTZX8dm+gELR5IEYQPs+Yki3ZnD9b+0mCK1yD8JallKCQeE2U9BhzZhP/Fn0ce35EulybNp3QQDaox0XC+7gadMdxlvK8mzP1scw76wRLtx25QLxxV+OwEw0bzyh8y3onfjHfnoDcUQWRTNdnjapzmgf1LNdC202A5kwp5sJggfSDr+ActRqaMvv4BbMsFpdan34B6zPQJfyZL1r8IB8O8BEKcAaOUVcTjnZAOom8kHS8F07/mo5xnNYmV8oNX2/egr1CiG4U0EAGF2XGqM+vetYnF88LTEzy84kVxmSwKGVfzlGOyTplMXJ1iCENndtfWm1AXhAFj5RSsSAZg6IStTM+mcpnC75moEwQtj8bTenwehHz1HQAjQX7xeTQo27SxDc7oqp1ReyXCllMjKxckjVGmp2j6yxn1Jl55kivBj57vluLtEtziOGluVELP5E2fV0VAuErNhnjLm4LJARVN76PQaTOXYwATVVJJDhb/77TesvxQsr3VfiROEKm7QB7IDFjghjLLisSX67JQ5+7K/qMlqf9+9hNw4n0v1eMylVjt+gyxspc="
    on_failure: always
    on_success: change
    template:
      - "Repo `%{repository_slug}` *%{result}* build (<%{build_url}|#%{build_number}>) for commit (<%{compare_url}|%{commit}>) on branch `%{branch}`."
      - "Author: %{author} Execution time: *%{duration}*"
      - "Message: %{message}"

cache:
  npm: true
  directories:
  - tmp
