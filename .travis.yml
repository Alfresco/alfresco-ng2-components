language: node_js
dist: trusty
sudo: required
node_js:
 # Use the explicit NodeJS LTS version 8.9.4 to avoid any automatic upgrade of the version.
  - '8.9.4'
env:
    global:
        - AFFECTED_LIBS="process-services-cloud"

addons:
    chrome: stable
before_script:
    - "sudo chown root /opt/google/chrome/chrome-sandbox"
    - "sudo chmod 4755 /opt/google/chrome/chrome-sandbox"

before_install:
    - export CHROME_BIN=chromium-browser
    - export DISPLAY=:99.0
    - sh -e /etc/init.d/xvfb start
    - sleep 3 # give xvfb some time to start

jobs:
    include:
        - stage: Warm Up Cache
          script:  if ([ "$TRAVIS_BRANCH" = "master" ]); then
                (./scripts/npm-build-all.sh  || exit 1;);
            else
                (./scripts/update-version.sh -gnu -alpha && npm install || exit 1;);
            fi
        - stage: Lint
          script:
            - ./scripts/lint.sh
            - npm run spellcheck
        - stage: Unit Test
          env: STAGE=core
          script:   if [[ $AFFECTED_LIBS =~ "core" ]];
                    then
                        echo "core";
                        ng test core --watch=false || exit 1;
                    else
                        echo "no core";
                    fi
        - stage: Unit test
          env: STAGE=content-services
          script:   if [[ $AFFECTED_LIBS =~ "content-services" ]];
                    then
                        echo "content-services";
                        ng test content-services --watch=false || exit 1;
                    else
                        echo "no content-services";
                    fi
        - stage: Unit Test
          env: STAGE=process-services-cloud
          script:   if [[ $AFFECTED_LIBS =~ "process-services-cloud" ]];
                    then
                        echo "process-services-cloud";
                        ng test process-services-cloud --watch=false || exit 1;
                    else
                        echo "NO process-services-cloud";
                    fi
        - stage: Unit test
          env: STAGE=process-services
          script:   if [[ $AFFECTED_LIBS =~ "process-services" ]];
                    then
                        echo "process-services";
                        ng test process-services --watch=false || exit 1;
                    else
                        echo "NO process-services";
                    fi
        - stage: Unit test
          env: STAGE=extensions
          script:   if [[ $AFFECTED_LIBS =~ "extensions" ]];
                    then
                        ng test extensions --watch=false || exit 1;
                    fi
        - stage: Unit test
          env: STAGE=insights
          script:   if [[ $AFFECTED_LIBS =~ "insights" ]];
                    then
                        ng test insights --watch=false || exit 1;
                    fi
        - stage: Unit test
          env: STAGE=demo-shell
          script:   if ([ "$TRAVIS_BRANCH" = "master" ]); then
                            (./scripts/start.sh -t -ss || exit 1;);
                       else
                            (./scripts/start.sh -dev -t -ss -vjsapi alpha || exit 1;);
                    fi
# jobs:
#   include:
#     - stage: Publish alpha to NPM
#       before_install: skip
#       install: skip
#       script: skip
#       deploy:
#         provider: script
#         script: (./scripts/update-version.sh -v $(./scripts/next_version.sh)-$(git rev-parse HEAD) -vj $(npm view alfresco-js-api@alpha version) -gnu) && (./scripts/npm-publish.sh -r $NPM_REGISTRY_ADDRESS -token $NPM_REGISTRY_TOKEN -t alpha --sleep 20 || exit 1;);
#         on:
#           branch: development
#         skip_cleanup: true
#     - stage: Publish beta to NPM
#       before_install: skip
#       install: skip
#       script: skip
#       deploy:
#         provider: script
#         script: (./scripts/update-version.sh -v $TRAVIS_TAG -gnu) && (./scripts/npm-publish.sh -r $NPM_REGISTRY_ADDRESS -token $NPM_REGISTRY_TOKEN -t beta --sleep 20 || exit 1;);
#         on:
#           tags: true
#         skip_cleanup: true


# Send coverage data to codecov
after_success:
    bash <(curl -s https://codecov.io/bash) -X gcov


cache:
  directories:
  - node_modules
