language: node_js
dist: trusty
sudo: required
node_js:
  - "8"

addons:
    chrome: stable
before_script:
    - "sudo chown root /opt/google/chrome/chrome-sandbox"
    - "sudo chmod 4755 /opt/google/chrome/chrome-sandbox"

before_install:
    - export CHROME_BIN=chromium-browser
    - export DISPLAY=:99.0
    - sh -e /etc/init.d/xvfb start

env:
  matrix:
    - MODULE=core
    - MODULE=insights
    - MODULE=process-services
    - MODULE=content-services
    - MODULE=demo-shell
    - MODULE=packaging

install:
    - if ([ "$MODULE" != "demo-shell" ]); then
        if ([ "$TRAVIS_BRANCH" = "master" ]); then
            (./scripts/npm-build-all.sh  || exit 1;);
        else
            (./scripts/npm-build-all.sh  -vjsapi alpha -sb || exit 1;);
        fi
      fi

script:
    - if ([ "$MODULE" == "core" ]); then
            (./scripts/npm-build-all.sh -si -sb -t "core" || exit 1;);
      fi

    - if ([ "$MODULE" == "process-services" ]); then
            (./scripts/npm-build-all.sh -si -sb -t "process-services" || exit 1;);
      fi

    - if ([ "$MODULE" == "insights" ]); then
            (./scripts/npm-build-all.sh -si -sb -t "insights" || exit 1;);
      fi

    - if ([ "$MODULE" == "content-services" ]); then
            (./scripts/npm-build-all.sh -si -sb -t "content-services" || exit 1;);
      fi

    - if ([ "$MODULE" == "packaging" ]); then
            (npm run build-lib || exit 1;);
      fi

    - if ([ "$MODULE" == "demo-shell" ]); then
       if ([ "$TRAVIS_BRANCH" = "master" ]); then
            (./scripts/start.sh -t -ss || exit 1;);
       else
            (./scripts/start.sh -dev -t -ss -vjsapi alpha || exit 1;);
       fi
      fi

jobs:
    include:
        - stage: Demo shell prod && Demo shell e2e && Check ADF exports
          script: ./scripts/test-dist.sh -n $TRAVIS_BUILD_NUMBER && (./scripts/pr-publish.sh -n $TRAVIS_BUILD_NUMBER -r $REPO_DOCKER -u $USERNAME_DOCKER -p $PASSWORD_DOCKER || exit 1)
        - # Test Update version 2.0.0
          script: ./scripts/test-e2e-bc.sh
        - # Test expors
          script: npm run test-export
        - stage: Update Apps dependencies
        - # Test Update generator-ng2-alfresco-app
          if: tag =~ .*beta.*
          script: ./scripts/update-project.sh -gnu -t $GITHUB_TOKEN -n generator-ng2-alfresco-app
        - # Test Update alfresco-content-app
          if: tag =~ .*beta.*
          script: ./scripts/update-project.sh -gnu -t $GITHUB_TOKEN -n alfresco-content-app
        - # Test Update adf-app-manager-ui
          if: tag =~ .*beta.*
          script: ./scripts/update-project.sh -gnu -t $GITHUB_TOKEN -n adf-app-manager-ui
        - # Test Update aalfresco-ng2-components
          if: tag =~ .*beta.*
          script: ./scripts/update-project.sh -gnu -t $GITHUB_TOKEN -n alfresco-ng2-components
        - # Test Update alfresco-modeler-app
          if: tag =~ .*beta.*
          script: ./scripts/update-project.sh -gnu -t $GITHUB_TOKEN -n alfresco-modeler-app
        - stage: Deploy PR
          script: node ./scripts/pr-deploy.js -n $TRAVIS_BUILD_NUMBER -u $RANCHER_TOKEN -p $RANCHER_SECRET -s $REPO_RANCHER --image "docker:$REPO_DOCKER/adf/demo-shell:$TRAVIS_BUILD_NUMBER" --env $ENVIRONMENT_NAME -r $ENVIRONMENT_URL || exit 1

# jobs:
#   include:
#     - stage: Publish alpha to NPM
#       before_install: skip
#       install: skip
#       script: skip
#       deploy:
#         provider: script
#         script: (./scripts/update-version.sh -v $(./scripts/next_version.sh)-$(git rev-parse HEAD) -vj $(npm view alfresco-js-api@alpha version) -gnu) && (./scripts/npm-publish.sh -r $NPM_REGISTRY_ADDRESS -token $NPM_REGISTRY_TOKEN -t alpha --sleep 20 || exit 1;);
#         on:
#           branch: development
#         skip_cleanup: true
#     - stage: Publish beta to NPM
#       before_install: skip
#       install: skip
#       script: skip
#       deploy:
#         provider: script
#         script: (./scripts/update-version.sh -v $TRAVIS_TAG -gnu) && (./scripts/npm-publish.sh -r $NPM_REGISTRY_ADDRESS -token $NPM_REGISTRY_TOKEN -t beta --sleep 20 || exit 1;);
#         on:
#           tags: true
#         skip_cleanup: true


# Send coverage data to codecov
after_success:
  bash <(curl -s https://codecov.io/bash) -X gcov

cache:
  directories:
  - node_modules
