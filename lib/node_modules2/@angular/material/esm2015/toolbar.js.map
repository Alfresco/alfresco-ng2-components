{"version":3,"file":"toolbar.js","sources":["../../packages/material/toolbar/toolbar.js","../../packages/material/toolbar/toolbar-module.js","../../packages/material/toolbar/public-api.js","../../packages/material/toolbar/index.js"],"sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ChangeDetectionStrategy, Component, ContentChildren, Directive, ElementRef, isDevMode, QueryList, ViewEncapsulation } from \"@angular/core\";\nimport { mixinColor } from \"@angular/material/core\";\nimport { Platform } from \"@angular/cdk/platform\";\n/**\n * \\@docs-private\n */\nexport class MatToolbarBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nfunction MatToolbarBase_tsickle_Closure_declarations() {\n    /** @type {?} */\n    MatToolbarBase.prototype._elementRef;\n}\nexport const /** @type {?} */ _MatToolbarMixinBase = mixinColor(MatToolbarBase);\nexport class MatToolbarRow {\n}\nMatToolbarRow.decorators = [\n    { type: Directive, args: [{\n                selector: 'mat-toolbar-row',\n                exportAs: 'matToolbarRow',\n                host: { 'class': 'mat-toolbar-row' },\n            },] },\n];\n/** @nocollapse */\nMatToolbarRow.ctorParameters = () => [];\nfunction MatToolbarRow_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    MatToolbarRow.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    MatToolbarRow.ctorParameters;\n}\nexport class MatToolbar extends _MatToolbarMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _platform\n     */\n    constructor(elementRef, _platform) {\n        super(elementRef);\n        this._platform = _platform;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (!isDevMode() || !this._platform.isBrowser) {\n            return;\n        }\n        this._checkToolbarMixedModes();\n        this._toolbarRows.changes.subscribe(() => this._checkToolbarMixedModes());\n    }\n    /**\n     * Throws an exception when developers are attempting to combine the different toolbar row modes.\n     * @return {?}\n     */\n    _checkToolbarMixedModes() {\n        if (!this._toolbarRows.length) {\n            return;\n        }\n        // Check if there are any other DOM nodes that can display content but aren't inside of\n        // a <mat-toolbar-row> element.\n        const /** @type {?} */ isCombinedUsage = [].slice.call(this._elementRef.nativeElement.childNodes)\n            .filter(node => !(node.classList && node.classList.contains('mat-toolbar-row')))\n            .filter(node => node.nodeType !== Node.COMMENT_NODE)\n            .some(node => node.textContent.trim());\n        if (isCombinedUsage) {\n            throwToolbarMixedModesError();\n        }\n    }\n}\nMatToolbar.decorators = [\n    { type: Component, args: [{selector: 'mat-toolbar',\n                exportAs: 'matToolbar',\n                template: \"<ng-content></ng-content><ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\",\n                styles: [\".mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}.mat-toolbar-multiple-rows{min-height:64px}.mat-toolbar-row,.mat-toolbar-single-row{height:64px}@media (max-width:600px){.mat-toolbar-multiple-rows{min-height:56px}.mat-toolbar-row,.mat-toolbar-single-row{height:56px}}\"],\n                inputs: ['color'],\n                host: {\n                    'class': 'mat-toolbar',\n                    '[class.mat-toolbar-multiple-rows]': 'this._toolbarRows.length',\n                    '[class.mat-toolbar-single-row]': '!this._toolbarRows.length'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                preserveWhitespaces: false,\n            },] },\n];\n/** @nocollapse */\nMatToolbar.ctorParameters = () => [\n    { type: ElementRef, },\n    { type: Platform, },\n];\nMatToolbar.propDecorators = {\n    \"_toolbarRows\": [{ type: ContentChildren, args: [MatToolbarRow,] },],\n};\nfunction MatToolbar_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    MatToolbar.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    MatToolbar.ctorParameters;\n    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */\n    MatToolbar.propDecorators;\n    /**\n     * Reference to all toolbar row elements that have been projected.\n     * @type {?}\n     */\n    MatToolbar.prototype._toolbarRows;\n    /** @type {?} */\n    MatToolbar.prototype._platform;\n}\n/**\n * Throws an exception when attempting to combine the different toolbar row modes.\n * \\@docs-private\n * @return {?}\n */\nexport function throwToolbarMixedModesError() {\n    throw Error('MatToolbar: Attempting to combine different toolbar modes. ' +\n        'Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content ' +\n        'inside of a `<mat-toolbar>` for a single row.');\n}\n//# sourceMappingURL=toolbar.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { NgModule } from \"@angular/core\";\nimport { MatCommonModule } from \"@angular/material/core\";\nimport { PlatformModule } from \"@angular/cdk/platform\";\nimport { MatToolbar, MatToolbarRow } from \"./toolbar\";\nexport class MatToolbarModule {\n}\nMatToolbarModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [MatCommonModule, PlatformModule],\n                exports: [MatToolbar, MatToolbarRow, MatCommonModule],\n                declarations: [MatToolbar, MatToolbarRow],\n            },] },\n];\n/** @nocollapse */\nMatToolbarModule.ctorParameters = () => [];\nfunction MatToolbarModule_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    MatToolbarModule.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    MatToolbarModule.ctorParameters;\n}\n//# sourceMappingURL=toolbar-module.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport { MatToolbarModule } from \"./toolbar-module\";\nexport { MatToolbarBase, _MatToolbarMixinBase, MatToolbarRow, MatToolbar, throwToolbarMixedModesError } from \"./toolbar\";\n//# sourceMappingURL=public-api.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { MatToolbarModule, MatToolbarBase, _MatToolbarMixinBase, MatToolbarRow, MatToolbar, throwToolbarMixedModesError } from \"./public-api\";\n//# sourceMappingURL=index.js.map"],"names":[],"mappings":"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"}