{"version":3,"file":"sidenav.js","sources":["../../packages/material/sidenav/drawer.js","../../packages/material/sidenav/sidenav.js","../../packages/material/sidenav/sidenav-module.js","../../packages/material/sidenav/public-api.js","../../packages/material/sidenav/index.js"],"sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { animate, state, style, transition, trigger } from \"@angular/animations\";\nimport { FocusTrapFactory, FocusMonitor } from \"@angular/cdk/a11y\";\nimport { Directionality } from \"@angular/cdk/bidi\";\nimport { coerceBooleanProperty } from \"@angular/cdk/coercion\";\nimport { ESCAPE } from \"@angular/cdk/keycodes\";\nimport { Platform } from \"@angular/cdk/platform\";\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, ContentChildren, ElementRef, EventEmitter, forwardRef, Inject, Input, NgZone, Optional, Output, QueryList, ViewEncapsulation, InjectionToken, } from \"@angular/core\";\nimport { DOCUMENT } from \"@angular/common\";\nimport { merge } from \"rxjs/observable/merge\";\nimport { filter } from \"rxjs/operators/filter\";\nimport { take } from \"rxjs/operators/take\";\nimport { startWith } from \"rxjs/operators/startWith\";\nimport { takeUntil } from \"rxjs/operators/takeUntil\";\nimport { debounceTime } from \"rxjs/operators/debounceTime\";\nimport { map } from \"rxjs/operators/map\";\nimport { Subject } from \"rxjs/Subject\";\nimport { Observable } from \"rxjs/Observable\";\n/**\n * Throws an exception when two MatDrawer are matching the same position.\n * @param {?} position\n * @return {?}\n */\nexport function throwMatDuplicatedDrawerError(position) {\n    throw Error(`A drawer was already declared for 'position=\"${position}\"'`);\n}\n/**\n * Drawer toggle promise result.\n * @deprecated\n */\nexport class MatDrawerToggleResult {\n    /**\n     * @param {?} type\n     * @param {?} animationFinished\n     */\n    constructor(type, animationFinished) {\n        this.type = type;\n        this.animationFinished = animationFinished;\n    }\n}\nfunction MatDrawerToggleResult_tsickle_Closure_declarations() {\n    /**\n     * Whether the drawer is opened or closed.\n     * @type {?}\n     */\n    MatDrawerToggleResult.prototype.type;\n    /**\n     * Whether the drawer animation is finished.\n     * @type {?}\n     */\n    MatDrawerToggleResult.prototype.animationFinished;\n}\n/**\n * Configures whether drawers should use auto sizing by default.\n */\nexport const /** @type {?} */ MAT_DRAWER_DEFAULT_AUTOSIZE = new InjectionToken('MAT_DRAWER_DEFAULT_AUTOSIZE');\nexport class MatDrawerContent {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _container\n     */\n    constructor(_changeDetectorRef, _container) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._container = _container;\n        /**\n         * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n         * drawer is open. We use margin rather than transform even for push mode because transform breaks\n         * fixed position elements inside of the transformed element.\n         */\n        this._margins = { left: null, right: null };\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._container._contentMargins.subscribe(margins => {\n            this._margins = margins;\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n}\nMatDrawerContent.decorators = [\n    { type: Component, args: [{selector: 'mat-drawer-content',\n                template: '<ng-content></ng-content>',\n                host: {\n                    'class': 'mat-drawer-content',\n                    '[style.margin-left.px]': '_margins.left',\n                    '[style.margin-right.px]': '_margins.right',\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                preserveWhitespaces: false,\n            },] },\n];\n/** @nocollapse */\nMatDrawerContent.ctorParameters = () => [\n    { type: ChangeDetectorRef, },\n    { type: MatDrawerContainer, decorators: [{ type: Inject, args: [forwardRef(() => MatDrawerContainer),] },] },\n];\nfunction MatDrawerContent_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    MatDrawerContent.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    MatDrawerContent.ctorParameters;\n    /**\n     * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n     * drawer is open. We use margin rather than transform even for push mode because transform breaks\n     * fixed position elements inside of the transformed element.\n     * @type {?}\n     */\n    MatDrawerContent.prototype._margins;\n    /** @type {?} */\n    MatDrawerContent.prototype._changeDetectorRef;\n    /** @type {?} */\n    MatDrawerContent.prototype._container;\n}\n/**\n * This component corresponds to a drawer that can be opened on the drawer container.\n */\nexport class MatDrawer {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _focusTrapFactory\n     * @param {?} _focusMonitor\n     * @param {?} _platform\n     * @param {?} _doc\n     */\n    constructor(_elementRef, _focusTrapFactory, _focusMonitor, _platform, _doc) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._focusMonitor = _focusMonitor;\n        this._platform = _platform;\n        this._doc = _doc;\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        /**\n         * Whether the drawer is initialized. Used for disabling the initial animation.\n         */\n        this._enableAnimations = false;\n        this._position = 'start';\n        this._mode = 'over';\n        this._disableClose = false;\n        /**\n         * Whether the drawer is opened.\n         */\n        this._opened = false;\n        /**\n         * Emits whenever the drawer has started animating.\n         */\n        this._animationStarted = new EventEmitter();\n        /**\n         * Current state of the sidenav animation.\n         */\n        this._animationState = 'void';\n        /**\n         * Event emitted when the drawer open state is changed.\n         */\n        this.openedChange = new EventEmitter();\n        /**\n         * Event emitted when the drawer is fully opened.\n         * @deprecated Use `opened` instead.\n         */\n        this.onOpen = this._openedStream;\n        /**\n         * Event emitted when the drawer is fully closed.\n         * @deprecated Use `closed` instead.\n         */\n        this.onClose = this._closedStream;\n        /**\n         * Event emitted when the drawer's position changes.\n         */\n        this.onPositionChanged = new EventEmitter();\n        /**\n         * @deprecated\n         */\n        this.onAlignChanged = new EventEmitter();\n        /**\n         * An observable that emits when the drawer mode changes. This is used by the drawer container to\n         * to know when to when the mode changes so it can adapt the margins on the content.\n         */\n        this._modeChanged = new Subject();\n        this.openedChange.subscribe((opened) => {\n            if (opened) {\n                if (this._doc) {\n                    this._elementFocusedBeforeDrawerWasOpened = /** @type {?} */ (this._doc.activeElement);\n                }\n                if (this._isFocusTrapEnabled && this._focusTrap) {\n                    this._focusTrap.focusInitialElementWhenReady();\n                }\n            }\n            else {\n                this._restoreFocus();\n            }\n        });\n    }\n    /**\n     * The side that the drawer is attached to.\n     * @return {?}\n     */\n    get position() { return this._position; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set position(value) {\n        // Make sure we have a valid value.\n        value = value === 'end' ? 'end' : 'start';\n        if (value != this._position) {\n            this._position = value;\n            this.onAlignChanged.emit();\n            this.onPositionChanged.emit();\n        }\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    get align() { return this.position; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set align(value) { this.position = value; }\n    /**\n     * Mode of the drawer; one of 'over', 'push' or 'side'.\n     * @return {?}\n     */\n    get mode() { return this._mode; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set mode(value) {\n        this._mode = value;\n        this._modeChanged.next();\n    }\n    /**\n     * Whether the drawer can be closed with the escape key or by clicking on the backdrop.\n     * @return {?}\n     */\n    get disableClose() { return this._disableClose; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableClose(value) { this._disableClose = coerceBooleanProperty(value); }\n    /**\n     * Event emitted when the drawer has been opened.\n     * @return {?}\n     */\n    get _openedStream() {\n        return this.openedChange.pipe(filter(o => o), map(() => { }));\n    }\n    /**\n     * Event emitted when the drawer has started opening.\n     * @return {?}\n     */\n    get openedStart() {\n        return this._animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState.indexOf('open') === 0), map(() => { }));\n    }\n    /**\n     * Event emitted when the drawer has been closed.\n     * @return {?}\n     */\n    get _closedStream() {\n        return this.openedChange.pipe(filter(o => !o), map(() => { }));\n    }\n    /**\n     * Event emitted when the drawer has started closing.\n     * @return {?}\n     */\n    get closedStart() {\n        return this._animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState === 'void'), map(() => { }));\n    }\n    /**\n     * @return {?}\n     */\n    get _isFocusTrapEnabled() {\n        // The focus trap is only enabled when the drawer is open in any mode other than side.\n        return this.opened && this.mode !== 'side';\n    }\n    /**\n     * If focus is currently inside the drawer, restores it to where it was before the drawer\n     * opened.\n     * @return {?}\n     */\n    _restoreFocus() {\n        const /** @type {?} */ activeEl = this._doc && this._doc.activeElement;\n        if (activeEl && this._elementRef.nativeElement.contains(activeEl)) {\n            if (this._elementFocusedBeforeDrawerWasOpened instanceof HTMLElement) {\n                this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, this._openedVia);\n            }\n            else {\n                this._elementRef.nativeElement.blur();\n            }\n        }\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        this._openedVia = null;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        this._focusTrap.enabled = this._isFocusTrapEnabled;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // Enable the animations after the lifecycle hooks have run, in order to avoid animating\n        // drawers that are open by default. When we're on the server, we shouldn't enable the\n        // animations, because we don't want the drawer to animate the first time the user sees\n        // the page.\n        if (this._platform.isBrowser) {\n            this._enableAnimations = true;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n    }\n    /**\n     * Whether the drawer is opened. We overload this because we trigger an event when it\n     * starts or end.\n     * @return {?}\n     */\n    get opened() { return this._opened; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set opened(v) {\n        this.toggle(coerceBooleanProperty(v));\n    }\n    /**\n     * Open the drawer.\n     * @param {?=} openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     * @return {?}\n     */\n    open(openedVia) {\n        return this.toggle(true, openedVia);\n    }\n    /**\n     * Close the drawer.\n     * @return {?}\n     */\n    close() {\n        return this.toggle(false);\n    }\n    /**\n     * Toggle this drawer.\n     * @param {?=} isOpen Whether the drawer should be open.\n     * @param {?=} openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     * @return {?}\n     */\n    toggle(isOpen = !this.opened, openedVia = 'program') {\n        this._opened = isOpen;\n        if (isOpen) {\n            this._animationState = this._enableAnimations ? 'open' : 'open-instant';\n            this._openedVia = openedVia;\n        }\n        else {\n            this._animationState = 'void';\n            this._restoreFocus();\n        }\n        if (this._focusTrap) {\n            this._focusTrap.enabled = this._isFocusTrapEnabled;\n        }\n        // TODO(crisbeto): This promise is here for backwards-compatibility.\n        // It should be removed next time we do breaking changes in the drawer.\n        return new Promise(resolve => {\n            this.openedChange.pipe(take(1)).subscribe(open => {\n                resolve(new MatDrawerToggleResult(open ? 'open' : 'close', true));\n            });\n        });\n    }\n    /**\n     * Handles the keyboard events.\n     * \\@docs-private\n     * @param {?} event\n     * @return {?}\n     */\n    handleKeydown(event) {\n        if (event.keyCode === ESCAPE && !this.disableClose) {\n            this.close();\n            event.stopPropagation();\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onAnimationStart(event) {\n        this._animationStarted.emit(event);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onAnimationEnd(event) {\n        const { fromState, toState } = event;\n        if (toState.indexOf('open') === 0 && fromState === 'void') {\n            this.openedChange.emit(true);\n        }\n        else if (toState === 'void' && fromState.indexOf('open') === 0) {\n            this.openedChange.emit(false);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get _width() {\n        return this._elementRef.nativeElement ? (this._elementRef.nativeElement.offsetWidth || 0) : 0;\n    }\n}\nMatDrawer.decorators = [\n    { type: Component, args: [{selector: 'mat-drawer',\n                exportAs: 'matDrawer',\n                template: '<ng-content></ng-content>',\n                animations: [\n                    trigger('transform', [\n                        state('open, open-instant', style({\n                            transform: 'translate3d(0, 0, 0)',\n                            visibility: 'visible',\n                        })),\n                        state('void', style({\n                            visibility: 'hidden',\n                        })),\n                        transition('void => open-instant', animate('0ms')),\n                        transition('void <=> open, open-instant => void', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))\n                    ])\n                ],\n                host: {\n                    'class': 'mat-drawer',\n                    '[@transform]': '_animationState',\n                    '(@transform.start)': '_onAnimationStart($event)',\n                    '(@transform.done)': '_onAnimationEnd($event)',\n                    '(keydown)': 'handleKeydown($event)',\n                    // must prevent the browser from aligning text based on value\n                    '[attr.align]': 'null',\n                    '[class.mat-drawer-end]': 'position === \"end\"',\n                    '[class.mat-drawer-over]': 'mode === \"over\"',\n                    '[class.mat-drawer-push]': 'mode === \"push\"',\n                    '[class.mat-drawer-side]': 'mode === \"side\"',\n                    'tabIndex': '-1',\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                preserveWhitespaces: false,\n            },] },\n];\n/** @nocollapse */\nMatDrawer.ctorParameters = () => [\n    { type: ElementRef, },\n    { type: FocusTrapFactory, },\n    { type: FocusMonitor, },\n    { type: Platform, },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] },] },\n];\nMatDrawer.propDecorators = {\n    \"position\": [{ type: Input },],\n    \"align\": [{ type: Input },],\n    \"mode\": [{ type: Input },],\n    \"disableClose\": [{ type: Input },],\n    \"openedChange\": [{ type: Output },],\n    \"_openedStream\": [{ type: Output, args: ['opened',] },],\n    \"openedStart\": [{ type: Output },],\n    \"_closedStream\": [{ type: Output, args: ['closed',] },],\n    \"closedStart\": [{ type: Output },],\n    \"onOpen\": [{ type: Output, args: ['open',] },],\n    \"onClose\": [{ type: Output, args: ['close',] },],\n    \"onPositionChanged\": [{ type: Output, args: ['positionChanged',] },],\n    \"onAlignChanged\": [{ type: Output, args: ['align-changed',] },],\n    \"opened\": [{ type: Input },],\n};\nfunction MatDrawer_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    MatDrawer.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    MatDrawer.ctorParameters;\n    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */\n    MatDrawer.propDecorators;\n    /** @type {?} */\n    MatDrawer.prototype._focusTrap;\n    /** @type {?} */\n    MatDrawer.prototype._elementFocusedBeforeDrawerWasOpened;\n    /**\n     * Whether the drawer is initialized. Used for disabling the initial animation.\n     * @type {?}\n     */\n    MatDrawer.prototype._enableAnimations;\n    /** @type {?} */\n    MatDrawer.prototype._position;\n    /** @type {?} */\n    MatDrawer.prototype._mode;\n    /** @type {?} */\n    MatDrawer.prototype._disableClose;\n    /**\n     * Whether the drawer is opened.\n     * @type {?}\n     */\n    MatDrawer.prototype._opened;\n    /**\n     * How the sidenav was opened (keypress, mouse click etc.)\n     * @type {?}\n     */\n    MatDrawer.prototype._openedVia;\n    /**\n     * Emits whenever the drawer has started animating.\n     * @type {?}\n     */\n    MatDrawer.prototype._animationStarted;\n    /**\n     * Current state of the sidenav animation.\n     * @type {?}\n     */\n    MatDrawer.prototype._animationState;\n    /**\n     * Event emitted when the drawer open state is changed.\n     * @type {?}\n     */\n    MatDrawer.prototype.openedChange;\n    /**\n     * Event emitted when the drawer is fully opened.\n     * @deprecated Use `opened` instead.\n     * @type {?}\n     */\n    MatDrawer.prototype.onOpen;\n    /**\n     * Event emitted when the drawer is fully closed.\n     * @deprecated Use `closed` instead.\n     * @type {?}\n     */\n    MatDrawer.prototype.onClose;\n    /**\n     * Event emitted when the drawer's position changes.\n     * @type {?}\n     */\n    MatDrawer.prototype.onPositionChanged;\n    /**\n     * @deprecated\n     * @type {?}\n     */\n    MatDrawer.prototype.onAlignChanged;\n    /**\n     * An observable that emits when the drawer mode changes. This is used by the drawer container to\n     * to know when to when the mode changes so it can adapt the margins on the content.\n     * @type {?}\n     */\n    MatDrawer.prototype._modeChanged;\n    /** @type {?} */\n    MatDrawer.prototype._elementRef;\n    /** @type {?} */\n    MatDrawer.prototype._focusTrapFactory;\n    /** @type {?} */\n    MatDrawer.prototype._focusMonitor;\n    /** @type {?} */\n    MatDrawer.prototype._platform;\n    /** @type {?} */\n    MatDrawer.prototype._doc;\n}\n/**\n * <mat-drawer-container> component.\n *\n * This is the parent component to one or two <mat-drawer>s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\nexport class MatDrawerContainer {\n    /**\n     * @param {?} _dir\n     * @param {?} _element\n     * @param {?} _ngZone\n     * @param {?} _changeDetectorRef\n     * @param {?=} defaultAutosize\n     */\n    constructor(_dir, _element, _ngZone, _changeDetectorRef, defaultAutosize = false) {\n        this._dir = _dir;\n        this._element = _element;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Event emitted when the drawer backdrop is clicked.\n         */\n        this.backdropClick = new EventEmitter();\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Emits on every ngDoCheck. Used for debouncing reflows.\n         */\n        this._doCheckSubject = new Subject();\n        this._contentMargins = new Subject();\n        // If a `Dir` directive exists up the tree, listen direction changes and update the left/right\n        // properties to point to the proper start/end.\n        if (_dir != null) {\n            _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => this._validateDrawers());\n        }\n        this._autosize = defaultAutosize;\n    }\n    /**\n     * The drawer child with the `start` position.\n     * @return {?}\n     */\n    get start() { return this._start; }\n    /**\n     * The drawer child with the `end` position.\n     * @return {?}\n     */\n    get end() { return this._end; }\n    /**\n     * Whether to automatically resize the container whenever\n     * the size of any of its drawers changes.\n     *\n     * **Use at your own risk!** Enabling this option can cause layout thrashing by measuring\n     * the drawers on every change detection cycle. Can be configured globally via the\n     * `MAT_DRAWER_DEFAULT_AUTOSIZE` token.\n     * @return {?}\n     */\n    get autosize() { return this._autosize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autosize(value) { this._autosize = coerceBooleanProperty(value); }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._drawers.changes.pipe(startWith(null)).subscribe(() => {\n            this._validateDrawers();\n            this._drawers.forEach((drawer) => {\n                this._watchDrawerToggle(drawer);\n                this._watchDrawerPosition(drawer);\n                this._watchDrawerMode(drawer);\n            });\n            if (!this._drawers.length ||\n                this._isDrawerOpen(this._start) ||\n                this._isDrawerOpen(this._end)) {\n                this._updateContentMargins();\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n        this._doCheckSubject.pipe(debounceTime(10), // Arbitrary debounce time, less than a frame at 60fps\n        // Arbitrary debounce time, less than a frame at 60fps\n        takeUntil(this._destroyed)).subscribe(() => this._updateContentMargins());\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._doCheckSubject.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Calls `open` of both start and end drawers\n     * @return {?}\n     */\n    open() {\n        this._drawers.forEach(drawer => drawer.open());\n    }\n    /**\n     * Calls `close` of both start and end drawers\n     * @return {?}\n     */\n    close() {\n        this._drawers.forEach(drawer => drawer.close());\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        // If users opted into autosizing, do a check every change detection cycle.\n        if (this._autosize && this._isPushed()) {\n            // Run outside the NgZone, otherwise the debouncer will throw us into an infinite loop.\n            this._ngZone.runOutsideAngular(() => this._doCheckSubject.next());\n        }\n    }\n    /**\n     * Subscribes to drawer events in order to set a class on the main container element when the\n     * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n     * is properly hidden.\n     * @param {?} drawer\n     * @return {?}\n     */\n    _watchDrawerToggle(drawer) {\n        drawer._animationStarted.pipe(takeUntil(this._drawers.changes), filter((event) => event.fromState !== event.toState))\n            .subscribe((event) => {\n            // Set the transition class on the container so that the animations occur. This should not\n            // be set initially because animations should only be triggered via a change in state.\n            if (event.toState !== 'open-instant') {\n                this._element.nativeElement.classList.add('mat-drawer-transition');\n            }\n            this._updateContentMargins();\n            this._changeDetectorRef.markForCheck();\n        });\n        if (drawer.mode !== 'side') {\n            drawer.openedChange.pipe(takeUntil(this._drawers.changes)).subscribe(() => this._setContainerClass(drawer.opened));\n        }\n    }\n    /**\n     * Subscribes to drawer onPositionChanged event in order to\n     * re-validate drawers when the position changes.\n     * @param {?} drawer\n     * @return {?}\n     */\n    _watchDrawerPosition(drawer) {\n        if (!drawer) {\n            return;\n        }\n        // NOTE: We need to wait for the microtask queue to be empty before validating,\n        // since both drawers may be swapping positions at the same time.\n        drawer.onPositionChanged.pipe(takeUntil(this._drawers.changes)).subscribe(() => {\n            this._ngZone.onMicrotaskEmpty.asObservable().pipe(take(1)).subscribe(() => {\n                this._validateDrawers();\n            });\n        });\n    }\n    /**\n     * Subscribes to changes in drawer mode so we can run change detection.\n     * @param {?} drawer\n     * @return {?}\n     */\n    _watchDrawerMode(drawer) {\n        if (drawer) {\n            drawer._modeChanged.pipe(takeUntil(merge(this._drawers.changes, this._destroyed)))\n                .subscribe(() => {\n                this._updateContentMargins();\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /**\n     * Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element.\n     * @param {?} isAdd\n     * @return {?}\n     */\n    _setContainerClass(isAdd) {\n        if (isAdd) {\n            this._element.nativeElement.classList.add('mat-drawer-opened');\n        }\n        else {\n            this._element.nativeElement.classList.remove('mat-drawer-opened');\n        }\n    }\n    /**\n     * Validate the state of the drawer children components.\n     * @return {?}\n     */\n    _validateDrawers() {\n        this._start = this._end = null;\n        // Ensure that we have at most one start and one end drawer.\n        this._drawers.forEach(drawer => {\n            if (drawer.position == 'end') {\n                if (this._end != null) {\n                    throwMatDuplicatedDrawerError('end');\n                }\n                this._end = drawer;\n            }\n            else {\n                if (this._start != null) {\n                    throwMatDuplicatedDrawerError('start');\n                }\n                this._start = drawer;\n            }\n        });\n        this._right = this._left = null;\n        // Detect if we're LTR or RTL.\n        if (this._dir == null || this._dir.value == 'ltr') {\n            this._left = this._start;\n            this._right = this._end;\n        }\n        else {\n            this._left = this._end;\n            this._right = this._start;\n        }\n    }\n    /**\n     * Whether the container is being pushed to the side by one of the drawers.\n     * @return {?}\n     */\n    _isPushed() {\n        return (this._isDrawerOpen(this._start) && /** @type {?} */ ((this._start)).mode != 'over') ||\n            (this._isDrawerOpen(this._end) && /** @type {?} */ ((this._end)).mode != 'over');\n    }\n    /**\n     * @return {?}\n     */\n    _onBackdropClicked() {\n        this.backdropClick.emit();\n        this._closeModalDrawer();\n    }\n    /**\n     * @return {?}\n     */\n    _closeModalDrawer() {\n        // Close all open drawers where closing is not disabled and the mode is not `side`.\n        [this._start, this._end]\n            .filter(drawer => drawer && !drawer.disableClose && drawer.mode !== 'side')\n            .forEach(drawer => /** @type {?} */ ((drawer)).close());\n    }\n    /**\n     * @return {?}\n     */\n    _isShowingBackdrop() {\n        return (this._isDrawerOpen(this._start) && /** @type {?} */ ((this._start)).mode != 'side')\n            || (this._isDrawerOpen(this._end) && /** @type {?} */ ((this._end)).mode != 'side');\n    }\n    /**\n     * @param {?} drawer\n     * @return {?}\n     */\n    _isDrawerOpen(drawer) {\n        return drawer != null && drawer.opened;\n    }\n    /**\n     * Recalculates and updates the inline styles for the content. Note that this should be used\n     * sparingly, because it causes a reflow.\n     * @return {?}\n     */\n    _updateContentMargins() {\n        // 1. For drawers in `over` mode, they don't affect the content.\n        // 2. For drawers in `side` mode they should shrink the content. We do this by adding to the\n        //    left margin (for left drawer) or right margin (for right the drawer).\n        // 3. For drawers in `push` mode the should shift the content without resizing it. We do this by\n        //    adding to the left or right margin and simultaneously subtracting the same amount of\n        //    margin from the other side.\n        let /** @type {?} */ left = 0;\n        let /** @type {?} */ right = 0;\n        if (this._left && this._left.opened) {\n            if (this._left.mode == 'side') {\n                left += this._left._width;\n            }\n            else if (this._left.mode == 'push') {\n                let /** @type {?} */ width = this._left._width;\n                left += width;\n                right -= width;\n            }\n        }\n        if (this._right && this._right.opened) {\n            if (this._right.mode == 'side') {\n                right += this._right._width;\n            }\n            else if (this._right.mode == 'push') {\n                let /** @type {?} */ width = this._right._width;\n                right += width;\n                left -= width;\n            }\n        }\n        // Pull back into the NgZone since in some cases we could be outside.\n        this._ngZone.run(() => this._contentMargins.next({ left, right }));\n    }\n}\nMatDrawerContainer.decorators = [\n    { type: Component, args: [{selector: 'mat-drawer-container',\n                exportAs: 'matDrawerContainer',\n                template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div><ng-content select=\\\"mat-drawer\\\"></ng-content><ng-content select=\\\"mat-drawer-content\\\"></ng-content><mat-drawer-content *ngIf=\\\"!_content\\\" cdkScrollable><ng-content></ng-content></mat-drawer-content>\",\n                styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-opened{overflow:hidden}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:background-color,visibility}@media screen and (-ms-high-contrast:active){.mat-drawer-backdrop{opacity:.5}}.mat-drawer-content{-webkit-backface-visibility:hidden;backface-visibility:hidden;position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%,0,0)}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer{transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%,0,0)}.mat-drawer:not(.mat-drawer-side){box-shadow:0 8px 10px -5px rgba(0,0,0,.2),0 16px 24px 2px rgba(0,0,0,.14),0 6px 30px 5px rgba(0,0,0,.12)}.mat-sidenav-fixed{position:fixed}\"],\n                host: {\n                    'class': 'mat-drawer-container',\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                preserveWhitespaces: false,\n            },] },\n];\n/** @nocollapse */\nMatDrawerContainer.ctorParameters = () => [\n    { type: Directionality, decorators: [{ type: Optional },] },\n    { type: ElementRef, },\n    { type: NgZone, },\n    { type: ChangeDetectorRef, },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DRAWER_DEFAULT_AUTOSIZE,] },] },\n];\nMatDrawerContainer.propDecorators = {\n    \"_drawers\": [{ type: ContentChildren, args: [MatDrawer,] },],\n    \"_content\": [{ type: ContentChild, args: [MatDrawerContent,] },],\n    \"autosize\": [{ type: Input },],\n    \"backdropClick\": [{ type: Output },],\n};\nfunction MatDrawerContainer_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    MatDrawerContainer.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    MatDrawerContainer.ctorParameters;\n    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */\n    MatDrawerContainer.propDecorators;\n    /** @type {?} */\n    MatDrawerContainer.prototype._drawers;\n    /** @type {?} */\n    MatDrawerContainer.prototype._content;\n    /** @type {?} */\n    MatDrawerContainer.prototype._autosize;\n    /**\n     * Event emitted when the drawer backdrop is clicked.\n     * @type {?}\n     */\n    MatDrawerContainer.prototype.backdropClick;\n    /**\n     * The drawer at the start/end position, independent of direction.\n     * @type {?}\n     */\n    MatDrawerContainer.prototype._start;\n    /** @type {?} */\n    MatDrawerContainer.prototype._end;\n    /**\n     * The drawer at the left/right. When direction changes, these will change as well.\n     * They're used as aliases for the above to set the left/right style properly.\n     * In LTR, _left == _start and _right == _end.\n     * In RTL, _left == _end and _right == _start.\n     * @type {?}\n     */\n    MatDrawerContainer.prototype._left;\n    /** @type {?} */\n    MatDrawerContainer.prototype._right;\n    /**\n     * Emits when the component is destroyed.\n     * @type {?}\n     */\n    MatDrawerContainer.prototype._destroyed;\n    /**\n     * Emits on every ngDoCheck. Used for debouncing reflows.\n     * @type {?}\n     */\n    MatDrawerContainer.prototype._doCheckSubject;\n    /** @type {?} */\n    MatDrawerContainer.prototype._contentMargins;\n    /** @type {?} */\n    MatDrawerContainer.prototype._dir;\n    /** @type {?} */\n    MatDrawerContainer.prototype._element;\n    /** @type {?} */\n    MatDrawerContainer.prototype._ngZone;\n    /** @type {?} */\n    MatDrawerContainer.prototype._changeDetectorRef;\n}\n//# sourceMappingURL=drawer.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, ContentChildren, forwardRef, Inject, Input, ViewEncapsulation } from \"@angular/core\";\nimport { MatDrawer, MatDrawerContainer, MatDrawerContent } from \"./drawer\";\nimport { animate, state, style, transition, trigger } from \"@angular/animations\";\nimport { coerceBooleanProperty, coerceNumberProperty } from \"@angular/cdk/coercion\";\nexport class MatSidenavContent extends MatDrawerContent {\n    /**\n     * @param {?} changeDetectorRef\n     * @param {?} container\n     */\n    constructor(changeDetectorRef, container) {\n        super(changeDetectorRef, container);\n    }\n}\nMatSidenavContent.decorators = [\n    { type: Component, args: [{selector: 'mat-sidenav-content',\n                template: '<ng-content></ng-content>',\n                host: {\n                    'class': 'mat-drawer-content mat-sidenav-content',\n                    '[style.margin-left.px]': '_margins.left',\n                    '[style.margin-right.px]': '_margins.right',\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                preserveWhitespaces: false,\n            },] },\n];\n/** @nocollapse */\nMatSidenavContent.ctorParameters = () => [\n    { type: ChangeDetectorRef, },\n    { type: MatSidenavContainer, decorators: [{ type: Inject, args: [forwardRef(() => MatSidenavContainer),] },] },\n];\nfunction MatSidenavContent_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    MatSidenavContent.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    MatSidenavContent.ctorParameters;\n}\nexport class MatSidenav extends MatDrawer {\n    constructor() {\n        super(...arguments);\n        this._fixedInViewport = false;\n        this._fixedTopGap = 0;\n        this._fixedBottomGap = 0;\n    }\n    /**\n     * Whether the sidenav is fixed in the viewport.\n     * @return {?}\n     */\n    get fixedInViewport() { return this._fixedInViewport; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fixedInViewport(value) { this._fixedInViewport = coerceBooleanProperty(value); }\n    /**\n     * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\n     * mode.\n     * @return {?}\n     */\n    get fixedTopGap() { return this._fixedTopGap; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fixedTopGap(value) { this._fixedTopGap = coerceNumberProperty(value); }\n    /**\n     * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\n     * fixed mode.\n     * @return {?}\n     */\n    get fixedBottomGap() { return this._fixedBottomGap; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fixedBottomGap(value) { this._fixedBottomGap = coerceNumberProperty(value); }\n}\nMatSidenav.decorators = [\n    { type: Component, args: [{selector: 'mat-sidenav',\n                exportAs: 'matSidenav',\n                template: '<ng-content></ng-content>',\n                animations: [\n                    trigger('transform', [\n                        state('open, open-instant', style({\n                            transform: 'translate3d(0, 0, 0)',\n                            visibility: 'visible',\n                        })),\n                        state('void', style({\n                            visibility: 'hidden',\n                        })),\n                        transition('void => open-instant', animate('0ms')),\n                        transition('void <=> open, open-instant => void', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))\n                    ])\n                ],\n                host: {\n                    'class': 'mat-drawer mat-sidenav',\n                    'tabIndex': '-1',\n                    '[@transform]': '_animationState',\n                    '(@transform.start)': '_onAnimationStart($event)',\n                    '(@transform.done)': '_onAnimationEnd($event)',\n                    '(keydown)': 'handleKeydown($event)',\n                    // must prevent the browser from aligning text based on value\n                    '[attr.align]': 'null',\n                    '[class.mat-drawer-end]': 'position === \"end\"',\n                    '[class.mat-drawer-over]': 'mode === \"over\"',\n                    '[class.mat-drawer-push]': 'mode === \"push\"',\n                    '[class.mat-drawer-side]': 'mode === \"side\"',\n                    '[class.mat-sidenav-fixed]': 'fixedInViewport',\n                    '[style.top.px]': 'fixedInViewport ? fixedTopGap : null',\n                    '[style.bottom.px]': 'fixedInViewport ? fixedBottomGap : null',\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                preserveWhitespaces: false,\n            },] },\n];\n/** @nocollapse */\nMatSidenav.ctorParameters = () => [];\nMatSidenav.propDecorators = {\n    \"fixedInViewport\": [{ type: Input },],\n    \"fixedTopGap\": [{ type: Input },],\n    \"fixedBottomGap\": [{ type: Input },],\n};\nfunction MatSidenav_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    MatSidenav.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    MatSidenav.ctorParameters;\n    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */\n    MatSidenav.propDecorators;\n    /** @type {?} */\n    MatSidenav.prototype._fixedInViewport;\n    /** @type {?} */\n    MatSidenav.prototype._fixedTopGap;\n    /** @type {?} */\n    MatSidenav.prototype._fixedBottomGap;\n}\nexport class MatSidenavContainer extends MatDrawerContainer {\n}\nMatSidenavContainer.decorators = [\n    { type: Component, args: [{selector: 'mat-sidenav-container',\n                exportAs: 'matSidenavContainer',\n                template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div><ng-content select=\\\"mat-sidenav\\\"></ng-content><ng-content select=\\\"mat-sidenav-content\\\"></ng-content><mat-sidenav-content *ngIf=\\\"!_content\\\" cdkScrollable><ng-content></ng-content></mat-sidenav-content>\",\n                styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-opened{overflow:hidden}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:background-color,visibility}@media screen and (-ms-high-contrast:active){.mat-drawer-backdrop{opacity:.5}}.mat-drawer-content{-webkit-backface-visibility:hidden;backface-visibility:hidden;position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%,0,0)}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer{transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%,0,0)}.mat-drawer:not(.mat-drawer-side){box-shadow:0 8px 10px -5px rgba(0,0,0,.2),0 16px 24px 2px rgba(0,0,0,.14),0 6px 30px 5px rgba(0,0,0,.12)}.mat-sidenav-fixed{position:fixed}\"],\n                host: {\n                    'class': 'mat-drawer-container mat-sidenav-container',\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                preserveWhitespaces: false,\n            },] },\n];\n/** @nocollapse */\nMatSidenavContainer.ctorParameters = () => [];\nMatSidenavContainer.propDecorators = {\n    \"_drawers\": [{ type: ContentChildren, args: [MatSidenav,] },],\n    \"_content\": [{ type: ContentChild, args: [MatSidenavContent,] },],\n};\nfunction MatSidenavContainer_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    MatSidenavContainer.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    MatSidenavContainer.ctorParameters;\n    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */\n    MatSidenavContainer.propDecorators;\n    /** @type {?} */\n    MatSidenavContainer.prototype._drawers;\n    /** @type {?} */\n    MatSidenavContainer.prototype._content;\n}\n//# sourceMappingURL=sidenav.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { A11yModule } from \"@angular/cdk/a11y\";\nimport { OverlayModule } from \"@angular/cdk/overlay\";\nimport { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { MatCommonModule } from \"@angular/material/core\";\nimport { ScrollDispatchModule } from \"@angular/cdk/scrolling\";\nimport { PlatformModule } from \"@angular/cdk/platform\";\nimport { MatSidenav, MatSidenavContainer, MatSidenavContent } from \"./sidenav\";\nimport { MatDrawer, MatDrawerContainer, MatDrawerContent, MAT_DRAWER_DEFAULT_AUTOSIZE, } from \"./drawer\";\nexport class MatSidenavModule {\n}\nMatSidenavModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    A11yModule,\n                    OverlayModule,\n                    ScrollDispatchModule,\n                    PlatformModule,\n                ],\n                exports: [\n                    MatCommonModule,\n                    MatDrawer,\n                    MatDrawerContainer,\n                    MatDrawerContent,\n                    MatSidenav,\n                    MatSidenavContainer,\n                    MatSidenavContent,\n                ],\n                declarations: [\n                    MatDrawer,\n                    MatDrawerContainer,\n                    MatDrawerContent,\n                    MatSidenav,\n                    MatSidenavContainer,\n                    MatSidenavContent,\n                ],\n                providers: [\n                    { provide: MAT_DRAWER_DEFAULT_AUTOSIZE, useValue: false }\n                ]\n            },] },\n];\n/** @nocollapse */\nMatSidenavModule.ctorParameters = () => [];\nfunction MatSidenavModule_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    MatSidenavModule.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    MatSidenavModule.ctorParameters;\n}\n//# sourceMappingURL=sidenav-module.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport { MatSidenavModule } from \"./sidenav-module\";\nexport { throwMatDuplicatedDrawerError, MatDrawerToggleResult, MAT_DRAWER_DEFAULT_AUTOSIZE, MatDrawerContent, MatDrawer, MatDrawerContainer } from \"./drawer\";\nexport { MatSidenavContent, MatSidenav, MatSidenavContainer } from \"./sidenav\";\n//# sourceMappingURL=public-api.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { MatSidenavModule, throwMatDuplicatedDrawerError, MatDrawerToggleResult, MAT_DRAWER_DEFAULT_AUTOSIZE, MatDrawerContent, MatDrawer, MatDrawerContainer, MatSidenavContent, MatSidenav, MatSidenavContainer } from \"./public-api\";\n//# sourceMappingURL=index.js.map"],"names":[],"mappings":"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"}