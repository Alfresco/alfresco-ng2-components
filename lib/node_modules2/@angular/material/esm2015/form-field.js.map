{"version":3,"file":"form-field.js","sources":["../../packages/material/form-field/error.js","../../packages/material/form-field/form-field-control.js","../../packages/material/form-field/form-field-errors.js","../../packages/material/form-field/hint.js","../../packages/material/form-field/placeholder.js","../../packages/material/form-field/label.js","../../packages/material/form-field/prefix.js","../../packages/material/form-field/suffix.js","../../packages/material/form-field/form-field.js","../../packages/material/form-field/form-field-module.js","../../packages/material/form-field/public-api.js","../../packages/material/form-field/index.js"],"sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, Input } from \"@angular/core\";\nlet /** @type {?} */ nextUniqueId = 0;\n/**\n * Single error message to be shown underneath the form field.\n */\nexport class MatError {\n    constructor() {\n        this.id = `mat-error-${nextUniqueId++}`;\n    }\n}\nMatError.decorators = [\n    { type: Directive, args: [{\n                selector: 'mat-error',\n                host: {\n                    'class': 'mat-error',\n                    'role': 'alert',\n                    '[attr.id]': 'id',\n                }\n            },] },\n];\n/** @nocollapse */\nMatError.ctorParameters = () => [];\nMatError.propDecorators = {\n    \"id\": [{ type: Input },],\n};\nfunction MatError_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    MatError.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    MatError.ctorParameters;\n    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */\n    MatError.propDecorators;\n    /** @type {?} */\n    MatError.prototype.id;\n}\n//# sourceMappingURL=error.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An interface which allows a control to work inside of a `MatFormField`.\n * @abstract\n */\nexport class MatFormFieldControl {\n}\nfunction MatFormFieldControl_tsickle_Closure_declarations() {\n    /**\n     * The value of the control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.value;\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MatFormField`\n     * needs to run change detection.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.stateChanges;\n    /**\n     * The element ID for this control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.id;\n    /**\n     * The placeholder for this control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.placeholder;\n    /**\n     * Gets the NgControl for this control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.ngControl;\n    /**\n     * Whether the control is focused.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.focused;\n    /**\n     * Whether the control is empty.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.empty;\n    /**\n     * Whether the `MatFormField` label should try to float.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.shouldLabelFloat;\n    /**\n     * Whether the `MatFormField` placeholder should try to float.\n     * @deprecated Use `shouldLabelFloat` instead.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.shouldPlaceholderFloat;\n    /**\n     * Whether the control is required.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.required;\n    /**\n     * Whether the control is disabled.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.disabled;\n    /**\n     * Whether the control is in an error state.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.errorState;\n    /**\n     * An optional name for the control type that can be used to distinguish `mat-form-field` elements\n     * based on their control type. The form field will add a class,\n     * `mat-form-field-type-{{controlType}}` to its root element.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.controlType;\n    /**\n     * Sets the list of element IDs that currently describe this control.\n     * @abstract\n     * @param {?} ids\n     * @return {?}\n     */\n    MatFormFieldControl.prototype.setDescribedByIds = function (ids) { };\n    /**\n     * Handles a click on the control's container.\n     * @abstract\n     * @param {?} event\n     * @return {?}\n     */\n    MatFormFieldControl.prototype.onContainerClick = function (event) { };\n}\n//# sourceMappingURL=form-field-control.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @return {?}\n */\nexport function getMatFormFieldPlaceholderConflictError() {\n    return Error('Placeholder attribute and child element were both specified.');\n}\n/**\n * \\@docs-private\n * @param {?} align\n * @return {?}\n */\nexport function getMatFormFieldDuplicatedHintError(align) {\n    return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nexport function getMatFormFieldMissingControlError() {\n    return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n//# sourceMappingURL=form-field-errors.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, Input } from \"@angular/core\";\nlet /** @type {?} */ nextUniqueId = 0;\n/**\n * Hint text to be shown underneath the form field control.\n */\nexport class MatHint {\n    constructor() {\n        /**\n         * Whether to align the hint label at the start or end of the line.\n         */\n        this.align = 'start';\n        /**\n         * Unique ID for the hint. Used for the aria-describedby on the form field control.\n         */\n        this.id = `mat-hint-${nextUniqueId++}`;\n    }\n}\nMatHint.decorators = [\n    { type: Directive, args: [{\n                selector: 'mat-hint',\n                host: {\n                    'class': 'mat-hint',\n                    '[class.mat-right]': 'align == \"end\"',\n                    '[attr.id]': 'id',\n                    // Remove align attribute to prevent it from interfering with layout.\n                    '[attr.align]': 'null',\n                }\n            },] },\n];\n/** @nocollapse */\nMatHint.ctorParameters = () => [];\nMatHint.propDecorators = {\n    \"align\": [{ type: Input },],\n    \"id\": [{ type: Input },],\n};\nfunction MatHint_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    MatHint.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    MatHint.ctorParameters;\n    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */\n    MatHint.propDecorators;\n    /**\n     * Whether to align the hint label at the start or end of the line.\n     * @type {?}\n     */\n    MatHint.prototype.align;\n    /**\n     * Unique ID for the hint. Used for the aria-describedby on the form field control.\n     * @type {?}\n     */\n    MatHint.prototype.id;\n}\n//# sourceMappingURL=hint.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive } from \"@angular/core\";\n/**\n * The placeholder text for an `MatFormField`.\n */\nexport class MatPlaceholder {\n}\nMatPlaceholder.decorators = [\n    { type: Directive, args: [{\n                selector: 'mat-placeholder'\n            },] },\n];\n/** @nocollapse */\nMatPlaceholder.ctorParameters = () => [];\nfunction MatPlaceholder_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    MatPlaceholder.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    MatPlaceholder.ctorParameters;\n}\n//# sourceMappingURL=placeholder.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive } from \"@angular/core\";\n/**\n * The floating label for a `mat-form-field`.\n */\nexport class MatLabel {\n}\nMatLabel.decorators = [\n    { type: Directive, args: [{\n                selector: 'mat-label'\n            },] },\n];\n/** @nocollapse */\nMatLabel.ctorParameters = () => [];\nfunction MatLabel_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    MatLabel.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    MatLabel.ctorParameters;\n}\n//# sourceMappingURL=label.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive } from \"@angular/core\";\n/**\n * Prefix to be placed the the front of the form field.\n */\nexport class MatPrefix {\n}\nMatPrefix.decorators = [\n    { type: Directive, args: [{\n                selector: '[matPrefix]',\n            },] },\n];\n/** @nocollapse */\nMatPrefix.ctorParameters = () => [];\nfunction MatPrefix_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    MatPrefix.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    MatPrefix.ctorParameters;\n}\n//# sourceMappingURL=prefix.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive } from \"@angular/core\";\n/**\n * Suffix to be placed at the end of the form field.\n */\nexport class MatSuffix {\n}\nMatSuffix.decorators = [\n    { type: Directive, args: [{\n                selector: '[matSuffix]',\n            },] },\n];\n/** @nocollapse */\nMatSuffix.ctorParameters = () => [];\nfunction MatSuffix_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    MatSuffix.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    MatSuffix.ctorParameters;\n}\n//# sourceMappingURL=suffix.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { animate, state, style, transition, trigger } from \"@angular/animations\";\nimport { coerceBooleanProperty } from \"@angular/cdk/coercion\";\nimport { take } from \"rxjs/operators/take\";\nimport { startWith } from \"rxjs/operators/startWith\";\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, ContentChildren, ElementRef, Inject, Input, Optional, QueryList, ViewChild, ViewEncapsulation, } from \"@angular/core\";\nimport { MAT_LABEL_GLOBAL_OPTIONS } from \"@angular/material/core\";\nimport { fromEvent } from \"rxjs/observable/fromEvent\";\nimport { MatError } from \"./error\";\nimport { MatFormFieldControl } from \"./form-field-control\";\nimport { getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, getMatFormFieldPlaceholderConflictError, } from \"./form-field-errors\";\nimport { MatHint } from \"./hint\";\nimport { MatPlaceholder } from \"./placeholder\";\nimport { MatLabel } from \"./label\";\nimport { MatPrefix } from \"./prefix\";\nimport { MatSuffix } from \"./suffix\";\nlet /** @type {?} */ nextUniqueId = 0;\n/**\n * Container for form controls that applies Material Design styling and behavior.\n */\nexport class MatFormField {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} labelOptions\n     */\n    constructor(_elementRef, _changeDetectorRef, labelOptions) {\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Color of the form field underline, based on the theme.\n         */\n        this.color = 'primary';\n        /**\n         * Override for the logic that disables the label animation in certain cases.\n         */\n        this._showAlwaysAnimate = false;\n        /**\n         * State of the mat-hint and mat-error animations.\n         */\n        this._subscriptAnimationState = '';\n        this._hintLabel = '';\n        // Unique id for the hint label.\n        this._hintLabelId = `mat-hint-${nextUniqueId++}`;\n        this._labelOptions = labelOptions ? labelOptions : {};\n        this.floatLabel = this._labelOptions.float || 'auto';\n    }\n    /**\n     * @deprecated Use `color` instead.\n     * @return {?}\n     */\n    get dividerColor() { return this.color; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set dividerColor(value) { this.color = value; }\n    /**\n     * Whether the required marker should be hidden.\n     * @return {?}\n     */\n    get hideRequiredMarker() { return this._hideRequiredMarker; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hideRequiredMarker(value) {\n        this._hideRequiredMarker = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the floating label should always float or not.\n     * @return {?}\n     */\n    get _shouldAlwaysFloat() {\n        return this._floatLabel === 'always' && !this._showAlwaysAnimate;\n    }\n    /**\n     * Whether the label can float or not.\n     * @return {?}\n     */\n    get _canLabelFloat() { return this._floatLabel !== 'never'; }\n    /**\n     * Text for the form field hint.\n     * @return {?}\n     */\n    get hintLabel() { return this._hintLabel; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hintLabel(value) {\n        this._hintLabel = value;\n        this._processHints();\n    }\n    /**\n     * Whether the placeholder should always float, never float or float as the user types.\n     * @deprecated Use floatLabel instead.\n     * @return {?}\n     */\n    get floatPlaceholder() { return this._floatLabel; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set floatPlaceholder(value) { this.floatLabel = value; }\n    /**\n     * Whether the label should always float, never float or float as the user types.\n     * @return {?}\n     */\n    get floatLabel() { return this._floatLabel; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set floatLabel(value) {\n        if (value !== this._floatLabel) {\n            this._floatLabel = value || this._labelOptions.float || 'auto';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._validateControlChild();\n        if (this._control.controlType) {\n            this._elementRef.nativeElement.classList\n                .add(`mat-form-field-type-${this._control.controlType}`);\n        }\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        this._control.stateChanges.pipe(startWith(/** @type {?} */ ((null)))).subscribe(() => {\n            this._validatePlaceholders();\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        });\n        let /** @type {?} */ ngControl = this._control.ngControl;\n        if (ngControl && ngControl.valueChanges) {\n            ngControl.valueChanges.subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n        // Re-validate when the number of hints changes.\n        this._hintChildren.changes.pipe(startWith(null)).subscribe(() => {\n            this._processHints();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Update the aria-described by when the number of errors changes.\n        this._errorChildren.changes.pipe(startWith(null)).subscribe(() => {\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        this._validateControlChild();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._subscriptAnimationState = 'enter';\n        this._changeDetectorRef.detectChanges();\n    }\n    /**\n     * Determines whether a class from the NgControl should be forwarded to the host element.\n     * @param {?} prop\n     * @return {?}\n     */\n    _shouldForward(prop) {\n        let /** @type {?} */ ngControl = this._control ? this._control.ngControl : null;\n        return ngControl && (/** @type {?} */ (ngControl))[prop];\n    }\n    /**\n     * @return {?}\n     */\n    _hasPlaceholder() {\n        return !!(this._control.placeholder || this._placeholderChild);\n    }\n    /**\n     * @return {?}\n     */\n    _hasLabel() {\n        return !!this._labelChild;\n    }\n    /**\n     * @return {?}\n     */\n    _shouldLabelFloat() {\n        return this._canLabelFloat && (this._control.shouldLabelFloat ||\n            this._control.shouldPlaceholderFloat || this._shouldAlwaysFloat);\n    }\n    /**\n     * @return {?}\n     */\n    _hideControlPlaceholder() {\n        return !this._hasLabel() || !this._shouldLabelFloat();\n    }\n    /**\n     * @return {?}\n     */\n    _hasFloatingLabel() {\n        return this._hasLabel() || this._hasPlaceholder();\n    }\n    /**\n     * Determines whether to display hints or errors.\n     * @return {?}\n     */\n    _getDisplayedMessages() {\n        return (this._errorChildren && this._errorChildren.length > 0 &&\n            this._control.errorState) ? 'error' : 'hint';\n    }\n    /**\n     * Animates the placeholder up and locks it in position.\n     * @return {?}\n     */\n    _animateAndLockLabel() {\n        if (this._hasFloatingLabel() && this._canLabelFloat) {\n            this._showAlwaysAnimate = true;\n            this._floatLabel = 'always';\n            fromEvent(this._label.nativeElement, 'transitionend').pipe(take(1)).subscribe(() => {\n                this._showAlwaysAnimate = false;\n            });\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n     * or child element with the `mat-placeholder` directive).\n     * @return {?}\n     */\n    _validatePlaceholders() {\n        if (this._control.placeholder && this._placeholderChild) {\n            throw getMatFormFieldPlaceholderConflictError();\n        }\n    }\n    /**\n     * Does any extra processing that is required when handling the hints.\n     * @return {?}\n     */\n    _processHints() {\n        this._validateHints();\n        this._syncDescribedByIds();\n    }\n    /**\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     * @return {?}\n     */\n    _validateHints() {\n        if (this._hintChildren) {\n            let /** @type {?} */ startHint;\n            let /** @type {?} */ endHint;\n            this._hintChildren.forEach((hint) => {\n                if (hint.align == 'start') {\n                    if (startHint || this.hintLabel) {\n                        throw getMatFormFieldDuplicatedHintError('start');\n                    }\n                    startHint = hint;\n                }\n                else if (hint.align == 'end') {\n                    if (endHint) {\n                        throw getMatFormFieldDuplicatedHintError('end');\n                    }\n                    endHint = hint;\n                }\n            });\n        }\n    }\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     * @return {?}\n     */\n    _syncDescribedByIds() {\n        if (this._control) {\n            let /** @type {?} */ ids = [];\n            if (this._getDisplayedMessages() === 'hint') {\n                let /** @type {?} */ startHint = this._hintChildren ?\n                    this._hintChildren.find(hint => hint.align === 'start') : null;\n                let /** @type {?} */ endHint = this._hintChildren ?\n                    this._hintChildren.find(hint => hint.align === 'end') : null;\n                if (startHint) {\n                    ids.push(startHint.id);\n                }\n                else if (this._hintLabel) {\n                    ids.push(this._hintLabelId);\n                }\n                if (endHint) {\n                    ids.push(endHint.id);\n                }\n            }\n            else if (this._errorChildren) {\n                ids = this._errorChildren.map(error => error.id);\n            }\n            this._control.setDescribedByIds(ids);\n        }\n    }\n    /**\n     * Throws an error if the form field's control is missing.\n     * @return {?}\n     */\n    _validateControlChild() {\n        if (!this._control) {\n            throw getMatFormFieldMissingControlError();\n        }\n    }\n}\nMatFormField.decorators = [\n    { type: Component, args: [{// TODO(mmalerba): the input-container selectors and classes are deprecated and will be removed.\n                selector: 'mat-input-container, mat-form-field',\n                exportAs: 'matFormField',\n                template: \"<div class=\\\"mat-input-wrapper mat-form-field-wrapper\\\"><div class=\\\"mat-input-flex mat-form-field-flex\\\" #connectionContainer (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\"><div class=\\\"mat-input-prefix mat-form-field-prefix\\\" *ngIf=\\\"_prefixChildren.length\\\"><ng-content select=\\\"[matPrefix]\\\"></ng-content></div><div class=\\\"mat-input-infix mat-form-field-infix\\\" #inputContainer><ng-content></ng-content><span class=\\\"mat-form-field-label-wrapper mat-input-placeholder-wrapper mat-form-field-placeholder-wrapper\\\"><label class=\\\"mat-form-field-label mat-input-placeholder mat-form-field-placeholder\\\" [attr.for]=\\\"_control.id\\\" [attr.aria-owns]=\\\"_control.id\\\" [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\" [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\" [class.mat-accent]=\\\"color == 'accent'\\\" [class.mat-warn]=\\\"color == 'warn'\\\" #label *ngIf=\\\"_hasFloatingLabel()\\\" [ngSwitch]=\\\"_hasLabel()\\\"><ng-container *ngSwitchCase=\\\"false\\\"><ng-content select=\\\"mat-placeholder\\\"></ng-content>{{_control.placeholder}}</ng-container><ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content><span class=\\\"mat-placeholder-required mat-form-field-required-marker\\\" aria-hidden=\\\"true\\\" *ngIf=\\\"!hideRequiredMarker && _control.required\\\">&nbsp;*</span></label></span></div><div class=\\\"mat-input-suffix mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\"><ng-content select=\\\"[matSuffix]\\\"></ng-content></div></div><div class=\\\"mat-input-underline mat-form-field-underline\\\" #underline><span class=\\\"mat-input-ripple mat-form-field-ripple\\\" [class.mat-accent]=\\\"color == 'accent'\\\" [class.mat-warn]=\\\"color == 'warn'\\\"></span></div><div class=\\\"mat-input-subscript-wrapper mat-form-field-subscript-wrapper\\\" [ngSwitch]=\\\"_getDisplayedMessages()\\\"><div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\"><ng-content select=\\\"mat-error\\\"></ng-content></div><div class=\\\"mat-input-hint-wrapper mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\"><div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div><ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content><div class=\\\"mat-input-hint-spacer mat-form-field-hint-spacer\\\"></div><ng-content select=\\\"mat-hint[align='end']\\\"></ng-content></div></div></div>\",\n                // MatInput is a directive and can't have styles, so we need to include its styles here.\n                // The MatInput styles are fairly minimal so it shouldn't be a big deal for people who\n                // aren't using MatInput.\n                styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none}.mat-form-field-prefix .mat-icon,.mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-prefix .mat-icon-button,.mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform:perspective(100px);-ms-transform:none;transform-origin:0 0;transition:transform .4s cubic-bezier(.25,.8,.25,1),color .4s cubic-bezier(.25,.8,.25,1),width .4s cubic-bezier(.25,.8,.25,1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,.mat-form-field-empty.mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-placeholder-wrapper .mat-form-field-placeholder,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-placeholder-wrapper .mat-form-field-placeholder{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-placeholder-wrapper .mat-form-field-placeholder,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-placeholder-wrapper .mat-form-field-placeholder{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;height:1px;width:100%}.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.mat-form-field-underline .mat-form-field-ripple{position:absolute;top:0;left:0;width:100%;height:2px;transform-origin:50%;transform:scaleX(.5);visibility:hidden;opacity:0;transition:background-color .3s cubic-bezier(.55,0,.55,.2)}.mat-form-field-invalid:not(.mat-focused) .mat-form-field-underline .mat-form-field-ripple{height:1px}.mat-focused .mat-form-field-underline .mat-form-field-ripple,.mat-form-field-invalid .mat-form-field-underline .mat-form-field-ripple{visibility:visible;opacity:1;transform:scaleX(1);transition:transform .3s cubic-bezier(.25,.8,.25,1),opacity .1s cubic-bezier(.25,.8,.25,1),background-color .3s cubic-bezier(.25,.8,.25,1)}.mat-form-field-subscript-wrapper{position:absolute;width:100%;overflow:hidden}.mat-form-field-label-wrapper .mat-icon,.mat-form-field-subscript-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block} .mat-input-element{font:inherit;background:0 0;color:currentColor;border:none;outline:0;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element[type=date]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=month]::after,.mat-input-element[type=time]::after,.mat-input-element[type=week]::after{content:' ';white-space:pre;width:1px}.mat-input-element::placeholder{transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element::-moz-placeholder{transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element::-webkit-input-placeholder{transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element:-ms-input-placeholder{transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent!important;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent!important;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent!important;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent!important;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-autosize{resize:none}\"],\n                animations: [\n                    // TODO(mmalerba): Use angular animations for label animation as well.\n                    trigger('transitionMessages', [\n                        state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n                        transition('void => enter', [\n                            style({ opacity: 0, transform: 'translateY(-100%)' }),\n                            animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n                        ]),\n                    ]),\n                ],\n                host: {\n                    'class': 'mat-input-container mat-form-field',\n                    '[class.mat-input-invalid]': '_control.errorState',\n                    '[class.mat-form-field-invalid]': '_control.errorState',\n                    '[class.mat-form-field-can-float]': '_canLabelFloat',\n                    '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n                    '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n                    '[class.mat-form-field-disabled]': '_control.disabled',\n                    '[class.mat-focused]': '_control.focused',\n                    '[class.mat-primary]': 'color == \"primary\"',\n                    '[class.mat-accent]': 'color == \"accent\"',\n                    '[class.mat-warn]': 'color == \"warn\"',\n                    '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n                    '[class.ng-touched]': '_shouldForward(\"touched\")',\n                    '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n                    '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n                    '[class.ng-valid]': '_shouldForward(\"valid\")',\n                    '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n                    '[class.ng-pending]': '_shouldForward(\"pending\")',\n                },\n                encapsulation: ViewEncapsulation.None,\n                preserveWhitespaces: false,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n            },] },\n];\n/** @nocollapse */\nMatFormField.ctorParameters = () => [\n    { type: ElementRef, },\n    { type: ChangeDetectorRef, },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_LABEL_GLOBAL_OPTIONS,] },] },\n];\nMatFormField.propDecorators = {\n    \"color\": [{ type: Input },],\n    \"dividerColor\": [{ type: Input },],\n    \"hideRequiredMarker\": [{ type: Input },],\n    \"hintLabel\": [{ type: Input },],\n    \"floatPlaceholder\": [{ type: Input },],\n    \"floatLabel\": [{ type: Input },],\n    \"underlineRef\": [{ type: ViewChild, args: ['underline',] },],\n    \"_connectionContainerRef\": [{ type: ViewChild, args: ['connectionContainer',] },],\n    \"_inputContainerRef\": [{ type: ViewChild, args: ['inputContainer',] },],\n    \"_label\": [{ type: ViewChild, args: ['label',] },],\n    \"_control\": [{ type: ContentChild, args: [MatFormFieldControl,] },],\n    \"_placeholderChild\": [{ type: ContentChild, args: [MatPlaceholder,] },],\n    \"_labelChild\": [{ type: ContentChild, args: [MatLabel,] },],\n    \"_errorChildren\": [{ type: ContentChildren, args: [MatError,] },],\n    \"_hintChildren\": [{ type: ContentChildren, args: [MatHint,] },],\n    \"_prefixChildren\": [{ type: ContentChildren, args: [MatPrefix,] },],\n    \"_suffixChildren\": [{ type: ContentChildren, args: [MatSuffix,] },],\n};\nfunction MatFormField_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    MatFormField.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    MatFormField.ctorParameters;\n    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */\n    MatFormField.propDecorators;\n    /** @type {?} */\n    MatFormField.prototype._labelOptions;\n    /**\n     * Color of the form field underline, based on the theme.\n     * @type {?}\n     */\n    MatFormField.prototype.color;\n    /** @type {?} */\n    MatFormField.prototype._hideRequiredMarker;\n    /**\n     * Override for the logic that disables the label animation in certain cases.\n     * @type {?}\n     */\n    MatFormField.prototype._showAlwaysAnimate;\n    /**\n     * State of the mat-hint and mat-error animations.\n     * @type {?}\n     */\n    MatFormField.prototype._subscriptAnimationState;\n    /** @type {?} */\n    MatFormField.prototype._hintLabel;\n    /** @type {?} */\n    MatFormField.prototype._hintLabelId;\n    /** @type {?} */\n    MatFormField.prototype._floatLabel;\n    /**\n     * Reference to the form field's underline element.\n     * @type {?}\n     */\n    MatFormField.prototype.underlineRef;\n    /** @type {?} */\n    MatFormField.prototype._connectionContainerRef;\n    /** @type {?} */\n    MatFormField.prototype._inputContainerRef;\n    /** @type {?} */\n    MatFormField.prototype._label;\n    /** @type {?} */\n    MatFormField.prototype._control;\n    /** @type {?} */\n    MatFormField.prototype._placeholderChild;\n    /** @type {?} */\n    MatFormField.prototype._labelChild;\n    /** @type {?} */\n    MatFormField.prototype._errorChildren;\n    /** @type {?} */\n    MatFormField.prototype._hintChildren;\n    /** @type {?} */\n    MatFormField.prototype._prefixChildren;\n    /** @type {?} */\n    MatFormField.prototype._suffixChildren;\n    /** @type {?} */\n    MatFormField.prototype._elementRef;\n    /** @type {?} */\n    MatFormField.prototype._changeDetectorRef;\n}\n//# sourceMappingURL=form-field.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { PlatformModule } from \"@angular/cdk/platform\";\nimport { MatError } from \"./error\";\nimport { MatFormField } from \"./form-field\";\nimport { MatHint } from \"./hint\";\nimport { MatPlaceholder } from \"./placeholder\";\nimport { MatPrefix } from \"./prefix\";\nimport { MatSuffix } from \"./suffix\";\nimport { MatLabel } from \"./label\";\nexport class MatFormFieldModule {\n}\nMatFormFieldModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [\n                    MatError,\n                    MatHint,\n                    MatFormField,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                    MatLabel,\n                ],\n                imports: [\n                    CommonModule,\n                    PlatformModule,\n                ],\n                exports: [\n                    MatError,\n                    MatHint,\n                    MatFormField,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                    MatLabel,\n                ],\n            },] },\n];\n/** @nocollapse */\nMatFormFieldModule.ctorParameters = () => [];\nfunction MatFormFieldModule_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    MatFormFieldModule.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    MatFormFieldModule.ctorParameters;\n}\n//# sourceMappingURL=form-field-module.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport { MatFormFieldModule } from \"./form-field-module\";\nexport { MatError } from \"./error\";\nexport { MatFormField } from \"./form-field\";\nexport { MatFormFieldControl } from \"./form-field-control\";\nexport { getMatFormFieldPlaceholderConflictError, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError } from \"./form-field-errors\";\nexport { MatHint } from \"./hint\";\nexport { MatPlaceholder } from \"./placeholder\";\nexport { MatPrefix } from \"./prefix\";\nexport { MatSuffix } from \"./suffix\";\nexport { MatLabel } from \"./label\";\n//# sourceMappingURL=public-api.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { MatFormFieldModule, MatError, MatFormField, MatFormFieldControl, getMatFormFieldPlaceholderConflictError, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, MatHint, MatPlaceholder, MatPrefix, MatSuffix, MatLabel } from \"./public-api\";\n//# sourceMappingURL=index.js.map"],"names":["nextUniqueId"],"mappings":"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"}