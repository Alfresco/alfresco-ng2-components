{"version":3,"file":"menu.js","sources":["../../packages/material/menu/menu-animations.js","../../packages/material/menu/menu-errors.js","../../packages/material/menu/menu-item.js","../../packages/material/menu/menu-directive.js","../../packages/material/menu/menu-trigger.js","../../packages/material/menu/menu-module.js","../../packages/material/menu/menu.js","../../packages/material/menu/public-api.js","../../packages/material/menu/index.js"],"sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { trigger, state, style, animate, transition, } from \"@angular/animations\";\n/**\n * This animation controls the menu panel's entry and exit from the page.\n *\n * When the menu panel is added to the DOM, it scales in and fades in its border.\n *\n * When the menu panel is removed from the DOM, it simply fades out after a brief\n * delay to display the ripple.\n */\nexport const /** @type {?} */ transformMenu = trigger('transformMenu', [\n    state('void', style({\n        opacity: 0,\n        // This starts off from 0.01, instead of 0, because there's an issue in the Angular animations\n        // as of 4.2, which causes the animation to be skipped if it starts from 0.\n        transform: 'scale(0.01, 0.01)'\n    })),\n    state('enter-start', style({\n        opacity: 1,\n        transform: 'scale(1, 0.5)'\n    })),\n    state('enter', style({\n        transform: 'scale(1, 1)'\n    })),\n    transition('void => enter-start', animate('100ms linear')),\n    transition('enter-start => enter', animate('300ms cubic-bezier(0.25, 0.8, 0.25, 1)')),\n    transition('* => void', animate('150ms 50ms linear', style({ opacity: 0 })))\n]);\n/**\n * This animation fades in the background color and content of the menu panel\n * after its containing element is scaled in.\n */\nexport const /** @type {?} */ fadeInItems = trigger('fadeInItems', [\n    state('showing', style({ opacity: 1 })),\n    transition('void => *', [\n        style({ opacity: 0 }),\n        animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n    ])\n]);\n//# sourceMappingURL=menu-animations.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Throws an exception for the case when menu trigger doesn't have a valid mat-menu instance\n * \\@docs-private\n * @return {?}\n */\nexport function throwMatMenuMissingError() {\n    throw Error(`mat-menu-trigger: must pass in an mat-menu instance.\n\n    Example:\n      <mat-menu #menu=\"matMenu\"></mat-menu>\n      <button [matMenuTriggerFor]=\"menu\"></button>`);\n}\n/**\n * Throws an exception for the case when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * \\@docs-private\n * @return {?}\n */\nexport function throwMatMenuInvalidPositionX() {\n    throw Error(`x-position value must be either 'before' or after'.\n      Example: <mat-menu x-position=\"before\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * \\@docs-private\n * @return {?}\n */\nexport function throwMatMenuInvalidPositionY() {\n    throw Error(`y-position value must be either 'above' or below'.\n      Example: <mat-menu y-position=\"above\" #menu=\"matMenu\"></mat-menu>`);\n}\n//# sourceMappingURL=menu-errors.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ChangeDetectionStrategy, Component, ElementRef, ViewEncapsulation, } from \"@angular/core\";\nimport { mixinDisabled, mixinDisableRipple } from \"@angular/material/core\";\nimport { Subject } from \"rxjs/Subject\";\n/**\n * \\@docs-private\n */\nexport class MatMenuItemBase {\n}\nexport const /** @type {?} */ _MatMenuItemMixinBase = mixinDisableRipple(mixinDisabled(MatMenuItemBase));\n/**\n * This directive is intended to be used inside an mat-menu tag.\n * It exists mostly to set the role attribute.\n */\nexport class MatMenuItem extends _MatMenuItemMixinBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        super();\n        this._elementRef = _elementRef;\n        /**\n         * Stream that emits when the menu item is hovered.\n         */\n        this._hovered = new Subject();\n        /**\n         * Whether the menu item is highlighted.\n         */\n        this._highlighted = false;\n        /**\n         * Whether the menu item acts as a trigger for a sub-menu.\n         */\n        this._triggersSubmenu = false;\n    }\n    /**\n     * Focuses the menu item.\n     * @return {?}\n     */\n    focus() {\n        this._getHostElement().focus();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._hovered.complete();\n    }\n    /**\n     * Used to set the `tabindex`.\n     * @return {?}\n     */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /**\n     * Returns the host DOM element.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /**\n     * Prevents the default element actions if it is disabled.\n     * @param {?} event\n     * @return {?}\n     */\n    _checkDisabled(event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n    /**\n     * Emits to the hover stream.\n     * @return {?}\n     */\n    _emitHoverEvent() {\n        if (!this.disabled) {\n            this._hovered.next(this);\n        }\n    }\n    /**\n     * Gets the label to be used when determining whether the option should be focused.\n     * @return {?}\n     */\n    getLabel() {\n        const /** @type {?} */ element = this._elementRef.nativeElement;\n        let /** @type {?} */ output = '';\n        if (element.childNodes) {\n            const /** @type {?} */ length = element.childNodes.length;\n            // Go through all the top-level text nodes and extract their text.\n            // We skip anything that's not a text node to prevent the text from\n            // being thrown off by something like an icon.\n            for (let /** @type {?} */ i = 0; i < length; i++) {\n                if (element.childNodes[i].nodeType === Node.TEXT_NODE) {\n                    output += element.childNodes[i].textContent;\n                }\n            }\n        }\n        return output.trim();\n    }\n}\nMatMenuItem.decorators = [\n    { type: Component, args: [{selector: '[mat-menu-item]',\n                exportAs: 'matMenuItem',\n                inputs: ['disabled', 'disableRipple'],\n                host: {\n                    'role': 'menuitem',\n                    'class': 'mat-menu-item',\n                    '[class.mat-menu-item-highlighted]': '_highlighted',\n                    '[class.mat-menu-item-submenu-trigger]': '_triggersSubmenu',\n                    '[attr.tabindex]': '_getTabIndex()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.disabled]': 'disabled || null',\n                    '(click)': '_checkDisabled($event)',\n                    '(mouseenter)': '_emitHoverEvent()',\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                preserveWhitespaces: false,\n                template: \"<ng-content></ng-content><div class=\\\"mat-menu-ripple\\\" matRipple [matRippleDisabled]=\\\"disableRipple || disabled\\\" [matRippleTrigger]=\\\"_getHostElement()\\\"></div>\",\n            },] },\n];\n/** @nocollapse */\nMatMenuItem.ctorParameters = () => [\n    { type: ElementRef, },\n];\nfunction MatMenuItem_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    MatMenuItem.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    MatMenuItem.ctorParameters;\n    /**\n     * Stream that emits when the menu item is hovered.\n     * @type {?}\n     */\n    MatMenuItem.prototype._hovered;\n    /**\n     * Whether the menu item is highlighted.\n     * @type {?}\n     */\n    MatMenuItem.prototype._highlighted;\n    /**\n     * Whether the menu item acts as a trigger for a sub-menu.\n     * @type {?}\n     */\n    MatMenuItem.prototype._triggersSubmenu;\n    /** @type {?} */\n    MatMenuItem.prototype._elementRef;\n}\n//# sourceMappingURL=menu-item.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { FocusKeyManager } from \"@angular/cdk/a11y\";\nimport { ESCAPE, LEFT_ARROW, RIGHT_ARROW } from \"@angular/cdk/keycodes\";\nimport { startWith } from \"rxjs/operators/startWith\";\nimport { switchMap } from \"rxjs/operators/switchMap\";\nimport { take } from \"rxjs/operators/take\";\nimport { ChangeDetectionStrategy, Component, ContentChildren, ElementRef, EventEmitter, Inject, InjectionToken, Input, Output, QueryList, TemplateRef, ViewChild, ViewEncapsulation, NgZone, } from \"@angular/core\";\nimport { merge } from \"rxjs/observable/merge\";\nimport { Subscription } from \"rxjs/Subscription\";\nimport { fadeInItems, transformMenu } from \"./menu-animations\";\nimport { throwMatMenuInvalidPositionX, throwMatMenuInvalidPositionY } from \"./menu-errors\";\nimport { MatMenuItem } from \"./menu-item\";\nimport { coerceBooleanProperty } from \"@angular/cdk/coercion\";\n/**\n * Default `mat-menu` options that can be overridden.\n * @record\n */\nexport function MatMenuDefaultOptions() { }\nfunction MatMenuDefaultOptions_tsickle_Closure_declarations() {\n    /**\n     * The x-axis position of the menu.\n     * @type {?}\n     */\n    MatMenuDefaultOptions.prototype.xPosition;\n    /**\n     * The y-axis position of the menu.\n     * @type {?}\n     */\n    MatMenuDefaultOptions.prototype.yPosition;\n    /**\n     * Whether the menu should overlap the menu trigger.\n     * @type {?}\n     */\n    MatMenuDefaultOptions.prototype.overlapTrigger;\n}\n/**\n * Injection token to be used to override the default options for `mat-menu`.\n */\nexport const /** @type {?} */ MAT_MENU_DEFAULT_OPTIONS = new InjectionToken('mat-menu-default-options');\n/**\n * Start elevation for the menu panel.\n * \\@docs-private\n */\nconst /** @type {?} */ MAT_MENU_BASE_ELEVATION = 2;\nexport class MatMenu {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     * @param {?} _defaultOptions\n     */\n    constructor(_elementRef, _ngZone, _defaultOptions) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        this._xPosition = this._defaultOptions.xPosition;\n        this._yPosition = this._defaultOptions.yPosition;\n        /**\n         * Subscription to tab events on the menu panel\n         */\n        this._tabSubscription = Subscription.EMPTY;\n        /**\n         * Config object to be passed into the menu's ngClass\n         */\n        this._classList = {};\n        /**\n         * Current state of the panel animation.\n         */\n        this._panelAnimationState = 'void';\n        this._overlapTrigger = this._defaultOptions.overlapTrigger;\n        /**\n         * Event emitted when the menu is closed.\n         */\n        this.closed = new EventEmitter();\n        /**\n         * Event emitted when the menu is closed.\n         * @deprecated Switch to `closed` instead\n         */\n        this.close = this.closed;\n    }\n    /**\n     * Position of the menu in the X axis.\n     * @return {?}\n     */\n    get xPosition() { return this._xPosition; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set xPosition(value) {\n        if (value !== 'before' && value !== 'after') {\n            throwMatMenuInvalidPositionX();\n        }\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n    /**\n     * Position of the menu in the Y axis.\n     * @return {?}\n     */\n    get yPosition() { return this._yPosition; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set yPosition(value) {\n        if (value !== 'above' && value !== 'below') {\n            throwMatMenuInvalidPositionY();\n        }\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n    /**\n     * Whether the menu should overlap its trigger.\n     * @param {?} value\n     * @return {?}\n     */\n    set overlapTrigger(value) {\n        this._overlapTrigger = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    get overlapTrigger() {\n        return this._overlapTrigger;\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @param {?} classes list of class names\n     * @return {?}\n     */\n    set panelClass(classes) {\n        if (classes && classes.length) {\n            this._classList = classes.split(' ').reduce((obj, className) => {\n                obj[className] = true;\n                return obj;\n            }, {});\n            this._elementRef.nativeElement.className = '';\n            this.setPositionClasses();\n        }\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @deprecated Use `panelClass` instead.\n     * @param {?} classes\n     * @return {?}\n     */\n    set classList(classes) { this.panelClass = classes; }\n    /**\n     * @return {?}\n     */\n    get classList() { return this.panelClass; }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._keyManager = new FocusKeyManager(this.items).withWrap().withTypeAhead();\n        this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.close.emit('keydown'));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._tabSubscription.unsubscribe();\n        this.closed.emit();\n        this.closed.complete();\n    }\n    /**\n     * Stream that emits whenever the hovered menu item changes.\n     * @return {?}\n     */\n    _hovered() {\n        if (this.items) {\n            return this.items.changes.pipe(startWith(this.items), switchMap(items => merge(...items.map(item => item._hovered))));\n        }\n        return this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1), switchMap(() => this._hovered()));\n    }\n    /**\n     * Handle a keyboard event from the menu, delegating to the appropriate action.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        switch (event.keyCode) {\n            case ESCAPE:\n                this.closed.emit('keydown');\n                event.stopPropagation();\n                break;\n            case LEFT_ARROW:\n                if (this.parentMenu && this.direction === 'ltr') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            case RIGHT_ARROW:\n                if (this.parentMenu && this.direction === 'rtl') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * Focus the first item in the menu. This method is used by the menu trigger\n     * to focus the first item when the menu is opened by the ENTER key.\n     * @return {?}\n     */\n    focusFirstItem() {\n        this._keyManager.setFirstItemActive();\n    }\n    /**\n     * Resets the active item in the menu. This is used when the menu is opened by mouse,\n     * allowing the user to start from the first option when pressing the down arrow.\n     * @return {?}\n     */\n    resetActiveItem() {\n        this._keyManager.setActiveItem(-1);\n    }\n    /**\n     * It's necessary to set position-based classes to ensure the menu panel animation\n     * folds out from the correct direction.\n     * @param {?=} posX\n     * @param {?=} posY\n     * @return {?}\n     */\n    setPositionClasses(posX = this.xPosition, posY = this.yPosition) {\n        this._classList['mat-menu-before'] = posX === 'before';\n        this._classList['mat-menu-after'] = posX === 'after';\n        this._classList['mat-menu-above'] = posY === 'above';\n        this._classList['mat-menu-below'] = posY === 'below';\n    }\n    /**\n     * Sets the menu panel elevation.\n     * @param {?} depth Number of parent menus that come before the menu.\n     * @return {?}\n     */\n    setElevation(depth) {\n        // The elevation starts at the base and increases by one for each level.\n        const /** @type {?} */ newElevation = `mat-elevation-z${MAT_MENU_BASE_ELEVATION + depth}`;\n        const /** @type {?} */ customElevation = Object.keys(this._classList).find(c => c.startsWith('mat-elevation-z'));\n        if (!customElevation || customElevation === this._previousElevation) {\n            if (this._previousElevation) {\n                this._classList[this._previousElevation] = false;\n            }\n            this._classList[newElevation] = true;\n            this._previousElevation = newElevation;\n        }\n    }\n    /**\n     * Starts the enter animation.\n     * @return {?}\n     */\n    _startAnimation() {\n        this._panelAnimationState = 'enter-start';\n    }\n    /**\n     * Resets the panel animation to its initial state.\n     * @return {?}\n     */\n    _resetAnimation() {\n        this._panelAnimationState = 'void';\n    }\n    /**\n     * Callback that is invoked when the panel animation completes.\n     * @param {?} event\n     * @return {?}\n     */\n    _onAnimationDone(event) {\n        // After the initial expansion is done, trigger the second phase of the enter animation.\n        if (event.toState === 'enter-start') {\n            this._panelAnimationState = 'enter';\n        }\n    }\n}\nMatMenu.decorators = [\n    { type: Component, args: [{selector: 'mat-menu',\n                template: \"<ng-template><div class=\\\"mat-menu-panel\\\" [ngClass]=\\\"_classList\\\" (keydown)=\\\"_handleKeydown($event)\\\" (click)=\\\"closed.emit('click')\\\" [@transformMenu]=\\\"_panelAnimationState\\\" (@transformMenu.done)=\\\"_onAnimationDone($event)\\\" tabindex=\\\"-1\\\" role=\\\"menu\\\"><div class=\\\"mat-menu-content\\\" [@fadeInItems]=\\\"'showing'\\\"><ng-content></ng-content></div></div></ng-template>\",\n                styles: [\".mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:2px;outline:0}.mat-menu-panel:not([class*=mat-elevation-z]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.mat-menu-panel.mat-menu-after.mat-menu-below{transform-origin:left top}.mat-menu-panel.mat-menu-after.mat-menu-above{transform-origin:left bottom}.mat-menu-panel.mat-menu-before.mat-menu-below{transform-origin:right top}.mat-menu-panel.mat-menu-before.mat-menu-above{transform-origin:right bottom}[dir=rtl] .mat-menu-panel.mat-menu-after.mat-menu-below{transform-origin:right top}[dir=rtl] .mat-menu-panel.mat-menu-after.mat-menu-above{transform-origin:right bottom}[dir=rtl] .mat-menu-panel.mat-menu-before.mat-menu-below{transform-origin:left top}[dir=rtl] .mat-menu-panel.mat-menu-before.mat-menu-above{transform-origin:left bottom}.mat-menu-panel.ng-animating{pointer-events:none}@media screen and (-ms-high-contrast:active){.mat-menu-panel{outline:solid 1px}}.mat-menu-content{padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;position:relative}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item .mat-icon{vertical-align:middle}.mat-menu-item-submenu-trigger{padding-right:32px}.mat-menu-item-submenu-trigger::after{width:0;height:0;border-style:solid;border-width:5px 0 5px 5px;border-color:transparent transparent transparent currentColor;content:'';display:inline-block;position:absolute;top:50%;right:16px;transform:translateY(-50%)}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:8px;padding-left:32px}[dir=rtl] .mat-menu-item-submenu-trigger::after{right:auto;left:16px;transform:rotateY(180deg) translateY(-50%)}button.mat-menu-item{width:100%}.mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\"],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                preserveWhitespaces: false,\n                animations: [\n                    transformMenu,\n                    fadeInItems\n                ],\n                exportAs: 'matMenu'\n            },] },\n];\n/** @nocollapse */\nMatMenu.ctorParameters = () => [\n    { type: ElementRef, },\n    { type: NgZone, },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_DEFAULT_OPTIONS,] },] },\n];\nMatMenu.propDecorators = {\n    \"xPosition\": [{ type: Input },],\n    \"yPosition\": [{ type: Input },],\n    \"templateRef\": [{ type: ViewChild, args: [TemplateRef,] },],\n    \"items\": [{ type: ContentChildren, args: [MatMenuItem,] },],\n    \"overlapTrigger\": [{ type: Input },],\n    \"panelClass\": [{ type: Input, args: ['class',] },],\n    \"classList\": [{ type: Input },],\n    \"closed\": [{ type: Output },],\n    \"close\": [{ type: Output },],\n};\nfunction MatMenu_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    MatMenu.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    MatMenu.ctorParameters;\n    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */\n    MatMenu.propDecorators;\n    /** @type {?} */\n    MatMenu.prototype._keyManager;\n    /** @type {?} */\n    MatMenu.prototype._xPosition;\n    /** @type {?} */\n    MatMenu.prototype._yPosition;\n    /** @type {?} */\n    MatMenu.prototype._previousElevation;\n    /**\n     * Subscription to tab events on the menu panel\n     * @type {?}\n     */\n    MatMenu.prototype._tabSubscription;\n    /**\n     * Config object to be passed into the menu's ngClass\n     * @type {?}\n     */\n    MatMenu.prototype._classList;\n    /**\n     * Current state of the panel animation.\n     * @type {?}\n     */\n    MatMenu.prototype._panelAnimationState;\n    /**\n     * Parent menu of the current menu panel.\n     * @type {?}\n     */\n    MatMenu.prototype.parentMenu;\n    /**\n     * Layout direction of the menu.\n     * @type {?}\n     */\n    MatMenu.prototype.direction;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatMenu.prototype.templateRef;\n    /**\n     * List of the items inside of a menu.\n     * @type {?}\n     */\n    MatMenu.prototype.items;\n    /** @type {?} */\n    MatMenu.prototype._overlapTrigger;\n    /**\n     * Event emitted when the menu is closed.\n     * @type {?}\n     */\n    MatMenu.prototype.closed;\n    /**\n     * Event emitted when the menu is closed.\n     * @deprecated Switch to `closed` instead\n     * @type {?}\n     */\n    MatMenu.prototype.close;\n    /** @type {?} */\n    MatMenu.prototype._elementRef;\n    /** @type {?} */\n    MatMenu.prototype._ngZone;\n    /** @type {?} */\n    MatMenu.prototype._defaultOptions;\n}\n//# sourceMappingURL=menu-directive.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { isFakeMousedownFromScreenReader } from \"@angular/cdk/a11y\";\nimport { Directionality } from \"@angular/cdk/bidi\";\nimport { LEFT_ARROW, RIGHT_ARROW } from \"@angular/cdk/keycodes\";\nimport { Overlay, OverlayConfig, } from \"@angular/cdk/overlay\";\nimport { TemplatePortal } from \"@angular/cdk/portal\";\nimport { filter } from \"rxjs/operators/filter\";\nimport { Directive, ElementRef, EventEmitter, Inject, InjectionToken, Input, Optional, Output, Self, ViewContainerRef, } from \"@angular/core\";\nimport { merge } from \"rxjs/observable/merge\";\nimport { of as observableOf } from \"rxjs/observable/of\";\nimport { Subscription } from \"rxjs/Subscription\";\nimport { MatMenu } from \"./menu-directive\";\nimport { throwMatMenuMissingError } from \"./menu-errors\";\nimport { MatMenuItem } from \"./menu-item\";\n/**\n * Injection token that determines the scroll handling while the menu is open.\n */\nexport const /** @type {?} */ MAT_MENU_SCROLL_STRATEGY = new InjectionToken('mat-menu-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nexport function MAT_MENU_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/**\n * \\@docs-private\n */\nexport const /** @type {?} */ MAT_MENU_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_MENU_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_MENU_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Default top padding of the menu panel.\n */\nexport const /** @type {?} */ MENU_PANEL_TOP_PADDING = 8;\n/**\n * This directive is intended to be used in conjunction with an mat-menu tag.  It is\n * responsible for toggling the display of the provided menu instance.\n */\nexport class MatMenuTrigger {\n    /**\n     * @param {?} _overlay\n     * @param {?} _element\n     * @param {?} _viewContainerRef\n     * @param {?} _scrollStrategy\n     * @param {?} _parentMenu\n     * @param {?} _menuItemInstance\n     * @param {?} _dir\n     */\n    constructor(_overlay, _element, _viewContainerRef, _scrollStrategy, _parentMenu, _menuItemInstance, _dir) {\n        this._overlay = _overlay;\n        this._element = _element;\n        this._viewContainerRef = _viewContainerRef;\n        this._scrollStrategy = _scrollStrategy;\n        this._parentMenu = _parentMenu;\n        this._menuItemInstance = _menuItemInstance;\n        this._dir = _dir;\n        this._overlayRef = null;\n        this._menuOpen = false;\n        this._closeSubscription = Subscription.EMPTY;\n        this._positionSubscription = Subscription.EMPTY;\n        this._hoverSubscription = Subscription.EMPTY;\n        this._openedByMouse = false;\n        /**\n         * Event emitted when the associated menu is opened.\n         */\n        this.menuOpened = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is opened.\n         * @deprecated Switch to `menuOpened` instead\n         */\n        this.onMenuOpen = this.menuOpened;\n        /**\n         * Event emitted when the associated menu is closed.\n         */\n        this.menuClosed = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is closed.\n         * @deprecated Switch to `menuClosed` instead\n         */\n        this.onMenuClose = this.menuClosed;\n        if (_menuItemInstance) {\n            _menuItemInstance._triggersSubmenu = this.triggersSubmenu();\n        }\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    get _deprecatedMatMenuTriggerFor() {\n        return this.menu;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set _deprecatedMatMenuTriggerFor(v) {\n        this.menu = v;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._checkMenu();\n        this.menu.close.subscribe(reason => {\n            this._destroyMenu();\n            // If a click closed the menu, we should close the entire chain of nested menus.\n            if (reason === 'click' && this._parentMenu) {\n                this._parentMenu.closed.emit(reason);\n            }\n        });\n        if (this.triggersSubmenu()) {\n            // Subscribe to changes in the hovered item in order to toggle the panel.\n            this._hoverSubscription = this._parentMenu._hovered()\n                .pipe(filter(active => active === this._menuItemInstance))\n                .subscribe(() => {\n                this._openedByMouse = true;\n                this.openMenu();\n            });\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n        this._cleanUpSubscriptions();\n    }\n    /**\n     * Whether the menu is open.\n     * @return {?}\n     */\n    get menuOpen() {\n        return this._menuOpen;\n    }\n    /**\n     * The text direction of the containing app.\n     * @return {?}\n     */\n    get dir() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /**\n     * Whether the menu triggers a sub-menu or a top-level one.\n     * @return {?}\n     */\n    triggersSubmenu() {\n        return !!(this._menuItemInstance && this._parentMenu);\n    }\n    /**\n     * Toggles the menu between the open and closed states.\n     * @return {?}\n     */\n    toggleMenu() {\n        return this._menuOpen ? this.closeMenu() : this.openMenu();\n    }\n    /**\n     * Opens the menu.\n     * @return {?}\n     */\n    openMenu() {\n        if (!this._menuOpen) {\n            this._createOverlay().attach(this._portal);\n            this._closeSubscription = this._menuClosingActions().subscribe(() => {\n                this.menu.close.emit();\n            });\n            this._initMenu();\n            if (this.menu instanceof MatMenu) {\n                this.menu._startAnimation();\n            }\n        }\n    }\n    /**\n     * Closes the menu.\n     * @return {?}\n     */\n    closeMenu() {\n        this.menu.close.emit();\n    }\n    /**\n     * Focuses the menu trigger.\n     * @return {?}\n     */\n    focus() {\n        this._element.nativeElement.focus();\n    }\n    /**\n     * Closes the menu and does the necessary cleanup.\n     * @return {?}\n     */\n    _destroyMenu() {\n        if (this._overlayRef && this.menuOpen) {\n            this._resetMenu();\n            this._overlayRef.detach();\n            this._closeSubscription.unsubscribe();\n            if (this.menu instanceof MatMenu) {\n                this.menu._resetAnimation();\n            }\n        }\n    }\n    /**\n     * This method sets the menu state to open and focuses the first item if\n     * the menu was opened via the keyboard.\n     * @return {?}\n     */\n    _initMenu() {\n        this.menu.parentMenu = this.triggersSubmenu() ? this._parentMenu : undefined;\n        this.menu.direction = this.dir;\n        this._setMenuElevation();\n        this._setIsMenuOpen(true);\n        // If the menu was opened by mouse, we focus the root node, which allows for the keyboard\n        // interactions to work. Otherwise, if the menu was opened by keyboard, we focus the first item.\n        if (this._openedByMouse) {\n            let /** @type {?} */ rootNode = /** @type {?} */ (((this._overlayRef)).overlayElement.firstElementChild);\n            if (rootNode) {\n                this.menu.resetActiveItem();\n                rootNode.focus();\n            }\n        }\n        else {\n            this.menu.focusFirstItem();\n        }\n    }\n    /**\n     * Updates the menu elevation based on the amount of parent menus that it has.\n     * @return {?}\n     */\n    _setMenuElevation() {\n        if (this.menu.setElevation) {\n            let /** @type {?} */ depth = 0;\n            let /** @type {?} */ parentMenu = this.menu.parentMenu;\n            while (parentMenu) {\n                depth++;\n                parentMenu = parentMenu.parentMenu;\n            }\n            this.menu.setElevation(depth);\n        }\n    }\n    /**\n     * This method resets the menu when it's closed, most importantly restoring\n     * focus to the menu trigger if the menu was opened via the keyboard.\n     * @return {?}\n     */\n    _resetMenu() {\n        this._setIsMenuOpen(false);\n        // We should reset focus if the user is navigating using a keyboard or\n        // if we have a top-level trigger which might cause focus to be lost\n        // when clicking on the backdrop.\n        if (!this._openedByMouse || !this.triggersSubmenu()) {\n            this.focus();\n        }\n        this._openedByMouse = false;\n    }\n    /**\n     * @param {?} isOpen\n     * @return {?}\n     */\n    _setIsMenuOpen(isOpen) {\n        this._menuOpen = isOpen;\n        this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\n        if (this.triggersSubmenu()) {\n            this._menuItemInstance._highlighted = isOpen;\n        }\n    }\n    /**\n     * This method checks that a valid instance of MatMenu has been passed into\n     * matMenuTriggerFor. If not, an exception is thrown.\n     * @return {?}\n     */\n    _checkMenu() {\n        if (!this.menu) {\n            throwMatMenuMissingError();\n        }\n    }\n    /**\n     * This method creates the overlay from the provided menu's template and saves its\n     * OverlayRef so that it can be attached to the DOM when openMenu is called.\n     * @return {?}\n     */\n    _createOverlay() {\n        if (!this._overlayRef) {\n            this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\n            const /** @type {?} */ config = this._getOverlayConfig();\n            this._subscribeToPositions(/** @type {?} */ (config.positionStrategy));\n            this._overlayRef = this._overlay.create(config);\n        }\n        return this._overlayRef;\n    }\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @return {?} OverlayConfig\n     */\n    _getOverlayConfig() {\n        return new OverlayConfig({\n            positionStrategy: this._getPosition(),\n            hasBackdrop: !this.triggersSubmenu(),\n            backdropClass: 'cdk-overlay-transparent-backdrop',\n            direction: this.dir,\n            scrollStrategy: this._scrollStrategy()\n        });\n    }\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the menu based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     * @param {?} position\n     * @return {?}\n     */\n    _subscribeToPositions(position) {\n        this._positionSubscription = position.onPositionChange.subscribe(change => {\n            const /** @type {?} */ posX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n            const /** @type {?} */ posY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n            this.menu.setPositionClasses(posX, posY);\n        });\n    }\n    /**\n     * This method builds the position strategy for the overlay, so the menu is properly connected\n     * to the trigger.\n     * @return {?} ConnectedPositionStrategy\n     */\n    _getPosition() {\n        let [originX, originFallbackX] = this.menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n        let [overlayY, overlayFallbackY] = this.menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n        let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n        let [overlayX, overlayFallbackX] = [originX, originFallbackX];\n        let /** @type {?} */ offsetY = 0;\n        if (this.triggersSubmenu()) {\n            // When the menu is a sub-menu, it should always align itself\n            // to the edges of the trigger, instead of overlapping it.\n            overlayFallbackX = originX = this.menu.xPosition === 'before' ? 'start' : 'end';\n            originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n            offsetY = overlayY === 'bottom' ? MENU_PANEL_TOP_PADDING : -MENU_PANEL_TOP_PADDING;\n        }\n        else if (!this.menu.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n        return this._overlay.position()\n            .connectedTo(this._element, { originX, originY }, { overlayX, overlayY })\n            .withDirection(this.dir)\n            .withOffsetY(offsetY)\n            .withFallbackPosition({ originX: originFallbackX, originY }, { overlayX: overlayFallbackX, overlayY })\n            .withFallbackPosition({ originX, originY: originFallbackY }, { overlayX, overlayY: overlayFallbackY }, undefined, -offsetY)\n            .withFallbackPosition({ originX: originFallbackX, originY: originFallbackY }, { overlayX: overlayFallbackX, overlayY: overlayFallbackY }, undefined, -offsetY);\n    }\n    /**\n     * Cleans up the active subscriptions.\n     * @return {?}\n     */\n    _cleanUpSubscriptions() {\n        this._closeSubscription.unsubscribe();\n        this._positionSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n    }\n    /**\n     * Returns a stream that emits whenever an action that should close the menu occurs.\n     * @return {?}\n     */\n    _menuClosingActions() {\n        const /** @type {?} */ backdrop = /** @type {?} */ ((this._overlayRef)).backdropClick();\n        const /** @type {?} */ parentClose = this._parentMenu ? this._parentMenu.close : observableOf();\n        const /** @type {?} */ hover = this._parentMenu ? this._parentMenu._hovered().pipe(filter(active => active !== this._menuItemInstance), filter(() => this._menuOpen)) : observableOf();\n        return merge(backdrop, parentClose, hover);\n    }\n    /**\n     * Handles mouse presses on the trigger.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleMousedown(event) {\n        if (!isFakeMousedownFromScreenReader(event)) {\n            this._openedByMouse = true;\n            // Since clicking on the trigger won't close the menu if it opens a sub-menu,\n            // we should prevent focus from moving onto it via click to avoid the\n            // highlight from lingering on the menu item.\n            if (this.triggersSubmenu()) {\n                event.preventDefault();\n            }\n        }\n    }\n    /**\n     * Handles key presses on the trigger.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        const /** @type {?} */ keyCode = event.keyCode;\n        if (this.triggersSubmenu() && ((keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\n            (keyCode === LEFT_ARROW && this.dir === 'rtl'))) {\n            this.openMenu();\n        }\n    }\n    /**\n     * Handles click events on the trigger.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClick(event) {\n        if (this.triggersSubmenu()) {\n            // Stop event propagation to avoid closing the parent menu.\n            event.stopPropagation();\n            this.openMenu();\n        }\n        else {\n            this.toggleMenu();\n        }\n    }\n}\nMatMenuTrigger.decorators = [\n    { type: Directive, args: [{\n                selector: `[mat-menu-trigger-for], [matMenuTriggerFor]`,\n                host: {\n                    'aria-haspopup': 'true',\n                    '(mousedown)': '_handleMousedown($event)',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(click)': '_handleClick($event)',\n                },\n                exportAs: 'matMenuTrigger'\n            },] },\n];\n/** @nocollapse */\nMatMenuTrigger.ctorParameters = () => [\n    { type: Overlay, },\n    { type: ElementRef, },\n    { type: ViewContainerRef, },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_SCROLL_STRATEGY,] },] },\n    { type: MatMenu, decorators: [{ type: Optional },] },\n    { type: MatMenuItem, decorators: [{ type: Optional }, { type: Self },] },\n    { type: Directionality, decorators: [{ type: Optional },] },\n];\nMatMenuTrigger.propDecorators = {\n    \"_deprecatedMatMenuTriggerFor\": [{ type: Input, args: ['mat-menu-trigger-for',] },],\n    \"menu\": [{ type: Input, args: ['matMenuTriggerFor',] },],\n    \"menuOpened\": [{ type: Output },],\n    \"onMenuOpen\": [{ type: Output },],\n    \"menuClosed\": [{ type: Output },],\n    \"onMenuClose\": [{ type: Output },],\n};\nfunction MatMenuTrigger_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    MatMenuTrigger.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    MatMenuTrigger.ctorParameters;\n    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */\n    MatMenuTrigger.propDecorators;\n    /** @type {?} */\n    MatMenuTrigger.prototype._portal;\n    /** @type {?} */\n    MatMenuTrigger.prototype._overlayRef;\n    /** @type {?} */\n    MatMenuTrigger.prototype._menuOpen;\n    /** @type {?} */\n    MatMenuTrigger.prototype._closeSubscription;\n    /** @type {?} */\n    MatMenuTrigger.prototype._positionSubscription;\n    /** @type {?} */\n    MatMenuTrigger.prototype._hoverSubscription;\n    /** @type {?} */\n    MatMenuTrigger.prototype._openedByMouse;\n    /**\n     * References the menu instance that the trigger is associated with.\n     * @type {?}\n     */\n    MatMenuTrigger.prototype.menu;\n    /**\n     * Event emitted when the associated menu is opened.\n     * @type {?}\n     */\n    MatMenuTrigger.prototype.menuOpened;\n    /**\n     * Event emitted when the associated menu is opened.\n     * @deprecated Switch to `menuOpened` instead\n     * @type {?}\n     */\n    MatMenuTrigger.prototype.onMenuOpen;\n    /**\n     * Event emitted when the associated menu is closed.\n     * @type {?}\n     */\n    MatMenuTrigger.prototype.menuClosed;\n    /**\n     * Event emitted when the associated menu is closed.\n     * @deprecated Switch to `menuClosed` instead\n     * @type {?}\n     */\n    MatMenuTrigger.prototype.onMenuClose;\n    /** @type {?} */\n    MatMenuTrigger.prototype._overlay;\n    /** @type {?} */\n    MatMenuTrigger.prototype._element;\n    /** @type {?} */\n    MatMenuTrigger.prototype._viewContainerRef;\n    /** @type {?} */\n    MatMenuTrigger.prototype._scrollStrategy;\n    /** @type {?} */\n    MatMenuTrigger.prototype._parentMenu;\n    /** @type {?} */\n    MatMenuTrigger.prototype._menuItemInstance;\n    /** @type {?} */\n    MatMenuTrigger.prototype._dir;\n}\n//# sourceMappingURL=menu-trigger.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { MatCommonModule } from \"@angular/material/core\";\nimport { OverlayModule } from \"@angular/cdk/overlay\";\nimport { MatMenu, MAT_MENU_DEFAULT_OPTIONS } from \"./menu-directive\";\nimport { MatMenuItem } from \"./menu-item\";\nimport { MatMenuTrigger, MAT_MENU_SCROLL_STRATEGY_PROVIDER } from \"./menu-trigger\";\nimport { MatRippleModule } from \"@angular/material/core\";\nconst ɵ0 = {\n    overlapTrigger: true,\n    xPosition: 'after',\n    yPosition: 'below',\n};\nexport class MatMenuModule {\n}\nMatMenuModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    OverlayModule,\n                    CommonModule,\n                    MatRippleModule,\n                    MatCommonModule,\n                ],\n                exports: [MatMenu, MatMenuItem, MatMenuTrigger, MatCommonModule],\n                declarations: [MatMenu, MatMenuItem, MatMenuTrigger],\n                providers: [\n                    MAT_MENU_SCROLL_STRATEGY_PROVIDER,\n                    {\n                        provide: MAT_MENU_DEFAULT_OPTIONS,\n                        useValue: ɵ0,\n                    }\n                ],\n            },] },\n];\n/** @nocollapse */\nMatMenuModule.ctorParameters = () => [];\nfunction MatMenuModule_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    MatMenuModule.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    MatMenuModule.ctorParameters;\n}\nexport { ɵ0 };\n//# sourceMappingURL=menu-module.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport { MatMenu, MAT_MENU_DEFAULT_OPTIONS } from \"./menu-directive\";\nexport { MatMenuItem } from \"./menu-item\";\nexport { MatMenuTrigger } from \"./menu-trigger\";\n//# sourceMappingURL=menu.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport { MatMenuModule } from \"./menu-module\";\nexport { MatMenu, MAT_MENU_DEFAULT_OPTIONS, MatMenuItem, MatMenuTrigger } from \"./menu\";\nexport { MAT_MENU_SCROLL_STRATEGY } from \"./menu-trigger\";\nexport { fadeInItems, transformMenu } from \"./menu-animations\";\n//# sourceMappingURL=public-api.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { MAT_MENU_SCROLL_STRATEGY, fadeInItems, transformMenu, MatMenuModule, MatMenu, MAT_MENU_DEFAULT_OPTIONS, MatMenuItem, MatMenuTrigger } from \"./public-api\";\nexport { MatMenuItemBase as ɵa22, _MatMenuItemMixinBase as ɵb22 } from \"./menu-item\";\nexport { MAT_MENU_SCROLL_STRATEGY_PROVIDER as ɵd22, MAT_MENU_SCROLL_STRATEGY_PROVIDER_FACTORY as ɵc22 } from \"./menu-trigger\";\n//# sourceMappingURL=index.js.map"],"names":["observableOf"],"mappings":"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"}