{"version":3,"file":"layout.es5.js","sources":["../../packages/cdk/esm5/layout/media-matcher.js","../../packages/cdk/esm5/layout/breakpoints-observer.js","../../packages/cdk/esm5/layout/breakpoints.js","../../packages/cdk/esm5/layout/public-api.js","../../packages/cdk/esm5/layout/index.js"],"sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Injectable } from \"@angular/core\";\nimport { Platform } from \"@angular/cdk/platform\";\n/**\n * Global registry for all dynamically-created, injected style tags.\n */\nvar /** @type {?} */ styleElementForWebkitCompatibility = new Map();\n/**\n * A utility for calling matchMedia queries.\n */\nvar MediaMatcher = /** @class */ (function () {\n    function MediaMatcher(platform) {\n        this.platform = platform;\n        this._matchMedia = this.platform.isBrowser ?\n            // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n            // call it from a different scope.\n            window.matchMedia.bind(window) :\n            noopMatchMedia;\n    }\n    /**\n     * Evaluates the given media query and returns the native MediaQueryList from which results\n     * can be retrieved.\n     * Confirms the layout engine will trigger for the selector query provided and returns the\n     * MediaQueryList for the query provided.\n     */\n    /**\n     * Evaluates the given media query and returns the native MediaQueryList from which results\n     * can be retrieved.\n     * Confirms the layout engine will trigger for the selector query provided and returns the\n     * MediaQueryList for the query provided.\n     * @param {?} query\n     * @return {?}\n     */\n    MediaMatcher.prototype.matchMedia = /**\n     * Evaluates the given media query and returns the native MediaQueryList from which results\n     * can be retrieved.\n     * Confirms the layout engine will trigger for the selector query provided and returns the\n     * MediaQueryList for the query provided.\n     * @param {?} query\n     * @return {?}\n     */\n    function (query) {\n        if (this.platform.WEBKIT) {\n            createEmptyStyleRule(query);\n        }\n        return this._matchMedia(query);\n    };\n    MediaMatcher.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    MediaMatcher.ctorParameters = function () { return [\n        { type: Platform, },\n    ]; };\n    return MediaMatcher;\n}());\nexport { MediaMatcher };\nfunction MediaMatcher_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    MediaMatcher.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    MediaMatcher.ctorParameters;\n    /**\n     * The internal matchMedia method to return back a MediaQueryList like object.\n     * @type {?}\n     */\n    MediaMatcher.prototype._matchMedia;\n    /** @type {?} */\n    MediaMatcher.prototype.platform;\n}\n/**\n * For Webkit engines that only trigger the MediaQueryListListener when there is at least one CSS\n * selector for the respective media query.\n * @param {?} query\n * @return {?}\n */\nfunction createEmptyStyleRule(query) {\n    if (!styleElementForWebkitCompatibility.has(query)) {\n        try {\n            var /** @type {?} */ style = document.createElement('style');\n            style.setAttribute('type', 'text/css');\n            if (!style.sheet) {\n                var /** @type {?} */ cssText = \"@media \" + query + \" {.fx-query-test{ }}\";\n                style.appendChild(document.createTextNode(cssText));\n            }\n            document.getElementsByTagName('head')[0].appendChild(style);\n            // Store in private global registry\n            styleElementForWebkitCompatibility.set(query, style);\n        }\n        catch (/** @type {?} */ e) {\n            console.error(e);\n        }\n    }\n}\n/**\n * No-op matchMedia replacement for non-browser platforms.\n * @param {?} query\n * @return {?}\n */\nfunction noopMatchMedia(query) {\n    return {\n        matches: query === 'all' || query === '',\n        media: query,\n        addListener: function () { },\n        removeListener: function () { }\n    };\n}\n//# sourceMappingURL=media-matcher.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Injectable, NgZone } from \"@angular/core\";\nimport { MediaMatcher } from \"./media-matcher\";\nimport { Subject } from \"rxjs/Subject\";\nimport { map } from \"rxjs/operators/map\";\nimport { startWith } from \"rxjs/operators/startWith\";\nimport { takeUntil } from \"rxjs/operators/takeUntil\";\nimport { coerceArray } from \"@angular/cdk/coercion\";\nimport { combineLatest } from \"rxjs/observable/combineLatest\";\nimport { fromEventPattern } from \"rxjs/observable/fromEventPattern\";\n/**\n * The current state of a layout breakpoint.\n * @record\n */\nexport function BreakpointState() { }\nfunction BreakpointState_tsickle_Closure_declarations() {\n    /**\n     * Whether the breakpoint is currently matching.\n     * @type {?}\n     */\n    BreakpointState.prototype.matches;\n}\n/**\n * @record\n */\nfunction Query() { }\nfunction Query_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Query.prototype.observable;\n    /** @type {?} */\n    Query.prototype.mql;\n}\n/**\n * Utility for checking the matching state of \\@media queries.\n */\nvar BreakpointObserver = /** @class */ (function () {\n    function BreakpointObserver(mediaMatcher, zone) {\n        this.mediaMatcher = mediaMatcher;\n        this.zone = zone;\n        /**\n         * A map of all media queries currently being listened for.\n         */\n        this._queries = new Map();\n        /**\n         * A subject for all other observables to takeUntil based on.\n         */\n        this._destroySubject = new Subject();\n    }\n    /** Completes the active subject, signalling to all other observables to complete. */\n    /**\n     * Completes the active subject, signalling to all other observables to complete.\n     * @return {?}\n     */\n    BreakpointObserver.prototype.ngOnDestroy = /**\n     * Completes the active subject, signalling to all other observables to complete.\n     * @return {?}\n     */\n    function () {\n        this._destroySubject.next();\n        this._destroySubject.complete();\n    };\n    /**\n     * Whether one or more media queries match the current viewport size.\n     * @param value One or more media queries to check.\n     * @returns Whether any of the media queries match.\n     */\n    /**\n     * Whether one or more media queries match the current viewport size.\n     * @param {?} value One or more media queries to check.\n     * @return {?} Whether any of the media queries match.\n     */\n    BreakpointObserver.prototype.isMatched = /**\n     * Whether one or more media queries match the current viewport size.\n     * @param {?} value One or more media queries to check.\n     * @return {?} Whether any of the media queries match.\n     */\n    function (value) {\n        var _this = this;\n        var /** @type {?} */ queries = coerceArray(value);\n        return queries.some(function (mediaQuery) { return _this._registerQuery(mediaQuery).mql.matches; });\n    };\n    /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @returns A stream of matches for the given queries.\n     */\n    /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @param {?} value\n     * @return {?} A stream of matches for the given queries.\n     */\n    BreakpointObserver.prototype.observe = /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @param {?} value\n     * @return {?} A stream of matches for the given queries.\n     */\n    function (value) {\n        var _this = this;\n        var /** @type {?} */ queries = coerceArray(value);\n        var /** @type {?} */ observables = queries.map(function (query) { return _this._registerQuery(query).observable; });\n        return combineLatest(observables, function (a, b) {\n            return {\n                matches: !!((a && a.matches) || (b && b.matches)),\n            };\n        });\n    };\n    /**\n     * Registers a specific query to be listened for.\n     * @param {?} query\n     * @return {?}\n     */\n    BreakpointObserver.prototype._registerQuery = /**\n     * Registers a specific query to be listened for.\n     * @param {?} query\n     * @return {?}\n     */\n    function (query) {\n        var _this = this;\n        // Only set up a new MediaQueryList if it is not already being listened for.\n        if (this._queries.has(query)) {\n            return /** @type {?} */ ((this._queries.get(query)));\n        }\n        var /** @type {?} */ mql = this.mediaMatcher.matchMedia(query);\n        // Create callback for match changes and add it is as a listener.\n        var /** @type {?} */ queryObservable = fromEventPattern(\n        // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n        // back into the zone because matchMedia is only included in Zone.js by loading the\n        // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n        // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n        // patches it.\n        // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n        // back into the zone because matchMedia is only included in Zone.js by loading the\n        // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n        // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n        // patches it.\n        function (listener) {\n            mql.addListener(function (e) { return _this.zone.run(function () { return listener(e); }); });\n        }, function (listener) {\n            mql.removeListener(function (e) { return _this.zone.run(function () { return listener(e); }); });\n        })\n            .pipe(takeUntil(this._destroySubject), startWith(mql), map(function (nextMql) { return ({ matches: nextMql.matches }); }));\n        // Add the MediaQueryList to the set of queries.\n        var /** @type {?} */ output = { observable: queryObservable, mql: mql };\n        this._queries.set(query, output);\n        return output;\n    };\n    BreakpointObserver.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    BreakpointObserver.ctorParameters = function () { return [\n        { type: MediaMatcher, },\n        { type: NgZone, },\n    ]; };\n    return BreakpointObserver;\n}());\nexport { BreakpointObserver };\nfunction BreakpointObserver_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    BreakpointObserver.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    BreakpointObserver.ctorParameters;\n    /**\n     * A map of all media queries currently being listened for.\n     * @type {?}\n     */\n    BreakpointObserver.prototype._queries;\n    /**\n     * A subject for all other observables to takeUntil based on.\n     * @type {?}\n     */\n    BreakpointObserver.prototype._destroySubject;\n    /** @type {?} */\n    BreakpointObserver.prototype.mediaMatcher;\n    /** @type {?} */\n    BreakpointObserver.prototype.zone;\n}\n//# sourceMappingURL=breakpoints-observer.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport var /** @type {?} */ Breakpoints = {\n    Handset: '(max-width: 599px) and (orientation: portrait), ' +\n        '(max-width: 959px) and (orientation: landscape)',\n    Tablet: '(min-width: 600px) and (max-width: 839px) and (orientation: portrait), ' +\n        '(min-width: 960px) and (max-width: 1279px) and (orientation: landscape)',\n    Web: '(min-width: 840px) and (orientation: portrait), ' +\n        '(min-width: 1280px) and (orientation: landscape)',\n    HandsetPortrait: '(max-width: 599px) and (orientation: portrait)',\n    TabletPortrait: '(min-width: 600px) and (max-width: 839px) and (orientation: portrait)',\n    WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n    HandsetLandscape: '(max-width: 959px) and (orientation: landscape)',\n    TabletLandscape: '(min-width: 960px) and (max-width: 1279px) and (orientation: landscape)',\n    WebLandscape: '(min-width: 1280px) and (orientation: landscape)',\n};\n//# sourceMappingURL=breakpoints.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { NgModule } from \"@angular/core\";\nimport { PlatformModule } from \"@angular/cdk/platform\";\nimport { BreakpointObserver } from \"./breakpoints-observer\";\nimport { MediaMatcher } from \"./media-matcher\";\nvar LayoutModule = /** @class */ (function () {\n    function LayoutModule() {\n    }\n    LayoutModule.decorators = [\n        { type: NgModule, args: [{\n                    providers: [BreakpointObserver, MediaMatcher],\n                    imports: [PlatformModule],\n                },] },\n    ];\n    /** @nocollapse */\n    LayoutModule.ctorParameters = function () { return []; };\n    return LayoutModule;\n}());\nexport { LayoutModule };\nfunction LayoutModule_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    LayoutModule.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    LayoutModule.ctorParameters;\n}\nexport { BreakpointObserver } from \"./breakpoints-observer\";\nexport { Breakpoints } from \"./breakpoints\";\nexport { MediaMatcher } from \"./media-matcher\";\n//# sourceMappingURL=public-api.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { LayoutModule, BreakpointObserver, Breakpoints, MediaMatcher } from \"./public-api\";\n//# sourceMappingURL=index.js.map"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA;;;;;AAWA,AACA,AACA;;;AAGA,IAAqB,kCAAkC,GAAG,IAAI,GAAG,EAAE,CAAC;;;;AAIpE,IAAI,YAAY,kBAAkB,YAAY;IAC1C,SAAS,YAAY,CAAC,QAAQ,EAAE;QAC5B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS;;;YAGtC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC;YAC9B,cAAc,CAAC;KACtB;;;;;;;;;;;;;;;IAeD,YAAY,CAAC,SAAS,CAAC,UAAU;;;;;;;;IAQjC,UAAU,KAAK,EAAE;QACb,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;YACtB,oBAAoB,CAAC,KAAK,CAAC,CAAC;SAC/B;QACD,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;KAClC,CAAC;IACF,YAAY,CAAC,UAAU,GAAG;QACtB,EAAE,IAAI,EAAE,UAAU,EAAE;KACvB,CAAC;;IAEF,YAAY,CAAC,cAAc,GAAG,YAAY,EAAE,OAAO;QAC/C,EAAE,IAAI,EAAE,QAAQ,GAAG;KACtB,CAAC,EAAE,CAAC;IACL,OAAO,YAAY,CAAC;CACvB,EAAE,CAAC,CAAC;AACL,AACA,AAgBA;;;;;;AAMA,SAAS,oBAAoB,CAAC,KAAK,EAAE;IACjC,IAAI,CAAC,kCAAkC,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;QAChD,IAAI;YACA,qBAAqB,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;YAC7D,KAAK,CAAC,YAAY,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;YACvC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;gBACd,qBAAqB,OAAO,GAAG,SAAS,GAAG,KAAK,GAAG,sBAAsB,CAAC;gBAC1E,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC;aACvD;YACD,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;;YAE5D,kCAAkC,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;SACxD;QACD,wBAAwB,CAAC,EAAE;YACvB,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;SACpB;KACJ;CACJ;;;;;;AAMD,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,OAAO;QACH,OAAO,EAAE,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,EAAE;QACxC,KAAK,EAAE,KAAK;QACZ,WAAW,EAAE,YAAY,GAAG;QAC5B,cAAc,EAAE,YAAY,GAAG;KAClC,CAAC;CACL,AACD;;ACxHA;;;;;AAWA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;AAIA,AAAO,AAA8B;AACrC,AAOA,AAIA,AAMA;;;AAGA,IAAI,kBAAkB,kBAAkB,YAAY;IAChD,SAAS,kBAAkB,CAAC,YAAY,EAAE,IAAI,EAAE;QAC5C,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;;;;QAIjB,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,EAAE,CAAC;;;;QAI1B,IAAI,CAAC,eAAe,GAAG,IAAI,OAAO,EAAE,CAAC;KACxC;;;;;;IAMD,kBAAkB,CAAC,SAAS,CAAC,WAAW;;;;IAIxC,YAAY;QACR,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;QAC5B,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC;KACnC,CAAC;;;;;;;;;;;IAWF,kBAAkB,CAAC,SAAS,CAAC,SAAS;;;;;IAKtC,UAAU,KAAK,EAAE;QACb,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,qBAAqB,OAAO,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC;QAClD,OAAO,OAAO,CAAC,IAAI,CAAC,UAAU,UAAU,EAAE,EAAE,OAAO,KAAK,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;KACvG,CAAC;;;;;;;;;;;;IAYF,kBAAkB,CAAC,SAAS,CAAC,OAAO;;;;;;IAMpC,UAAU,KAAK,EAAE;QACb,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,qBAAqB,OAAO,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC;QAClD,qBAAqB,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,KAAK,EAAE,EAAE,OAAO,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QACpH,OAAO,aAAa,CAAC,WAAW,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE;YAC9C,OAAO;gBACH,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC;aACpD,CAAC;SACL,CAAC,CAAC;KACN,CAAC;;;;;;IAMF,kBAAkB,CAAC,SAAS,CAAC,cAAc;;;;;IAK3C,UAAU,KAAK,EAAE;QACb,IAAI,KAAK,GAAG,IAAI,CAAC;;QAEjB,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;YAC1B,0BAA0B,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG;SACxD;QACD,qBAAqB,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;;QAE/D,qBAAqB,eAAe,GAAG,gBAAgB;;;;;;;;;;;QAWvD,UAAU,QAAQ,EAAE;YAChB,GAAG,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,EAAE,OAAO,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,OAAO,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;SACjG,EAAE,UAAU,QAAQ,EAAE;YACnB,GAAG,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE,EAAE,OAAO,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,OAAO,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;SACpG,CAAC;aACG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,UAAU,OAAO,EAAE,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;;QAE/H,qBAAqB,MAAM,GAAG,EAAE,UAAU,EAAE,eAAe,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;QACxE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QACjC,OAAO,MAAM,CAAC;KACjB,CAAC;IACF,kBAAkB,CAAC,UAAU,GAAG;QAC5B,EAAE,IAAI,EAAE,UAAU,EAAE;KACvB,CAAC;;IAEF,kBAAkB,CAAC,cAAc,GAAG,YAAY,EAAE,OAAO;QACrD,EAAE,IAAI,EAAE,YAAY,GAAG;QACvB,EAAE,IAAI,EAAE,MAAM,GAAG;KACpB,CAAC,EAAE,CAAC;IACL,OAAO,kBAAkB,CAAC;CAC7B,EAAE,CAAC,CAAC,AACL,AACA,AAsBC,AACD;;AChMA;;;;;AAWA,AAAO,IAAqB,WAAW,GAAG;IACtC,OAAO,EAAE,kDAAkD;QACvD,iDAAiD;IACrD,MAAM,EAAE,yEAAyE;QAC7E,yEAAyE;IAC7E,GAAG,EAAE,kDAAkD;QACnD,kDAAkD;IACtD,eAAe,EAAE,gDAAgD;IACjE,cAAc,EAAE,uEAAuE;IACvF,WAAW,EAAE,gDAAgD;IAC7D,gBAAgB,EAAE,iDAAiD;IACnE,eAAe,EAAE,yEAAyE;IAC1F,YAAY,EAAE,kDAAkD;CACnE,CAAC,AACF;;ACzBA;;;;;AAWA,AACA,AACA,AACA,AACA,IAAI,YAAY,kBAAkB,YAAY;IAC1C,SAAS,YAAY,GAAG;KACvB;IACD,YAAY,CAAC,UAAU,GAAG;QACtB,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;oBACb,SAAS,EAAE,CAAC,kBAAkB,EAAE,YAAY,CAAC;oBAC7C,OAAO,EAAE,CAAC,cAAc,CAAC;iBAC5B,EAAE,EAAE;KAChB,CAAC;;IAEF,YAAY,CAAC,cAAc,GAAG,YAAY,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC;IACzD,OAAO,YAAY,CAAC;CACvB,EAAE,CAAC,CAAC,AACL,AACA,AASA,AACA,AACA,AAA+C,AAC/C;;ACzCA;;;;;;GAMG,AACH,AAA2F,AAC3F;;"}