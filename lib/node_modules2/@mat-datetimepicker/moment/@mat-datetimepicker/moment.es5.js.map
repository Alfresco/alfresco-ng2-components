{"version":3,"file":"moment.es5.js","sources":["~/@mat-datetimepicker/moment/src/moment.ts","~/@mat-datetimepicker/moment/src/adapter/index.ts","~/@mat-datetimepicker/moment/src/adapter/moment-datetime-formats.ts","~/@mat-datetimepicker/moment/src/adapter/moment-datetime-adapter.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {MomentDatetimeModule,MatMomentDatetimeModule,MomentDatetimeAdapter,MAT_MOMENT_DATETIME_FORMATS} from './public_api';\n","import { NgModule } from '@angular/core';\nimport {\n  MatMomentDateModule,\n  MomentDateModule\n} from '@angular/material-moment-adapter';\nimport {\n  DatetimeAdapter,\n  MAT_DATETIME_FORMATS\n} from '@mat-datetimepicker/core';\nimport { MomentDatetimeAdapter } from './moment-datetime-adapter';\nimport { MAT_MOMENT_DATETIME_FORMATS } from './moment-datetime-formats';\n\nexport {MomentDatetimeAdapter} from './moment-datetime-adapter';\nexport {MAT_MOMENT_DATETIME_FORMATS} from './moment-datetime-formats';\nexport class MomentDatetimeModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [MomentDateModule],\n  providers: [\n    {\n      provide: DatetimeAdapter,\n      useClass: MomentDatetimeAdapter\n    }\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MomentDatetimeModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMomentDatetimeModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMomentDatetimeModule.ctorParameters;\n}\n\nexport class MatMomentDatetimeModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [MomentDatetimeModule, MatMomentDateModule],\n  providers: [{provide: MAT_DATETIME_FORMATS, useValue: MAT_MOMENT_DATETIME_FORMATS}]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MatMomentDatetimeModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMatMomentDatetimeModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMatMomentDatetimeModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { MatDatetimeFormats } from '@mat-datetimepicker/core';\n\nexport const /** @type {?} */ MAT_MOMENT_DATETIME_FORMATS: MatDatetimeFormats = {\n  parse: {\n    dateInput: \"l\",\n    monthInput: \"MMMM\",\n    timeInput: \"LT\",\n    datetimeInput: \"L LT\"\n  },\n  display: {\n    dateInput: \"l\",\n    monthInput: \"MMMM\",\n    datetimeInput: \"L LT\",\n    timeInput: \"LT\",\n    monthYearLabel: \"MMM YYYY\",\n    dateA11yLabel: \"LL\",\n    monthYearA11yLabel: \"MMMM YYYY\"\n  }\n};\n","import {\n  Inject,\n  Injectable,\n  Optional\n} from '@angular/core';\nimport {\n  DateAdapter,\n  MAT_DATE_LOCALE\n} from '@angular/material';\nimport { DatetimeAdapter } from '@mat-datetimepicker/core';\n\n// import * as moment from \"moment\";\n// import { Moment } from \"moment\";\n// can't get this to build... ><\n\nimport * as _moment from 'moment';\n// tslint:disable no-duplicate-imports\n\nimport {\n  default as _rollupMoment,\n  Moment\n} from 'moment';\n// tslint:enable no-duplicate-imports\n\nconst /** @type {?} */ moment = _rollupMoment || _moment;\n/**\n * @template T\n * @param {?} length\n * @param {?} valueFunction\n * @return {?}\n */\nfunction range<T>(length: number, valueFunction: (index: number) => T): T[] {\n  const /** @type {?} */ valuesArray = Array(length);\n  for (let /** @type {?} */ i = 0; i < length; i++) {\n    valuesArray[i] = valueFunction(i);\n  }\n  return valuesArray;\n}\nexport class MomentDatetimeAdapter extends DatetimeAdapter<Moment> {\nprivate _localeData: {\n    firstDayOfWeek: number,\n    longMonths: string[],\n    shortMonths: string[],\n    dates: string[],\n    hours: string[],\n    minutes: string[],\n    longDaysOfWeek: string[],\n    shortDaysOfWeek: string[],\n    narrowDaysOfWeek: string[]\n  };\n/**\n * @param {?} matDateLocale\n * @param {?} _delegate\n */\nconstructor(  matDateLocale: string, _delegate: DateAdapter<Moment>) {\n    super(_delegate);\n    this.setLocale(matDateLocale || moment.locale());\n  }\n/**\n * @param {?} locale\n * @return {?}\n */\nsetLocale(locale: string) {\n    super.setLocale(locale);\n\n    const /** @type {?} */ momentLocaleData = moment.localeData(locale);\n    this._localeData = {\n      firstDayOfWeek: momentLocaleData.firstDayOfWeek(),\n      longMonths: momentLocaleData.months(),\n      shortMonths: momentLocaleData.monthsShort(),\n      dates: range(31, (i) => super.createDate(2017, 0, i + 1).format(\"D\")),\n      hours: range(24, (i) => this.createDatetime(2017, 0, 1, i, 0).format(\"H\")),\n      minutes: range(60, (i) => this.createDatetime(2017, 0, 1, 1, i).format(\"m\")),\n      longDaysOfWeek: momentLocaleData.weekdays(),\n      shortDaysOfWeek: momentLocaleData.weekdaysShort(),\n      narrowDaysOfWeek: momentLocaleData.weekdaysMin()\n    };\n  }\n/**\n * @param {?} date\n * @return {?}\n */\ngetHour(date: Moment): number {\n    return super.clone(date).hour();\n  }\n/**\n * @param {?} date\n * @return {?}\n */\ngetMinute(date: Moment): number {\n    return super.clone(date).minute();\n  }\n/**\n * @param {?} startDate\n * @param {?} endDate\n * @return {?}\n */\nisInNextMonth(startDate: Moment, endDate: Moment): boolean {\n    const /** @type {?} */ nextMonth = this.getDateInNextMonth(startDate);\n    return super.sameMonthAndYear(nextMonth, endDate);\n  }\n/**\n * @param {?} year\n * @param {?} month\n * @param {?} date\n * @param {?} hour\n * @param {?} minute\n * @return {?}\n */\ncreateDatetime(year: number, month: number, date: number, hour: number, minute: number): Moment {\n    // Check for invalid month and date (except upper bound on date which we have to check after\n    // creating the Date).\n    if (month < 0 || month > 11) {\n      throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n    }\n\n    if (date < 1) {\n      throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n    }\n\n    if (hour < 0 || hour > 23) {\n      throw Error(`Invalid hour \"${hour}\". Hour has to be between 0 and 23.`);\n    }\n\n    if (minute < 0 || minute > 59) {\n      throw Error(`Invalid minute \"${minute}\". Minute has to be between 0 and 59.`);\n    }\n\n    // const result = moment({year, month, date, hour, minute}).locale(this.locale);\n    const /** @type {?} */ result = moment({year, month, date, hour, minute});\n\n    // If the result isn't valid, the date must have been out of bounds for this month.\n    if (!result.isValid()) {\n      throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n    }\n\n    return result;\n  }\n/**\n * @param {?} date\n * @return {?}\n */\nprivate getDateInNextMonth(date: Moment) {\n    return super.clone(date).date(1).add({month: 1});\n  }\n/**\n * @param {?} date\n * @return {?}\n */\ngetFirstDateOfMonth(date: Moment): Moment {\n    return super.clone(date).startOf(\"month\");\n  }\n/**\n * @return {?}\n */\ngetHourNames(): string[] {\n    return this._localeData.hours;\n  }\n/**\n * @return {?}\n */\ngetMinuteNames(): string[] {\n    return this._localeData.minutes;\n  }\n/**\n * @param {?} date\n * @param {?} hours\n * @return {?}\n */\naddCalendarHours(date: Moment, hours: number): Moment {\n    return super.clone(date).add({hours});\n  }\n/**\n * @param {?} date\n * @param {?} minutes\n * @return {?}\n */\naddCalendarMinutes(date: Moment, minutes: number): Moment {\n    return super.clone(date).add({minutes});\n  }\n/**\n * @param {?} value\n * @return {?}\n */\ndeserialize(value: any): Moment | null {\n     return this._delegate.deserialize(value);\n   }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_LOCALE, ] }, ]},\n{type: DateAdapter, },\n];\n}\n\nfunction MomentDatetimeAdapter_tsickle_Closure_declarations() {\n/** @type {?} */\nMomentDatetimeAdapter.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMomentDatetimeAdapter.ctorParameters;\n/** @type {?} */\nMomentDatetimeAdapter.prototype._localeData;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["_rollupMoment","_moment"],"mappings":";;;;;;;;;;;;;;;;AGWA,oCAAA;;;AAIA,sCAAA;AAGA,qCAAA;AAMA,IAFM,MAAA,GAASA,sBAAA,IAAiBC,aAAA,CAAQ;;;;;;;AASxC,eAPC,MAAA,EAAA,aAAA;IAQC,IAAF,gBAAA,CAPQ,WAAA,GAAc,KAAA,CAAM,MAAC,CAAM,CAAC;IAQlC,GAAF,CAAA,CAAO,IAAP,gBAAA,CAPW,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,MAAA,EAAQ,CAAA,EAAE,EAAG,CAOnC;QACI,WAAW,CAPC,CAAC,CAAC,GAAG,aAAA,CAAc,CAAC,CAAC,CAAC;IAQtC,CAAG;IACD,MAAF,CAPS,WAAA,CAAY;AAQrB,CAAC;AACD;IALC,yCAAA;;;;;IAqBD,+BAPe,aAAgB,EAAQ,SAA8B;QAOrE,YACI,kBAAM,SAAS,CAAC,SAEjB;QADC,KAAI,CAAC,SAAS,CAAC,aAAa,IAAI,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;;IACrD,CAAG;;;;;IAKH,yCAVG,GAUH,UAVG,MAAA;QAUH,iBAeG;QAdC,iBAVM,SAAC,YAAS,MAAC,CAAM,CAAC;QAYxB,IAAJ,gBAAA,CAVU,gBAAA,GAAmB,MAAA,CAAO,UAAC,CAAU,MAAC,CAAM,CAAC;QAWnD,IAAI,CAVC,WAAC,GAAa;YAWjB,cAAc,EAVE,gBAAA,CAAiB,cAAC,EAAc;YAWhD,UAAU,EAVE,gBAAA,CAAiB,MAAC,EAAM;YAWpC,WAAW,EAVE,gBAAA,CAAiB,WAAC,EAAW;YAW1C,KAAK,EAVE,KAAA,CAAM,EAAC,EAAG,UAAA,CAAE,IAAK,OAAA,iBAAM,UAAC,aAAU,IAAC,EAAK,CAAA,EAAG,CAAA,GAAI,CAAA,CAAE,CAAC,MAAC,CAAM,GAAC,CAAG,EAA5C,CAA4C,CAAC;YAWrE,KAAK,EAVE,KAAA,CAAM,EAAC,EAAG,UAAA,CAAE,IAAK,OAAA,KAAA,CAAK,cAAC,CAAc,IAAC,EAAK,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,CAAE,CAAC,MAAC,CAAM,GAAC,CAAG,EAAjD,CAAiD,CAAC;YAW1E,OAAO,EAVE,KAAA,CAAM,EAAC,EAAG,UAAA,CAAE,IAAK,OAAA,KAAA,CAAK,cAAC,CAAc,IAAC,EAAK,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,CAAE,CAAC,MAAC,CAAM,GAAC,CAAG,EAAjD,CAAiD,CAAC;YAW5E,cAAc,EAVE,gBAAA,CAAiB,QAAC,EAAQ;YAW1C,eAAe,EAVE,gBAAA,CAAiB,aAAC,EAAa;YAWhD,gBAAgB,EAVE,gBAAA,CAAiB,WAAC,EAAW;SAWhD,CAVC;IAWN,CAAG;;;;;IAKH,uCAbG,GAaH,UAbG,IAAA;QAcC,MAAJ,CAbW,iBAAM,KAAC,YAAK,IAAC,CAAI,CAAC,IAAC,EAAI,CAAE;IAcpC,CAAG;;;;;IAKH,yCAhBG,GAgBH,UAhBG,IAAA;QAiBC,MAAJ,CAhBW,iBAAM,KAAC,YAAK,IAAC,CAAI,CAAC,MAAC,EAAM,CAAE;IAiBtC,CAAG;;;;;;IAMH,6CApBG,GAoBH,UApBG,SAAA,EAAA,OAAA;QAqBC,IAAJ,gBAAA,CApBU,SAAA,GAAY,IAAA,CAAK,kBAAC,CAAkB,SAAC,CAAS,CAAC;QAqBrD,MAAJ,CApBW,iBAAM,gBAAC,YAAgB,SAAC,EAAU,OAAA,CAAQ,CAAC;IAqBtD,CAAG;;;;;;;;;IASH,8CA3BG,GA2BH,UA3BG,IAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA;;;QA8BC,EAAJ,CAAA,CAAQ,KA3BC,GAAO,CAAA,IAAK,KAAA,GAAQ,EAAA,CA2B7B,CA3BiC,CA2BjC;YACM,MA3BM,KAAA,CAAM,2BAAC,KAAwB,gDAAK,CAA4C,CAAC;QA4B7F,CAAK;QAED,EAAJ,CAAA,CAAQ,IA3BC,GAAM,CAAA,CA2Bf,CA3BkB,CA2BlB;YACM,MA3BM,KAAA,CAAM,oBAAC,IAAiB,uCAAI,CAAmC,CAAC;QA4B5E,CAAK;QAED,EAAJ,CAAA,CAAQ,IA3BC,GAAM,CAAA,IAAK,IAAA,GAAO,EAAA,CA2B3B,CA3B+B,CA2B/B;YACM,MA3BM,KAAA,CAAM,oBAAC,IAAiB,yCAAI,CAAqC,CAAC;QA4B9E,CAAK;QAED,EAAJ,CAAA,CAAQ,MA3BC,GAAQ,CAAA,IAAK,MAAA,GAAS,EAAA,CA2B/B,CA3BmC,CA2BnC;YACM,MA3BM,KAAA,CAAM,sBAAC,MAAmB,2CAAM,CAAuC,CAAC;QA4BpF,CAAK;;QAGD,IAAJ,gBAAA,CA3BU,MAAA,GAAS,MAAA,CAAO,EAAC,IAAC,MAAA,EAAK,KAAA,OAAA,EAAO,IAAA,MAAA,EAAM,IAAA,MAAA,EAAM,MAAA,QAAA,EAAO,CAAC,CAAC;;QA8BzD,EAAJ,CAAA,CAAQ,CA3BC,MAAC,CAAM,OAAC,EAAO,CA2BxB,CA3B2B,CA2B3B;YACM,MA3BM,KAAA,CAAM,oBAAC,IAAiB,kCAAI,KAA2B,QAAK,CAAI,CAAC;QA4B7E,CAAK;QAED,MAAJ,CA3BW,MAAA,CAAO;IA4BlB,CAAG;;;;;IAzBA,kDAAA,GAAA,UAAA,IAAA;QA+BC,MAAJ,CA9BW,iBAAM,KAAC,YAAK,IAAC,CAAI,CAAC,IAAC,CAAI,CAAC,CAAC,CAAC,GAAC,CAAG,EAAC,KAAC,EAAM,CAAA,EAAE,CAAC,CAAC;IA+BrD,CAAG;;;;;IAKH,mDAjCG,GAiCH,UAjCG,IAAA;QAkCC,MAAJ,CAjCW,iBAAM,KAAC,YAAK,IAAC,CAAI,CAAC,OAAC,CAAO,OAAC,CAAO,CAAC;IAkC9C,CAAG;;;;IAIH,4CAnCG,GAmCH;QACI,MAAJ,CAnCW,IAAA,CAAK,WAAC,CAAW,KAAC,CAAK;IAoClC,CAAG;;;;IAIH,8CArCG,GAqCH;QACI,MAAJ,CArCW,IAAA,CAAK,WAAC,CAAW,OAAC,CAAO;IAsCpC,CAAG;;;;;;IAMH,gDAzCG,GAyCH,UAzCG,IAAA,EAAA,KAAA;QA0CC,MAAJ,CAzCW,iBAAM,KAAC,YAAK,IAAC,CAAI,CAAC,GAAC,CAAG,EAAC,KAAC,OAAA,EAAK,CAAC,CAAC;IA0C1C,CAAG;;;;;;IAMH,kDA7CG,GA6CH,UA7CG,IAAA,EAAA,OAAA;QA8CC,MAAJ,CA7CW,iBAAM,KAAC,YAAK,IAAC,CAAI,CAAC,GAAC,CAAG,EAAC,OAAC,SAAA,EAAO,CAAC,CAAC;IA8C5C,CAAG;;;;;IAKH,2CAhDG,GAgDH,UAhDG,KAAA;QAiDE,MAAL,CAhDY,IAAA,CAAK,SAAC,CAAS,WAAC,CAAW,KAAC,CAAK,CAAC;IAiD9C,CAAI;;CApJJ,CALC,eAAA;AA0GM,qBAAP,CAAA,UAAO,GAAoC;IAiD3C,EAhDE,IAAA,EAAM,UAAA,EAAW;CAiDlB,CAhDC;;;;AAED,qBAAD,CAAA,cAAC,GAAA,cAAA,OAAA;IAmDD,EAAC,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,eAAe,EAAG,EAAE,EAAG,EAAC;IAClG,EAAC,IAAI,EAAE,WAAW,GAAG;CACpB,EArDA,CAqDA,CAAC;ADlMK,IAAM,2BAAA,GAAkD;IAC7D,KAAK,EAAE;QACL,SAAS,EAAE,GAAA;QACX,UAAU,EAAE,MAAA;QACZ,SAAS,EAAE,IAAA;QACX,aAAa,EAAE,MAAA;KAChB;IACD,OAAO,EAAE;QACP,SAAS,EAAE,GAAA;QACX,UAAU,EAAE,MAAA;QACZ,aAAa,EAAE,MAAA;QACf,SAAS,EAAE,IAAA;QACX,cAAc,EAAE,UAAA;QAChB,aAAa,EAAE,IAAA;QACf,kBAAkB,EAAE,WAAA;KACrB;CACF,CAAD;ADJA;IAAA;;;CAAA;AAGO,oBAAP,CAAA,UAAO,GAAoC;IAD3C,EAEE,IAAA,EAAM,QAAA,EAAU,IAAA,EAAM,CAAA;gBADtB,OAAO,EAEE,CAAA,gBAAE,CAAgB;gBAD3B,SAAS,EAEE;oBADT;wBACE,OAAO,EAEE,eAAA;wBADT,QAAQ,EAEE,qBAAA;qBADX;iBACF;aACF,EAEC,EAAG;CADJ,CAEC;;;;AAED,oBAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EACA,EADA,CACA,CAAC;AAGF;IAAA;;;CAAA;AAEO,uBAAP,CAAA,UAAO,GAAoC;IAU3C,EATE,IAAA,EAAM,QAAA,EAAU,IAAA,EAAM,CAAA;gBAUtB,OAAO,EATE,CAAA,oBAAE,EAAqB,mBAAA,CAAoB;gBAUpD,SAAS,EATE,CAAA,EAAE,OAAC,EAAQ,oBAAA,EAAsB,QAAA,EAAU,2BAAA,EAA4B,CAAC;aAUpF,EATC,EAAG;CAUJ,CATC;;;;AAED,uBAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EAYA,EAZA,CAYA,CAAC;ADtDF;;GAEG;"}
