{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap ac2d9a2b9ae4ba8797aa","webpack:///external \"@angular/core\"","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///external \"rxjs/Rx\"","webpack:///external \"ng2-alfresco-core\"","webpack:///external \"@angular/material\"","webpack:///external \"ng2-alfresco-datatable\"","webpack:///external \"@angular/common\"","webpack:///./content-services/material.module.ts","webpack:///./content-services/document-list/components/document-list.component.ts","webpack:///./content-services/services/rating.service.ts","webpack:///./content-services/services/tag.service.ts","webpack:///./content-services/document-list/models/permissions.model.ts","webpack:///external \"alfresco-js-api\"","webpack:///./node_modules/css-loader/lib/css-base.js","webpack:///./content-services/document-list/models/content-action.model.ts","webpack:///./content-services/document-list/services/document-actions.service.ts","webpack:///./content-services/document-list/services/folder-actions.service.ts","webpack:///./content-services/document-list/components/content-node-selector/content-node-selector.component.ts","webpack:///./content-services/document-list/components/breadcrumb/breadcrumb.component.ts","webpack:///./content-services/document-list/services/document-list.service.ts","webpack:///./content-services/upload/components/file-uploading-list.component.ts","webpack:///./content-services/social/rating.component.ts","webpack:///./content-services/social/like.component.ts","webpack:///./content-services/tag/tag-actions.component.ts","webpack:///./content-services/tag/tag-list.component.ts","webpack:///./content-services/tag/tag-node-list.component.ts","webpack:///./content-services/webscript/webscript.component.ts","webpack:///./content-services/document-list/data/share-datatable-adapter.ts","webpack:///./content-services/document-list/data/share-data-row.model.ts","webpack:///./content-services/document-list/components/node.event.ts","webpack:///./content-services/document-list/components/content-column/content-column.component.ts","webpack:///./content-services/document-list/components/content-column/content-column-list.component.ts","webpack:///./content-services/document-list/components/content-action/content-action.component.ts","webpack:///./content-services/document-list/components/content-action/content-action-list.component.ts","webpack:///./content-services/document-list/components/empty-folder/empty-folder-content.directive.ts","webpack:///./content-services/document-list/components/no-permission/no-permission-content.directive.ts","webpack:///./content-services/document-list/components/site-dropdown/sites-dropdown.component.ts","webpack:///./content-services/document-list/services/node-actions.service.ts","webpack:///./content-services/upload/index.ts","webpack:///./content-services/upload/components/upload-button.component.ts","webpack:///./content-services/upload/components/file-uploading-dialog.component.ts","webpack:///./content-services/upload/components/upload-drag-area.component.ts","webpack:///./content-services/upload/components/file-uploading-list-row.component.ts","webpack:///./content-services/upload/directives/file-draggable.directive.ts","webpack:///./content-services/index.ts","webpack:///./content-services/social/index.ts","webpack:///./content-services/social/public-api.ts","webpack:///./content-services/social/rating.component.scss?dc0b","webpack:///./content-services/social/rating.component.scss","webpack:///./content-services/social/rating.component.html","webpack:///./content-services/social/like.component.scss?7473","webpack:///./content-services/social/like.component.scss","webpack:///./content-services/social/like.component.html","webpack:///./content-services/social/social-module.ts","webpack:///./content-services/tag/index.ts","webpack:///./content-services/tag/public-api.ts","webpack:///./content-services/tag/tag-actions.component.html","webpack:///./content-services/tag/tag-actions.component.scss?61dd","webpack:///./content-services/tag/tag-actions.component.scss","webpack:///./content-services/tag/tag-list.component.html","webpack:///./content-services/tag/tag-list.component.scss?cebd","webpack:///./content-services/tag/tag-list.component.scss","webpack:///./content-services/tag/tag-node-list.component.html","webpack:///./content-services/tag/tag-node-list.component.scss?9ae3","webpack:///./content-services/tag/tag-node-list.component.scss","webpack:///./content-services/tag/tag-module.ts","webpack:///./content-services/webscript/index.ts","webpack:///./content-services/webscript/public-api.ts","webpack:///./content-services/webscript/webscript.component.html","webpack:///./content-services/webscript/webscript-module.ts","webpack:///./content-services/services/index.ts","webpack:///./content-services/services/public-api.ts","webpack:///./content-services/document-list/index.ts","webpack:///./content-services/document-list/public-api.ts","webpack:///./content-services/document-list/models/preset.model.ts","webpack:///./content-services/document-list/assets/images/empty_doc_lib.svg","webpack:///./content-services/document-list/components/document-list.component.scss?4b45","webpack:///./content-services/document-list/components/document-list.component.scss","webpack:///./content-services/document-list/components/document-list.component.html","webpack:///external \"rxjs/Observable\"","webpack:///./content-services/document-list/components/content-node-selector/content-node-selector.component.scss?4c46","webpack:///./content-services/document-list/components/content-node-selector/content-node-selector.component.scss","webpack:///./content-services/document-list/components/content-node-selector/content-node-selector.component.html","webpack:///./content-services/document-list/components/breadcrumb/breadcrumb.component.html","webpack:///./content-services/document-list/components/breadcrumb/breadcrumb.component.scss?2a42","webpack:///./content-services/document-list/components/breadcrumb/breadcrumb.component.scss","webpack:///./content-services/document-list/components/site-dropdown/sites-dropdown.component.scss?d98b","webpack:///./content-services/document-list/components/site-dropdown/sites-dropdown.component.scss","webpack:///./content-services/document-list/components/site-dropdown/sites-dropdown.component.html","webpack:///./content-services/document-list/models/document-library.model.ts","webpack:///./content-services/document-list/models/permissions-style.model.ts","webpack:///./content-services/document-list/document-list-module.ts","webpack:///external \"@angular/flex-layout\"","webpack:///./content-services/upload/public-api.ts","webpack:///./content-services/upload/components/upload-button.component.html","webpack:///./content-services/upload/components/upload-button.component.scss?9b92","webpack:///./content-services/upload/components/upload-button.component.scss","webpack:///./content-services/upload/components/file-uploading-list.component.html","webpack:///./content-services/upload/components/file-uploading-list.component.scss?8f77","webpack:///./content-services/upload/components/file-uploading-list.component.scss","webpack:///./content-services/upload/components/file-uploading-dialog.component.html","webpack:///./content-services/upload/components/file-uploading-dialog.component.scss?5571","webpack:///./content-services/upload/components/file-uploading-dialog.component.scss","webpack:///./content-services/upload/components/upload-drag-area.component.html","webpack:///./content-services/upload/components/upload-drag-area.component.css?8219","webpack:///./content-services/upload/components/upload-drag-area.component.css","webpack:///./content-services/upload/components/file-uploading-list-row.component.html","webpack:///./content-services/upload/components/file-uploading-list-row.component.scss?77a8","webpack:///./content-services/upload/components/file-uploading-list-row.component.scss","webpack:///./content-services/upload/upload-module.ts","webpack:///./content-services/document-list/components/breadcrumb/dropdown-breadcrumb.component.ts","webpack:///./content-services/document-list/components/breadcrumb/dropdown-breadcrumb.component.html","webpack:///./content-services/document-list/components/breadcrumb/dropdown-breadcrumb.component.scss?3668","webpack:///./content-services/document-list/components/breadcrumb/dropdown-breadcrumb.component.scss","webpack:///./content-services/document-list/components/version-manager/version-list.component.ts","webpack:///./content-services/document-list/components/version-manager/version-list.component.html","webpack:///./content-services/document-list/components/version-manager/version-list.component.scss?f91e","webpack:///./content-services/document-list/components/version-manager/version-list.component.scss","webpack:///./content-services/document-list/components/version-manager/version-manager.component.ts","webpack:///./content-services/document-list/components/version-manager/version-manager.component.html","webpack:///./content-services/document-list/components/version-manager/version-manager.component.scss?3479","webpack:///./content-services/document-list/components/version-manager/version-manager.component.scss","webpack:///./content-services/document-list/components/version-manager/version-upload.component.ts","webpack:///./content-services/document-list/components/version-manager/version-upload.component.html","webpack:///./content-services/document-list/components/content-node-selector/content-node-selector.service.ts"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_0__","__WEBPACK_EXTERNAL_MODULE_2__","__WEBPACK_EXTERNAL_MODULE_3__","__WEBPACK_EXTERNAL_MODULE_4__","__WEBPACK_EXTERNAL_MODULE_11__","__WEBPACK_EXTERNAL_MODULE_12__","__WEBPACK_EXTERNAL_MODULE_30__","__WEBPACK_EXTERNAL_MODULE_229__","__WEBPACK_EXTERNAL_MODULE_242__","__webpack_require__","moduleId","installedModules","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","decorators","target","key","desc","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","paramIndex","decorator","setPrototypeOf","Array","assign","material_1","MatButtonModule","MatChipsModule","MatDialogModule","MatIconModule","MatInputModule","MatListModule","MatProgressSpinnerModule","MatRippleModule","MatMenuModule","MatOptionModule","MatSelectModule","core_1","MaterialModule","__decorate","NgModule","imports","PaginationStrategy","__WEBPACK_IMPORTED_MODULE_8__node_event__","DocumentListComponent","DocumentListComponent_1","[object Object]","documentListService","ngZone","elementRef","apiService","appConfig","preferences","permissionsStyle","locationFormat","navigate","navigationMode","DOUBLE_CLICK_NAVIGATION","thumbnails","selectionMode","multiselect","enablePagination","contentActions","contentActionsPosition","contextMenuActions","pageSize","DEFAULT_PAGE_SIZE","emptyFolderImageUrl","allowDropFiles","loading","paginationStrategy","Finite","infiniteLoading","noPermission","selection","skipCount","rowFilter","imageResolver","currentFolderId","folderNode","node","nodeClick","__WEBPACK_IMPORTED_MODULE_1__angular_core__","nodeDblClick","folderChange","preview","ready","error","actions","contextActionHandler","__WEBPACK_IMPORTED_MODULE_4_rxjs_Rx__","layoutPresets","currentNodeAllowableOperations","CREATE_PERMISSION","defaultPageSizes","supportedPageSizes","entry","getNodeActions","map","a","model","subject","action","executeContentAction","hasCustomLayout","columnList","columns","result","paginationSize","pageSizes","indexOf","getDefaultPageSize","loadLayoutPresets","data","__WEBPACK_IMPORTED_MODULE_6__data_share_datatable_adapter__","getDefaultSorting","setFilter","setImageResolver","subscribe","val","contextActionCallback","enforceSingleClickNavigationForMobile","schema","setColumns","getColumns","setupDefaultColumns","changes","currentValue","loadFolder","previousValue","resetPagination","loadFolderByNodeId","resetSelection","loadPage","loadFolderNodesByFolderNodeId","merge","run","emit","dataTable","emptyFolderTemplate","noPermissionTemplate","test","navigator","userAgent","getRows","isEmpty","isFile","isFolder","ltarget","toLowerCase","actionsByTarget","filter","__WEBPACK_IMPORTED_MODULE_7__models_content_action_model__","forEach","checkPermission","permission","hasPermissions","allowableOperations","find","disableWithNoPermission","disabled","e","preventDefault","canNavigateFolder","id","handlerSub","handler","of","execute","nodeId","catch","err","loadTrashcan","loadSharedLinks","loadSites","loadMemberSites","loadFavorites","loadRecent","getFolderNode","then","JSON","parse","message","statusCode","maxItems","Promise","resolve","reject","getFolder","rootFolderId","isCurrentPageEmpty","updateSkipCount","pagination","list","options","include","nodesApi","getDeletedNodes","page","onPageLoaded","sharedLinksApi","findSharedLinks","sitesApi","getSites","peopleApi","getSiteMembership","entries","site","where","favoritesApi","getFavorites","file","folder","properties","cm:title","title","cm:description","description","getPerson","person","username","query","language","filterQueries","sort","type","field","ascending","paging","searchApi","search","hasNodeEntries","hasPages","isPaginationEnabled","preset","getLayoutPreset","domEvent","CustomEvent","detail","sender","bubbles","nativeElement","dispatchEvent","event","defaultPrevented","SINGLE_CLICK_NAVIGATION","onPreviewFile","performNavigation","row","args","value","getContextActions","reload","isMobile","defaultSorting","sorting","direction","__WEBPACK_IMPORTED_MODULE_3_ng2_alfresco_datatable__","isCustomSource","folderId","newSkipCount","hasPermission","element","hasCurrentNodePermission","externalSettings","__WEBPACK_IMPORTED_MODULE_5__models_preset_model__","col","__WEBPACK_IMPORTED_MODULE_0_tslib__","__WEBPACK_IMPORTED_MODULE_2_ng2_alfresco_core__","selector","styles","template","encapsulation","None","ng2_alfresco_core_1","Rx_1","RatingService","getRating","ratingType","Observable","fromPromise","getInstance","core","ratingsApi","res","handleError","postRating","vote","ratingBody","myRating","rate","deleteRating","removeRating","console","throw","Injectable","AlfrescoApiService","_a","__WEBPACK_IMPORTED_MODULE_2_rxjs_Rx__","TagService","logService","refresh","tagsApi","getNodeTags","getTags","tagName","tagBody","TagBody","tag","promiseAdd","addTag","promiseRemove","removeTag","PermissionModel","obj","__webpack_exports__","toString","item","push","join","mediaQuery","alreadyImportedModules","ContentActionModel","icon","DocumentActionModel","json","super","FolderActionModel","__WEBPACK_IMPORTED_MODULE_4__models_permissions_model__","DocumentActionsService","nodeActionsService","contentService","permissionEvent","__WEBPACK_IMPORTED_MODULE_3_rxjs_Rx__","success","handlers","setupActionHandlers","lkey","download","bind","copyNode","moveNode","deleteNode","canExecuteAction","link","document","createElement","body","appendChild","setAttribute","href","getContentUrl","click","removeChild","__WEBPACK_IMPORTED_MODULE_2_rxjs_Observable__","actionObservable","copyContent","prepareHandlers","moveContent","fileOperationMessage","next","handlerObservable","Error","__WEBPACK_IMPORTED_MODULE_3__models_permissions_model__","FolderActionsService","copyFolder","moveFolder","__WEBPACK_IMPORTED_MODULE_4__document_list_component__","ContentNodeSelectorComponent","contentNodeSelectorService","containingDialog","nodes","searchTerm","showingSearchResults","loadingSearchResults","inDialog","chosenNode","folderIdToShow","select","Infinite","chosenSite","siteId","guid","updateResults","whenInFolderNavigation","whenInSelectingSearchResult","breadcrumbFolderNode","documentList","startNewSearch","querySearch","isSearchTermLongEnough","showSearchResults","results","highlight","setTimeout","highlighter","attemptNodeSelection","resetChosenNode","close","__WEBPACK_IMPORTED_MODULE_3_ng2_alfresco_core__","__WEBPACK_IMPORTED_MODULE_2__angular_material__","alfresco_js_api_1","document_list_component_1","BreadcrumbComponent","rootId","route","EventEmitter","ngOnChanges","parseRoute","path","elements","slice","rootPos","getElementPosition","splice","findIndex","el","onRoutePathClick","Input","MinimalNodeEntryEntity","_b","Output","_c","Component","ViewEncapsulation","host","class","DocumentListService","DocumentListService_1","authService","thumbnailService","opts","rootNodeId","ROOT_ID","params","includeSource","relativePath","getNodeChildren","targetParentId","parentId","createFolder","getNodesPromise","getNodeInfo","getDocumentThumbnailUrl","mimeType","getMimeTypeIcon","getDefaultMimeTypeIcon","FileUploadingListComponent","uploadService","notificationService","translateService","FileUploadStatus","files","cancelFile","cancelUpload","removeFile","_this","status","notifyError","cancelAllFiles","getUploadingFiles","deletedFiles","Complete","forkJoin","apply","errors","isUploadCompleted","isUploadCancelled","Boolean","some","Starting","Progress","Pending","every","Aborted","Cancelled","Deleted","permanent","_i","fileName","total","openSnackMessage","ContentChild","TemplateRef","UploadService","NodesApiService","NotificationService","_d","AlfrescoTranslationService","__WEBPACK_IMPORTED_MODULE_2__services_rating_service__","RatingComponent","ratingService","average","changeVote","stars","ratingObserver","aggregate","calculateStars","fill","providers","rating_service_1","LikeComponent","likesCounter","isLike","clean","numberOfRatings","ratedAt","likeClick","TagActionsComponent","tagService","successAdd","disableAddTag","refreshTag","getTagsByNodeId","tagsEntries","searchTag","newTagName","errorMsg","searchTagName","currentTag","tag_service_1","TagListComponent","ngOnInit","getAllTheTags","TagNodeListComponent","ng2_alfresco_datatable_1","WebscriptComponent","showData","contextRoot","servicePath","contentType","undefined","showError","webScript","executeWebScript","scriptPath","scriptArgs","webScriptdata","showDataAsDataTable","log","ObjectDataTableAdapter","generateSchema","isDataTableContent","LogService","__WEBPACK_IMPORTED_MODULE_3__share_data_row_model__","ShareDataTableAdapter","ERR_ROW_NOT_FOUND","ERR_COL_NOT_FOUND","rows","dataRow","getValue","cache","formatDate","cacheValue","format","resolved","content","__WEBPACK_IMPORTED_MODULE_1_ng2_alfresco_core__","transform","__WEBPACK_IMPORTED_MODULE_0__angular_common__","sortRows","__WEBPACK_IMPORTED_MODULE_2_ng2_alfresco_datatable__","setSorting","resolver","includes","numeric","b","left","Date","valueOf","right","localeCompare","getSorting","sortable","concat","__WEBPACK_IMPORTED_MODULE_0_ng2_alfresco_core__","ShareDataRow","isSelected","cssClass","ERR_OBJECT_NOT_FOUND","isDropTarget","isFolderAndHasPermissionToUpload","getPermissionClass","nodeEntity","permissionsClasses","currentPermissionsStyle","applyPermissionStyleToFolder","applyPermissionStyleToFile","css","NodeEntityEvent","_super","entity","__extends","BaseEvent","NodeEntryEvent","ContentColumnComponent","srTitle","register","registerColumn","ContentColumnListComponent","column","__WEBPACK_IMPORTED_MODULE_4__models_content_action_model__","ContentActionComponent","documentActions","folderActions","getSystemHandler","registerAction","permision","getHandler","__WEBPACK_IMPORTED_MODULE_2__services_document_actions_service__","__WEBPACK_IMPORTED_MODULE_3__services_folder_actions_service__","ContentActionListComponent","EmptyFolderContentDirective","noContentTemplate","NoPermissionContentDirective","DropdownSitesComponent","sitesService","hideMyFiles","change","MY_FILES_VALUE","siteList","siteFound","siteSelected","content_node_selector_component_1","document_list_service_1","NodeActionsService","dialog","contentEntry","doFileOperation","observable","Subject","open","panelClass","width","selections","toUpperCase","closeAll","stringify","currentNodeId","MatDialog","AlfrescoContentService","__WEBPACK_IMPORT_KEY__","__WEBPACK_IMPORTED_MODULE_0__public_api__","__WEBPACK_IMPORTED_MODULE_4__document_list_models_permissions_model__","UploadButtonComponent","UploadButtonComponent_1","showNotificationBar","currentFolderPath","uploadFolders","multipleFiles","versioning","acceptedFilesType","tooltip","permissionValue","isForceDisable","isDisableWithNoPermission","$event","toFileArray","currentTarget","uploadFiles","latestFilesAdded","createFileModel","isFileAcceptable","isFileSizeAcceptable","addToQueue","uploadFilesInTheQueue","showUndoNotificationBar","newVersion","webkitRelativePath","replace","split","ext","extension","acceptableSize","maxFilesSize","size","messageTranslate","actionTranslate","openSnackMessageAction","onAction","hasCreatePermission","provide","useExisting","__WEBPACK_IMPORTED_MODULE_4__file_uploading_list_component__","FileUploadingDialogComponent","changeDetecor","position","filesUploadingList","isDialogActive","totalCompleted","totalErrors","isDialogMinimized","isConfirmation","listSubscription","queueChanged","fileList","counterSubscription","fileUploadComplete","fileUploadDeleted","totalComplete","detectChanges","errorSubscription","fileUploadError","totalError","fileUploadSubscription","fileUpload","fileDeleted","objId","toggleConfirmation","uploadList","clearQueue","unsubscribe","UploadDragAreaComponent","UploadDragAreaComponent_1","enabled","warn","fileModels","getQueue","fileModel","fullPath","isDirectory","flattern","relativeFolder","errorMessage","stopPropagation","fileInfo","isPermitted","FileUploadingListRowComponent","cancel","remove","FileDraggableDirective","filesDropped","filesEntityDropped","folderEntityDropped","cssClassName","runOutsideAngular","addEventListener","onDragEnter","onDragOver","onDragLeave","onDropFiles","removeEventListener","items","dataTransfer","webkitGetAsEntry","classList","add","__WEBPACK_IMPORTED_MODULE_5__upload__","__WEBPACK_IMPORTED_MODULE_2__social_module__","__WEBPACK_IMPORTED_MODULE_6__rating_component__","SocialModule","__WEBPACK_IMPORTED_MODULE_3__material_module__","__WEBPACK_IMPORTED_MODULE_5__like_component__","declarations","__WEBPACK_IMPORTED_MODULE_4__services_rating_service__","__export","__WEBPACK_IMPORTED_MODULE_7__tag_node_list_component__","TagModule","__WEBPACK_IMPORTED_MODULE_5__tag_actions_component__","__WEBPACK_IMPORTED_MODULE_6__tag_list_component__","__WEBPACK_IMPORTED_MODULE_4__services_tag_service__","multi","useValue","source","__WEBPACK_IMPORTED_MODULE_1__webscript_module__","__WEBPACK_IMPORTED_MODULE_5__webscript_component__","WebScriptModule","__WEBPACK_IMPORTED_MODULE_4__material_module__","__WEBPACK_IMPORTED_MODULE_1__tag_service__","__WEBPACK_IMPORTED_MODULE_21__document_list_module__","presetsDefaultModel","-trashcan-","-sites-","-mysites-","-favorites-","-recent-","-sharedlinks-","default","NodePaging","NodePagingList","NodeMinimalEntry","Pagination","NodeMinimal","UserInfo","ContentInfo","PathInfoEntity","PathElementEntity","PermissionStyleModel","__WEBPACK_IMPORTED_MODULE_25__services_node_actions_service__","DocumentListModule","__WEBPACK_IMPORTED_MODULE_4_ng2_alfresco_core__","__WEBPACK_IMPORTED_MODULE_5_ng2_alfresco_datatable__","__WEBPACK_IMPORTED_MODULE_2__angular_flex_layout__","__WEBPACK_IMPORTED_MODULE_6__upload__","__WEBPACK_IMPORTED_MODULE_14__components_document_list_component__","__WEBPACK_IMPORTED_MODULE_12__components_content_column_content_column_component__","__WEBPACK_IMPORTED_MODULE_11__components_content_column_content_column_list_component__","__WEBPACK_IMPORTED_MODULE_10__components_content_action_content_action_component__","__WEBPACK_IMPORTED_MODULE_9__components_content_action_content_action_list_component__","__WEBPACK_IMPORTED_MODULE_19__components_empty_folder_empty_folder_content_directive__","__WEBPACK_IMPORTED_MODULE_20__components_no_permission_no_permission_content_directive__","__WEBPACK_IMPORTED_MODULE_7__components_breadcrumb_breadcrumb_component__","__WEBPACK_IMPORTED_MODULE_15__components_site_dropdown_sites_dropdown_component__","__WEBPACK_IMPORTED_MODULE_8__components_breadcrumb_dropdown_breadcrumb_component__","__WEBPACK_IMPORTED_MODULE_13__components_content_node_selector_content_node_selector_component__","__WEBPACK_IMPORTED_MODULE_16__components_version_manager_version_list_component__","__WEBPACK_IMPORTED_MODULE_18__components_version_manager_version_upload_component__","__WEBPACK_IMPORTED_MODULE_17__components_version_manager_version_manager_component__","__WEBPACK_IMPORTED_MODULE_23__services_document_list_service__","__WEBPACK_IMPORTED_MODULE_24__services_folder_actions_service__","__WEBPACK_IMPORTED_MODULE_22__services_document_actions_service__","__WEBPACK_IMPORTED_MODULE_21__components_content_node_selector_content_node_selector_service__","entryComponents","__WEBPACK_IMPORTED_MODULE_6__upload_module__","material_module_1","file_uploading_dialog_component_1","file_uploading_list_row_component_1","file_uploading_list_component_1","upload_button_component_1","upload_drag_area_component_1","file_draggable_directive_1","UploadModule","CoreModule","TRANSLATION_PROVIDER","DropdownBreadcrumbComponent","recalculateNodes","currentNode","previousNodes","reverse","selectbox","hasPreviousNodes","ViewChild","MatSelect","VersionListComponent","alfrescoApi","versions","isLoading","versionsApi","loadVersionHistory","versionId","revertVersion","majorVersion","comment","listVersionHistory","VersionManagerComponent","VersionUploadComponent","ContentNodeSelectorService","searchService","searchOpts","nodeType","orderBy","getNodeQueryResults","SearchService"],"mappings":"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","file":"content-services/bundles/content-services.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@angular/core\"), require(\"rxjs/Rx\"), require(\"ng2-alfresco-core\"), require(\"@angular/material\"), require(\"ng2-alfresco-datatable\"), require(\"@angular/common\"), require(\"alfresco-js-api\"), require(\"rxjs/Observable\"), require(\"@angular/flex-layout\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@angular/core\", \"rxjs/Rx\", \"ng2-alfresco-core\", \"@angular/material\", \"ng2-alfresco-datatable\", \"@angular/common\", \"alfresco-js-api\", \"rxjs/Observable\", \"@angular/flex-layout\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"content-services\"] = factory(require(\"@angular/core\"), require(\"rxjs/Rx\"), require(\"ng2-alfresco-core\"), require(\"@angular/material\"), require(\"ng2-alfresco-datatable\"), require(\"@angular/common\"), require(\"alfresco-js-api\"), require(\"rxjs/Observable\"), require(\"@angular/flex-layout\"));\n\telse\n\t\troot[\"content-services\"] = factory(root[\"@angular/core\"], root[\"rxjs/Rx\"], root[\"ng2-alfresco-core\"], root[\"@angular/material\"], root[\"ng2-alfresco-datatable\"], root[\"@angular/common\"], root[\"alfresco-js-api\"], root[\"rxjs/Observable\"], root[\"@angular/flex-layout\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_11__, __WEBPACK_EXTERNAL_MODULE_12__, __WEBPACK_EXTERNAL_MODULE_30__, __WEBPACK_EXTERNAL_MODULE_229__, __WEBPACK_EXTERNAL_MODULE_242__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 194);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ac2d9a2b9ae4ba8797aa","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/core\"\n// module id = 0\n// module chunks = 0 1 2","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslib/tslib.es6.js\n// module id = 1\n// module chunks = 0 1 2","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"rxjs/Rx\"\n// module id = 2\n// module chunks = 0 1 2","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ng2-alfresco-core\"\n// module id = 3\n// module chunks = 1 2","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/material\"\n// module id = 4\n// module chunks = 0 1 2","module.exports = __WEBPACK_EXTERNAL_MODULE_11__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ng2-alfresco-datatable\"\n// module id = 11\n// module chunks = 1 2","module.exports = __WEBPACK_EXTERNAL_MODULE_12__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/common\"\n// module id = 12\n// module chunks = 0 2","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport {\n    MatButtonModule,\n    MatChipsModule,\n    MatDialogModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatOptionModule,\n    MatProgressSpinnerModule,\n    MatRippleModule,\n    MatSelectModule\n} from '@angular/material';\n\nexport function modules() {\n    return [\n        MatButtonModule,\n        MatChipsModule,\n        MatDialogModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatProgressSpinnerModule,\n        MatRippleModule,\n        MatMenuModule,\n        MatOptionModule,\n        MatSelectModule\n    ];\n}\n\n@NgModule({\n    imports: modules(),\n    exports: modules()\n})\nexport class MaterialModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/material.module.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    AfterContentInit, Component, ContentChild, ElementRef, EventEmitter, HostListener, Input, NgZone,\n    OnChanges, OnInit, Output, SimpleChanges, TemplateRef, ViewChild, ViewEncapsulation\n} from '@angular/core';\nimport { DeletedNodesPaging, MinimalNodeEntity, MinimalNodeEntryEntity, NodePaging, Pagination, PersonEntry, SitePaging } from 'alfresco-js-api';\nimport { AlfrescoApiService, AppConfigService, DataColumnListComponent, UserPreferencesService } from 'ng2-alfresco-core';\nimport { DataCellEvent, DataColumn, DataRowActionEvent, DataSorting, DataTableComponent, ObjectDataColumn } from '@adf/core';\nimport { Observable, Subject } from 'rxjs/Rx';\nimport { presetsDefaultModel } from '../models/preset.model';\nimport { ImageResolver } from './../data/image-resolver.model';\nimport { RowFilter } from './../data/row-filter.model';\nimport { ShareDataRow } from './../data/share-data-row.model';\nimport { ShareDataTableAdapter } from './../data/share-datatable-adapter';\n\nimport { ContentActionModel } from './../models/content-action.model';\nimport { PermissionStyleModel } from './../models/permissions-style.model';\nimport { DocumentListService } from './../services/document-list.service';\nimport { NodeEntityEvent, NodeEntryEvent } from './node.event';\n\ndeclare var require: any;\n\nexport enum PaginationStrategy {\n    Finite,\n    Infinite\n}\n\n@Component({\n    selector: 'adf-document-list',\n    styles: [require('./document-list.component.scss')],\n    template: require('./document-list.component.html'),\n    encapsulation: ViewEncapsulation.None\n})\nexport class DocumentListComponent implements OnInit, OnChanges, AfterContentInit {\n\n    static SINGLE_CLICK_NAVIGATION: string = 'click';\n    static DOUBLE_CLICK_NAVIGATION: string = 'dblclick';\n    static DEFAULT_PAGE_SIZE: number = 20;\n\n    @ContentChild(DataColumnListComponent) columnList: DataColumnListComponent;\n\n    @Input()\n    permissionsStyle: PermissionStyleModel[] = [];\n\n    @Input()\n    locationFormat: string = '/';\n\n    @Input()\n    navigate: boolean = true;\n\n    @Input()\n    navigationMode: string = DocumentListComponent.DOUBLE_CLICK_NAVIGATION; // click|dblclick\n\n    @Input()\n    thumbnails: boolean = false;\n\n    @Input()\n    selectionMode: string = 'single'; // null|single|multiple\n\n    @Input()\n    multiselect: boolean = false;\n\n    @Input()\n    enablePagination: boolean = true;\n\n    @Input()\n    contentActions: boolean = false;\n\n    @Input()\n    contentActionsPosition: string = 'right'; // left|right\n\n    @Input()\n    contextMenuActions: boolean = false;\n\n    @Input()\n    pageSize: number = DocumentListComponent.DEFAULT_PAGE_SIZE;\n\n    @Input()\n    emptyFolderImageUrl: string = require('../assets/images/empty_doc_lib.svg');\n\n    @Input()\n    allowDropFiles: boolean = false;\n\n    @Input()\n    sorting: string[];\n\n    @Input()\n    rowStyle: string;\n\n    @Input()\n    rowStyleClass: string;\n\n    @Input()\n    loading: boolean = false;\n\n    @Input()\n    paginationStrategy: PaginationStrategy = PaginationStrategy.Finite;\n\n    @Input()\n    supportedPageSizes: number[];\n\n    infiniteLoading: boolean = false;\n    noPermission: boolean = false;\n\n    selection = new Array<MinimalNodeEntity>();\n    skipCount: number = 0;\n    pagination: Pagination;\n\n    @Input()\n    rowFilter: RowFilter|null = null;\n\n    @Input()\n    imageResolver: ImageResolver|null = null;\n\n    // The identifier of a node. You can also use one of these well-known aliases: -my- | -shared- | -root-\n    @Input()\n    currentFolderId: string = null;\n\n    @Input()\n    folderNode: MinimalNodeEntryEntity = null;\n\n    @Input()\n    node: NodePaging = null;\n\n    @Output()\n    nodeClick: EventEmitter<NodeEntityEvent> = new EventEmitter<NodeEntityEvent>();\n\n    @Output()\n    nodeDblClick: EventEmitter<NodeEntityEvent> = new EventEmitter<NodeEntityEvent>();\n\n    @Output()\n    folderChange: EventEmitter<NodeEntryEvent> = new EventEmitter<NodeEntryEvent>();\n\n    @Output()\n    preview: EventEmitter<NodeEntityEvent> = new EventEmitter<NodeEntityEvent>();\n\n    @Output()\n    ready: EventEmitter<any> = new EventEmitter();\n\n    @Output()\n    error: EventEmitter<any> = new EventEmitter();\n\n    @ViewChild(DataTableComponent)\n    dataTable: DataTableComponent;\n\n    errorMessage;\n    actions: ContentActionModel[] = [];\n    emptyFolderTemplate: TemplateRef<any>;\n    noPermissionTemplate: TemplateRef<any>;\n    contextActionHandler: Subject<any> = new Subject();\n    data: ShareDataTableAdapter;\n\n    private layoutPresets = {};\n    private currentNodeAllowableOperations: string[] = [];\n    private CREATE_PERMISSION = 'create';\n    private defaultPageSizes = [5, 10, 15, 20];\n\n    constructor(private documentListService: DocumentListService,\n                private ngZone: NgZone,\n                private elementRef: ElementRef,\n                private apiService: AlfrescoApiService,\n                private appConfig: AppConfigService,\n                private preferences: UserPreferencesService) {\n        this.supportedPageSizes = appConfig.get('document-list.supportedPageSizes', this.defaultPageSizes);\n    }\n\n    getContextActions(node: MinimalNodeEntity) {\n        if (node && node.entry) {\n            let actions = this.getNodeActions(node);\n            if (actions && actions.length > 0) {\n                return actions.map(a => {\n                    return {\n                        model: a,\n                        node: node,\n                        subject: this.contextActionHandler\n                    };\n                });\n            }\n        }\n        return null;\n    }\n\n    contextActionCallback(action) {\n        if (action) {\n            this.executeContentAction(action.node, action.model);\n        }\n    }\n\n    get hasCustomLayout(): boolean {\n        return this.columnList && this.columnList.columns && this.columnList.columns.length > 0;\n    }\n\n    getDefaultPageSize(): number {\n        let result = this.preferences.paginationSize;\n\n        const pageSizes = this.supportedPageSizes || this.defaultPageSizes;\n        if (pageSizes && pageSizes.length > 0 && pageSizes.indexOf(result) < 0) {\n            result = pageSizes[0];\n        }\n\n        return result;\n    }\n\n    ngOnInit() {\n        this.pageSize = this.getDefaultPageSize();\n        this.loadLayoutPresets();\n        this.data = new ShareDataTableAdapter(this.documentListService, null, this.getDefaultSorting());\n        this.data.thumbnails = this.thumbnails;\n        this.data.permissionsStyle = this.permissionsStyle;\n\n        if (this.rowFilter) {\n            this.data.setFilter(this.rowFilter);\n        }\n\n        if (this.imageResolver) {\n            this.data.setImageResolver(this.imageResolver);\n        }\n\n        this.contextActionHandler.subscribe(val => this.contextActionCallback(val));\n\n        this.enforceSingleClickNavigationForMobile();\n    }\n\n    ngAfterContentInit() {\n        let schema: DataColumn[] = [];\n\n        if (this.hasCustomLayout) {\n            schema = this.columnList.columns.map(c => <DataColumn> c);\n        }\n\n        if (!this.data) {\n            this.data = new ShareDataTableAdapter(this.documentListService, schema, this.getDefaultSorting());\n        } else if (schema && schema.length > 0) {\n            this.data.setColumns(schema);\n        }\n\n        let columns = this.data.getColumns();\n        if (!columns || columns.length === 0) {\n            this.setupDefaultColumns(this.currentFolderId);\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.folderNode && changes.folderNode.currentValue) {\n            this.loadFolder();\n        } else if (changes.currentFolderId && changes.currentFolderId.currentValue) {\n            if (changes.currentFolderId.previousValue !== changes.currentFolderId.currentValue) {\n                this.resetPagination();\n                this.folderNode = null;\n            }\n            if (!this.hasCustomLayout) {\n                this.setupDefaultColumns(changes.currentFolderId.currentValue);\n            }\n            this.loadFolderByNodeId(changes.currentFolderId.currentValue);\n        } else if (this.data) {\n            if (changes.node && changes.node.currentValue) {\n                this.resetSelection();\n                this.data.loadPage(changes.node.currentValue);\n            } else if (changes.rowFilter) {\n                this.data.setFilter(changes.rowFilter.currentValue);\n                if (this.currentFolderId) {\n                    this.loadFolderNodesByFolderNodeId(this.currentFolderId, this.pageSize, this.skipCount);\n                }\n            } else if (changes.imageResolver) {\n                this.data.setImageResolver(changes.imageResolver.currentValue);\n            }\n        }\n    }\n\n    reload(merge: boolean = false) {\n        this.ngZone.run(() => {\n            this.resetSelection();\n\n            if (this.folderNode) {\n                this.loadFolder(merge);\n            } else if (this.currentFolderId) {\n                this.loadFolderByNodeId(this.currentFolderId);\n            } else if (this.node) {\n                this.data.loadPage(this.node);\n                this.ready.emit();\n            }\n        });\n    }\n\n    isEmptyTemplateDefined(): boolean {\n        if (this.dataTable) {\n            if (this.emptyFolderTemplate) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    isNoPermissionTemplateDefined(): boolean {\n        if (this.dataTable) {\n            if (this.noPermissionTemplate) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    isMobile(): boolean {\n        return !!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n    }\n\n    isEmpty() {\n        return !this.data || this.data.getRows().length === 0;\n    }\n\n    isPaginationEnabled() {\n        return this.enablePagination && !this.isEmpty();\n    }\n\n    isPaginationNeeded() {\n        return this.paginationStrategy === PaginationStrategy.Finite;\n    }\n\n    getNodeActions(node: MinimalNodeEntity | any): ContentActionModel[] {\n        let target = null;\n\n        if (node && node.entry) {\n            if (node.entry.isFile) {\n                target = 'document';\n            }\n\n            if (node.entry.isFolder) {\n                target = 'folder';\n            }\n\n            if (target) {\n                let ltarget = target.toLowerCase();\n                let actionsByTarget = this.actions.filter(entry => {\n                    return entry.target.toLowerCase() === ltarget;\n                }).map(action => new ContentActionModel(action));\n\n                actionsByTarget.forEach((action) => {\n                    this.checkPermission(node, action);\n                });\n\n                return actionsByTarget;\n            }\n        }\n\n        return [];\n    }\n\n    checkPermission(node: any, action: ContentActionModel): ContentActionModel {\n        if (action.permission) {\n            if (this.hasPermissions(node)) {\n                let permissions = node.entry.allowableOperations;\n                let findPermission = permissions.find(permission => permission === action.permission);\n                if (!findPermission && action.disableWithNoPermission === true) {\n                    action.disabled = true;\n                }\n            }\n        }\n        return action;\n    }\n\n    private hasPermissions(node: any): boolean {\n        return node.entry.allowableOperations ? true : false;\n    }\n\n    @HostListener('contextmenu', ['$event'])\n    onShowContextMenu(e?: Event) {\n        if (e && this.contextMenuActions) {\n            e.preventDefault();\n        }\n    }\n\n    performNavigation(node: MinimalNodeEntity): boolean {\n        if (this.canNavigateFolder(node)) {\n            this.currentFolderId = node.entry.id;\n            this.folderNode = node.entry;\n            this.skipCount = 0;\n            this.currentNodeAllowableOperations = node.entry['allowableOperations'] ? node.entry['allowableOperations'] : [];\n            this.loadFolder();\n            this.folderChange.emit(new NodeEntryEvent(node.entry));\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Invoked when executing content action for a document or folder.\n     * @param node Node to be the context of the execution.\n     * @param action Action to be executed against the context.\n     */\n    executeContentAction(node: MinimalNodeEntity, action: ContentActionModel) {\n        if (node && node.entry && action) {\n            let handlerSub;\n\n            if (typeof action.handler === 'function') {\n                handlerSub = action.handler(node, this, action.permission);\n            } else {\n                handlerSub = Observable.of(true);\n            }\n\n            if (typeof action.execute === 'function') {\n                handlerSub.subscribe(() => { action.execute(node); });\n            }\n        }\n    }\n\n    loadFolder(merge: boolean = false) {\n        if (merge) {\n            this.infiniteLoading = true;\n        } else {\n            this.loading = true;\n        }\n\n        let nodeId = this.folderNode ? this.folderNode.id : this.currentFolderId;\n        if (nodeId) {\n            this.loadFolderNodesByFolderNodeId(nodeId, this.pageSize, this.skipCount, merge).catch(err => this.error.emit(err));\n        }\n    }\n\n    // gets folder node and its content\n    loadFolderByNodeId(nodeId: string) {\n        this.loading = true;\n        this.resetSelection();\n\n        if (nodeId === '-trashcan-') {\n            this.loadTrashcan();\n        } else if (nodeId === '-sharedlinks-') {\n            this.loadSharedLinks();\n        } else if (nodeId === '-sites-') {\n            this.loadSites();\n        } else if (nodeId === '-mysites-') {\n            this.loadMemberSites();\n        } else if (nodeId === '-favorites-') {\n            this.loadFavorites();\n        } else if (nodeId === '-recent-') {\n            this.loadRecent();\n        } else {\n            this.documentListService\n                .getFolderNode(nodeId)\n                .then(node => {\n                    this.folderNode = node;\n                    this.currentFolderId = node.id;\n                    this.skipCount = 0;\n                    this.currentNodeAllowableOperations = node['allowableOperations'] ? node['allowableOperations'] : [];\n                    return this.loadFolderNodesByFolderNodeId(node.id, this.pageSize, this.skipCount);\n                })\n                .catch(err => {\n                    if (JSON.parse(err.message).error.statusCode === 403) {\n                        this.loading = false;\n                        this.noPermission = true;\n                    }\n                    this.error.emit(err);\n                });\n        }\n    }\n\n    loadFolderNodesByFolderNodeId(id: string, maxItems: number, skipCount: number, merge: boolean = false): Promise<any> {\n        return new Promise((resolve, reject) => {\n            this.resetSelection();\n            this.documentListService\n                .getFolder(null, {\n                    maxItems: maxItems,\n                    skipCount: skipCount,\n                    rootFolderId: id\n                })\n                .subscribe(\n                    val => {\n                        if (this.isCurrentPageEmpty(val, skipCount)) {\n                            this.updateSkipCount(skipCount - maxItems);\n                            this.loadFolderNodesByFolderNodeId(id, maxItems, skipCount - maxItems).then(\n                                () => resolve(true),\n                                error => reject(error)\n                            );\n                        } else {\n                            this.data.loadPage(<NodePaging> val, merge);\n                            this.pagination = val.list.pagination;\n                            this.loading = false;\n                            this.infiniteLoading = false;\n                            this.ready.emit();\n                            resolve(true);\n                        }\n                    },\n                    error => {\n                        reject(error);\n                    });\n        });\n\n    }\n\n    resetSelection() {\n        this.dataTable.resetSelection();\n        this.selection = [];\n    }\n\n    resetPagination() {\n        this.skipCount = 0;\n    }\n\n    private loadTrashcan(): void {\n        const options = {\n            include: [ 'path', 'properties' ],\n            maxItems: this.pageSize,\n            skipCount: this.skipCount\n        };\n        this.apiService.nodesApi.getDeletedNodes(options)\n            .then((page: DeletedNodesPaging) => this.onPageLoaded(page))\n            .catch(error => this.error.emit(error));\n    }\n\n    private loadSharedLinks(): void {\n        const options = {\n            include: [ 'properties', 'allowableOperations', 'path' ],\n            maxItems: this.pageSize,\n            skipCount: this.skipCount\n        };\n        this.apiService.sharedLinksApi.findSharedLinks(options)\n            .then((page: NodePaging) => this.onPageLoaded(page))\n            .catch(error => this.error.emit(error));\n    }\n\n    private loadSites(): void {\n        const options = {\n            include: [ 'properties' ],\n            maxItems: this.pageSize,\n            skipCount: this.skipCount\n        };\n\n        this.apiService.sitesApi.getSites(options)\n            .then((page: NodePaging) => this.onPageLoaded(page))\n            .catch(error => this.error.emit(error));\n    }\n\n    private loadMemberSites(): void {\n        const options = {\n            include: [ 'properties' ],\n            maxItems: this.pageSize,\n            skipCount: this.skipCount\n        };\n\n        this.apiService.peopleApi.getSiteMembership('-me-', options)\n            .then((result: SitePaging) => {\n                let page: NodePaging = {\n                    list: {\n                        entries: result.list.entries\n                            .map(({ entry: { site }}: any) => ({\n                                entry: site\n                            })),\n                        pagination: result.list.pagination\n                    }\n                };\n\n                this.onPageLoaded(page);\n            })\n            .catch(error => this.error.emit(error));\n    }\n\n    private loadFavorites(): void {\n        const options = {\n            maxItems: this.pageSize,\n            skipCount: this.skipCount,\n            where: '(EXISTS(target/file) OR EXISTS(target/folder))',\n            include: [ 'properties', 'allowableOperations', 'path' ]\n        };\n\n        this.apiService.favoritesApi.getFavorites('-me-', options)\n            .then((result: NodePaging) => {\n                let page: NodePaging = {\n                    list: {\n                        entries: result.list.entries\n                            .map(({ entry: { target }}: any) => ({\n                                entry: target.file || target.folder\n                            }))\n                            .map(({ entry }: any) => {\n                                entry.properties = {\n                                    'cm:title': entry.title,\n                                    'cm:description': entry.description\n                                };\n                                return { entry };\n                            }),\n                        pagination: result.list.pagination\n                    }\n                };\n                this.onPageLoaded(page);\n            })\n            .catch(error => this.error.emit(error));\n    }\n\n    private loadRecent(): void {\n        this.apiService.peopleApi.getPerson('-me-')\n            .then((person: PersonEntry) => {\n                const username = person.entry.id;\n                const query = {\n                    query: {\n                        query: '*',\n                        language: 'afts'\n                    },\n                    filterQueries: [\n                        { query: `cm:modified:[NOW/DAY-30DAYS TO NOW/DAY+1DAY]` },\n                        { query: `cm:modifier:${username} OR cm:creator:${username}` },\n                        { query: `TYPE:\"content\" AND -TYPE:\"app:filelink\" AND -TYPE:\"fm:post\"` }\n                    ],\n                    include: [ 'path', 'properties', 'allowableOperations' ],\n                    sort: [{\n                        type: 'FIELD',\n                        field: 'cm:modified',\n                        ascending: false\n                    }],\n                    paging: {\n                        maxItems: this.pageSize,\n                        skipCount: this.skipCount\n                    }\n                };\n\n                return this.apiService.searchApi.search(query);\n            })\n            .then((page: NodePaging) => this.onPageLoaded(page))\n            .catch(error => this.error.emit(error));\n    }\n\n    private onPageLoaded(page: NodePaging) {\n        if (page) {\n            this.data.loadPage(page);\n            this.pagination = page.list.pagination;\n            this.loading = false;\n            this.ready.emit();\n        }\n    }\n\n    private isCurrentPageEmpty(node, skipCount): boolean {\n        return !this.hasNodeEntries(node) && this.hasPages(skipCount);\n    }\n\n    private hasPages(skipCount): boolean {\n        return skipCount > 0 && this.isPaginationEnabled();\n    }\n\n    private hasNodeEntries(node): boolean {\n        return node && node.list && node.list.entries && node.list.entries.length > 0;\n    }\n\n    /**\n     * Creates a set of predefined columns.\n     */\n    setupDefaultColumns(preset: string = 'default'): void {\n        if (this.data) {\n            const columns = this.getLayoutPreset(preset);\n            this.data.setColumns(columns);\n        }\n    }\n\n    onPreviewFile(node: MinimalNodeEntity) {\n        if (node) {\n            this.preview.emit(new NodeEntityEvent(node));\n        }\n    }\n\n    onNodeClick(node: MinimalNodeEntity) {\n        const domEvent = new CustomEvent('node-click', {\n            detail: {\n                sender: this,\n                node: node\n            },\n            bubbles: true\n        });\n        this.elementRef.nativeElement.dispatchEvent(domEvent);\n\n        const event = new NodeEntityEvent(node);\n        this.nodeClick.emit(event);\n\n        if (!event.defaultPrevented) {\n            if (this.navigate && this.navigationMode === DocumentListComponent.SINGLE_CLICK_NAVIGATION) {\n                if (node && node.entry) {\n                    if (node.entry.isFile) {\n                        this.onPreviewFile(node);\n                    }\n\n                    if (node.entry.isFolder) {\n                        this.performNavigation(node);\n                    }\n                }\n            }\n        }\n    }\n\n    onNodeDblClick(node: MinimalNodeEntity) {\n        const domEvent = new CustomEvent('node-dblclick', {\n            detail: {\n                sender: this,\n                node: node\n            },\n            bubbles: true\n        });\n        this.elementRef.nativeElement.dispatchEvent(domEvent);\n\n        const event = new NodeEntityEvent(node);\n        this.nodeDblClick.emit(event);\n\n        if (!event.defaultPrevented) {\n            if (this.navigate && this.navigationMode === DocumentListComponent.DOUBLE_CLICK_NAVIGATION) {\n                if (node && node.entry) {\n                    if (node.entry.isFile) {\n                        this.onPreviewFile(node);\n                    }\n\n                    if (node.entry.isFolder) {\n                        this.performNavigation(node);\n                    }\n                }\n            }\n        }\n    }\n\n    onNodeSelect(event: { row: ShareDataRow, selection: Array<ShareDataRow> }) {\n        this.selection = event.selection.map(entry => entry.node);\n        const domEvent = new CustomEvent('node-select', {\n            detail: {\n                node: event.row.node,\n                selection: this.selection\n            },\n            bubbles: true\n        });\n        this.elementRef.nativeElement.dispatchEvent(domEvent);\n    }\n\n    onNodeUnselect(event: { row: ShareDataRow, selection: Array<ShareDataRow> }) {\n        this.selection = event.selection.map(entry => entry.node);\n        const domEvent = new CustomEvent('node-unselect', {\n            detail: {\n                node: event.row.node,\n                selection: this.selection\n            },\n            bubbles: true\n        });\n        this.elementRef.nativeElement.dispatchEvent(domEvent);\n    }\n\n    onShowRowContextMenu(event: DataCellEvent) {\n        if (this.contextMenuActions) {\n            let args = event.value;\n            let node = (<ShareDataRow> args.row).node;\n            if (node) {\n                args.actions = this.getContextActions(node) || [];\n            }\n        }\n    }\n\n    onShowRowActionsMenu(event: DataCellEvent) {\n        if (this.contentActions) {\n            let args = event.value;\n            let node = (<ShareDataRow> args.row).node;\n            if (node) {\n                args.actions = this.getNodeActions(node) || [];\n            }\n        }\n    }\n\n    onExecuteRowAction(event: DataRowActionEvent) {\n        if (this.contentActions) {\n            let args = event.value;\n            let node = (<ShareDataRow> args.row).node;\n            let action = (<ContentActionModel> args.action);\n            this.executeContentAction(node, action);\n        }\n    }\n\n    onChangePageSize(event: Pagination): void {\n        this.preferences.paginationSize = event.maxItems;\n        this.pageSize = event.maxItems;\n        this.skipCount = 0;\n        this.reload();\n    }\n\n    onChangePageNumber(page: Pagination): void {\n        this.pageSize = page.maxItems;\n        this.skipCount = page.skipCount;\n        this.reload();\n    }\n\n    onNextPage(event: Pagination): void {\n        this.skipCount = event.skipCount;\n        this.reload();\n    }\n\n    loadNextBatch(event: Pagination) {\n        this.skipCount = event.skipCount;\n        this.reload(true);\n    }\n\n    onPrevPage(event: Pagination): void {\n        this.skipCount = event.skipCount;\n        this.reload();\n    }\n\n    private enforceSingleClickNavigationForMobile(): void {\n        if (this.isMobile()) {\n            this.navigationMode = DocumentListComponent.SINGLE_CLICK_NAVIGATION;\n        }\n    }\n\n    private getDefaultSorting(): DataSorting {\n        let defaultSorting: DataSorting;\n        if (this.sorting) {\n            const [key, direction] = this.sorting;\n            defaultSorting = new DataSorting(key, direction);\n        }\n        return defaultSorting;\n    }\n\n    canNavigateFolder(node: MinimalNodeEntity): boolean {\n        if (this.isCustomSource(this.currentFolderId)) {\n            return false;\n        }\n\n        if (node && node.entry && node.entry.isFolder) {\n            return true;\n        }\n\n        return false;\n    }\n\n    isCustomSource(folderId: string): boolean {\n        const sources = ['-trashcan-', '-sharedlinks-', '-sites-', '-mysites-', '-favorites-', '-recent-'];\n\n        if (sources.indexOf(folderId) > -1) {\n            return true;\n        }\n\n        return false;\n    }\n\n    updateSkipCount(newSkipCount) {\n        this.skipCount = newSkipCount;\n    }\n\n    hasCurrentNodePermission(permission: string): boolean {\n        let hasPermission: boolean = false;\n        if (this.currentNodeAllowableOperations.length > 0) {\n            let permFound = this.currentNodeAllowableOperations.find(element => element === permission);\n            hasPermission = permFound ? true : false;\n        }\n        return hasPermission;\n    }\n\n    hasCreatePermission() {\n        return this.hasCurrentNodePermission(this.CREATE_PERMISSION);\n    }\n\n    private loadLayoutPresets(): void {\n        const externalSettings = this.appConfig.get('document-list.presets', null);\n\n        if (externalSettings) {\n            this.layoutPresets = Object.assign({}, presetsDefaultModel, externalSettings);\n        } else {\n            this.layoutPresets = presetsDefaultModel;\n        }\n\n    }\n\n    private getLayoutPreset(name: string = 'default'): DataColumn[] {\n        return (this.layoutPresets[name] || this.layoutPresets['default']).map(col => new ObjectDataColumn(col));\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/document-list/components/document-list.component.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Response } from '@angular/http';\nimport { RatingBody } from 'alfresco-js-api';\nimport { AlfrescoApiService } from 'ng2-alfresco-core';\nimport { Observable } from 'rxjs/Rx';\n\n@Injectable()\nexport class RatingService {\n\n    constructor(private apiService: AlfrescoApiService) {\n    }\n\n    getRating(nodeId: string, ratingType: any): any {\n        return Observable.fromPromise(this.apiService.getInstance().core.ratingsApi.getRating(nodeId, ratingType))\n            .map(res => res)\n            .catch(this.handleError);\n    }\n\n    postRating(nodeId: string, ratingType: any, vote: any): any {\n        let ratingBody: RatingBody = {\n            'id': ratingType,\n            'myRating': vote\n        };\n        return Observable.fromPromise(this.apiService.getInstance().core.ratingsApi.rate(nodeId, ratingBody))\n            .map(res => res)\n            .catch(this.handleError);\n    }\n\n    deleteRating(nodeId: string, ratingType: any): any {\n        return Observable.fromPromise(this.apiService.getInstance().core.ratingsApi.removeRating(nodeId, ratingType))\n            .map(res => res)\n            .catch(this.handleError);\n    }\n\n    private handleError(error: Response): any {\n        console.error(error);\n        return Observable.throw(error || 'Server error');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/services/rating.service.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EventEmitter, Injectable, Output } from '@angular/core';\nimport { AlfrescoApiService, LogService } from 'ng2-alfresco-core';\nimport { Observable } from 'rxjs/Rx';\n\n/**\n * @returns {TagService}\n */\n@Injectable()\nexport class TagService {\n\n    @Output()\n    refresh = new EventEmitter();\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    getTagsByNodeId(nodeId: string): any {\n        return Observable.fromPromise(this.apiService.getInstance().core.tagsApi.getNodeTags(nodeId))\n            .catch(err => this.handleError(err));\n    }\n\n    getAllTheTags() {\n        return Observable.fromPromise(this.apiService.getInstance().core.tagsApi.getTags())\n            .catch(err => this.handleError(err));\n    }\n\n    addTag(nodeId: string, tagName: string): any {\n        let alfrescoApi: any = this.apiService.getInstance();\n        let tagBody = new alfrescoApi.core.TagBody();\n        tagBody.tag = tagName;\n\n        let promiseAdd = Observable.fromPromise(this.apiService.getInstance().core.tagsApi.addTag(nodeId, tagBody));\n\n        promiseAdd.subscribe((data) => {\n            this.refresh.emit(data);\n        }, (err) => {\n            this.handleError(err);\n        });\n\n        return promiseAdd;\n    }\n\n    removeTag(nodeId: string, tag: string): any {\n        let promiseRemove = Observable.fromPromise(this.apiService.getInstance().core.tagsApi.removeTag(nodeId, tag));\n\n        promiseRemove.subscribe((data) => {\n            this.refresh.emit(data);\n        }, (err) => {\n            this.handleError(err);\n        });\n\n        return promiseRemove;\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return Observable.throw(error || 'Server error');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/services/tag.service.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class PermissionModel {\n    type: string;\n    action: string;\n    permission: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.type = obj.type || null;\n            this.action = obj.action || null;\n            this.permission = obj.permission || null;\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/document-list/models/permissions.model.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_30__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"alfresco-js-api\"\n// module id = 30\n// module chunks = 0 2","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader/lib/css-base.js\n// module id = 31\n// module chunks = 1 2","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class ContentActionModel {\n    icon: string;\n    title: string;\n    handler: ContentActionHandler;\n    execute: Function;\n    target: string;\n    permission: string;\n    disableWithNoPermission: boolean = false;\n    disabled: boolean = false;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.icon = obj.icon;\n            this.title = obj.title;\n            this.handler = obj.handler;\n            this.execute = obj.execute;\n            this.target = obj.target;\n            this.permission = obj.permission;\n            this.disableWithNoPermission = obj.disableWithNoPermission;\n            this.disabled = obj.disabled;\n        }\n    }\n}\n\nexport type ContentActionHandler = (obj: any, target?: any, permission?: string) => any;\n\nexport class DocumentActionModel extends ContentActionModel {\n    constructor(json?: any)  {\n        super(json);\n        this.target = 'document';\n    }\n}\n\nexport class FolderActionModel extends  ContentActionModel {\n    constructor(json?: any)  {\n        super(json);\n        this.target = 'folder';\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/document-list/models/content-action.model.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { MinimalNodeEntity } from 'alfresco-js-api';\nimport { AlfrescoContentService } from 'ng2-alfresco-core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Rx';\nimport { ContentActionHandler } from '../models/content-action.model';\nimport { PermissionModel } from '../models/permissions.model';\nimport { DocumentListService } from './document-list.service';\nimport { NodeActionsService } from './node-actions.service';\n\n@Injectable()\nexport class DocumentActionsService {\n\n    permissionEvent: Subject<PermissionModel> = new Subject<PermissionModel>();\n    error: Subject<Error> = new Subject<Error>();\n    success: Subject<string> = new Subject<string>();\n\n    private handlers: { [id: string]: ContentActionHandler; } = {};\n\n    constructor(private nodeActionsService: NodeActionsService,\n                private documentListService?: DocumentListService,\n                private contentService?: AlfrescoContentService) {\n        this.setupActionHandlers();\n    }\n\n    getHandler(key: string): ContentActionHandler {\n        if (key) {\n            let lkey = key.toLowerCase();\n            return this.handlers[lkey] || null;\n        }\n        return null;\n    }\n\n    setHandler(key: string, handler: ContentActionHandler): boolean {\n        if (key) {\n            let lkey = key.toLowerCase();\n            this.handlers[lkey] = handler;\n            return true;\n        }\n        return false;\n    }\n\n    canExecuteAction(obj: any): boolean {\n        return this.documentListService && obj && obj.entry.isFile === true;\n    }\n\n    private setupActionHandlers() {\n        this.handlers['download'] = this.download.bind(this);\n        this.handlers['copy'] = this.copyNode.bind(this);\n        this.handlers['move'] = this.moveNode.bind(this);\n        this.handlers['delete'] = this.deleteNode.bind(this);\n    }\n\n    private download(obj: any): Observable<boolean> {\n        if (this.canExecuteAction(obj) && this.contentService) {\n            let link = document.createElement('a');\n            document.body.appendChild(link);\n            link.setAttribute('download', 'download');\n            link.href = this.contentService.getContentUrl(obj);\n            link.click();\n            document.body.removeChild(link);\n            return Observable.of(true);\n        }\n        return Observable.of(false);\n    }\n\n    private copyNode(obj: MinimalNodeEntity, target?: any, permission?: string) {\n        const actionObservable = this.nodeActionsService.copyContent(obj.entry, permission);\n        this.prepareHandlers(actionObservable, 'content', 'copy', target, permission);\n        return actionObservable;\n    }\n\n    private moveNode(obj: MinimalNodeEntity, target?: any, permission?: string) {\n        const actionObservable = this.nodeActionsService.moveContent(obj.entry, permission);\n        this.prepareHandlers(actionObservable, 'content', 'move', target, permission);\n        return actionObservable;\n    }\n\n    private prepareHandlers(actionObservable, type: string, action: string, target?: any, permission?: string): void {\n        actionObservable.subscribe(\n            (fileOperationMessage) => {\n                if (target && typeof target.reload === 'function') {\n                    target.reload();\n                }\n                this.success.next(fileOperationMessage);\n            },\n            this.error.next.bind(this.error)\n        );\n    }\n\n    private deleteNode(obj: any, target?: any, permission?: string): Observable<any> {\n        let handlerObservable;\n\n        if (this.canExecuteAction(obj)) {\n            if (this.contentService.hasPermission(obj.entry, permission)) {\n                handlerObservable = this.documentListService.deleteNode(obj.entry.id);\n                handlerObservable.subscribe(() => {\n                    if (target && typeof target.reload === 'function') {\n                        target.reload();\n                    }\n                    this.success.next(obj.entry.id);\n                });\n                return handlerObservable;\n            } else {\n                this.permissionEvent.next(new PermissionModel({type: 'content', action: 'delete', permission: permission}));\n                return Observable.throw(new Error('No permission to delete'));\n            }\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/document-list/services/document-actions.service.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { MinimalNodeEntity } from 'alfresco-js-api';\nimport { AlfrescoContentService } from 'ng2-alfresco-core';\nimport { Observable, Subject } from 'rxjs/Rx';\nimport { ContentActionHandler } from '../models/content-action.model';\nimport { PermissionModel } from '../models/permissions.model';\nimport { DocumentListService } from './document-list.service';\nimport { NodeActionsService } from './node-actions.service';\n\n@Injectable()\nexport class FolderActionsService {\n\n    permissionEvent: Subject<PermissionModel> = new Subject<PermissionModel>();\n    error: Subject<Error> = new Subject<Error>();\n    success: Subject<string> = new Subject<string>();\n\n    private handlers: { [id: string]: ContentActionHandler; } = {};\n\n    constructor(private nodeActionsService: NodeActionsService,\n                private documentListService: DocumentListService,\n                private contentService: AlfrescoContentService) {\n        this.setupActionHandlers();\n    }\n\n    getHandler(key: string): ContentActionHandler {\n        if (key) {\n            let lkey = key.toLowerCase();\n            return this.handlers[lkey] || null;\n        }\n        return null;\n    }\n\n    setHandler(key: string, handler: ContentActionHandler): boolean {\n        if (key) {\n            let lkey = key.toLowerCase();\n            this.handlers[lkey] = handler;\n            return true;\n        }\n        return false;\n    }\n\n    canExecuteAction(obj: any): boolean {\n        return this.documentListService && obj && obj.entry.isFolder === true;\n    }\n\n    private setupActionHandlers() {\n        this.handlers['copy'] = this.copyNode.bind(this);\n        this.handlers['move'] = this.moveNode.bind(this);\n        this.handlers['delete'] = this.deleteNode.bind(this);\n    }\n\n    private copyNode(obj: MinimalNodeEntity, target?: any, permission?: string) {\n        const actionObservable = this.nodeActionsService.copyFolder(obj.entry, permission);\n        this.prepareHandlers(actionObservable, 'folder', 'copy', target, permission);\n        return actionObservable;\n    }\n\n    private moveNode(obj: MinimalNodeEntity, target?: any, permission?: string) {\n        const actionObservable = this.nodeActionsService.moveFolder(obj.entry, permission);\n        this.prepareHandlers(actionObservable, 'folder', 'move', target, permission);\n        return actionObservable;\n    }\n\n    private prepareHandlers(actionObservable, type: string, action: string, target?: any, permission?: string): void {\n        actionObservable.subscribe(\n            (fileOperationMessage) => {\n                if (target && typeof target.reload === 'function') {\n                    target.reload();\n                }\n                this.success.next(fileOperationMessage);\n            },\n            this.error.next.bind(this.error)\n        );\n    }\n\n    private deleteNode(obj: any, target?: any, permission?: string): Observable<any> {\n        let handlerObservable: Observable<any>;\n\n        if (this.canExecuteAction(obj)) {\n            if (this.contentService.hasPermission(obj.entry, permission)) {\n                handlerObservable = this.documentListService.deleteNode(obj.entry.id);\n                handlerObservable.subscribe(() => {\n                    if (target && typeof target.reload === 'function') {\n                        target.reload();\n                    }\n                    this.success.next(obj.entry.id);\n                });\n                return handlerObservable;\n            } else {\n                this.permissionEvent.next(new PermissionModel({type: 'folder', action: 'delete', permission: permission}));\n                return Observable.throw(new Error('No permission to delete'));\n            }\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/document-list/services/folder-actions.service.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Inject, Input, OnInit, Optional, Output, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { MinimalNodeEntryEntity, NodePaging, Pagination } from 'alfresco-js-api';\nimport { AlfrescoContentService, HighlightDirective, SiteModel } from 'ng2-alfresco-core';\nimport { ImageResolver } from '../../data/image-resolver.model';\nimport { RowFilter } from '../../data/row-filter.model';\nimport { DocumentListComponent, PaginationStrategy } from '../document-list.component';\nimport { ContentNodeSelectorService } from './content-node-selector.service';\n\nexport interface ContentNodeSelectorComponentData {\n    title: string;\n    currentFolderId?: string;\n    rowFilter?: RowFilter;\n    imageResolver?: ImageResolver;\n    select: EventEmitter<MinimalNodeEntryEntity[]>;\n}\n\n@Component({\n    selector: 'adf-content-node-selector',\n    styles: [require('./content-node-selector.component.scss')],\n    template: require('./content-node-selector.component.html'),\n    encapsulation: ViewEncapsulation.None\n})\nexport class ContentNodeSelectorComponent implements OnInit {\n\n    nodes: NodePaging | null = null;\n    siteId: null | string;\n    searchTerm: string = '';\n    showingSearchResults: boolean = false;\n    loadingSearchResults: boolean = false;\n    inDialog: boolean = false;\n    chosenNode: MinimalNodeEntryEntity | null = null;\n    folderIdToShow: string | null = null;\n    paginationStrategy: PaginationStrategy;\n    pagination: Pagination;\n    skipCount: number = 0;\n\n    @Input()\n    title: string;\n\n    @Input()\n    currentFolderId: string | null = null;\n\n    @Input()\n    rowFilter: RowFilter = null;\n\n    @Input()\n    imageResolver: ImageResolver = null;\n\n    @Input()\n    pageSize: number = 10;\n\n    @Output()\n    select: EventEmitter<MinimalNodeEntryEntity[]> = new EventEmitter<MinimalNodeEntryEntity[]>();\n\n    @ViewChild(DocumentListComponent)\n    documentList: DocumentListComponent;\n\n    @ViewChild(HighlightDirective)\n    highlighter: HighlightDirective;\n\n    constructor(private contentNodeSelectorService: ContentNodeSelectorService,\n                private contentService: AlfrescoContentService,\n                @Optional() @Inject(MAT_DIALOG_DATA) data?: ContentNodeSelectorComponentData,\n                @Optional() private containingDialog?: MatDialogRef<ContentNodeSelectorComponent>) {\n        if (data) {\n            this.title = data.title;\n            this.select = data.select;\n            this.currentFolderId = data.currentFolderId;\n            this.rowFilter = data.rowFilter;\n            this.imageResolver = data.imageResolver;\n        }\n\n        if (this.containingDialog) {\n            this.inDialog = true;\n        }\n    }\n\n    ngOnInit() {\n        this.folderIdToShow = this.currentFolderId;\n        this.paginationStrategy = PaginationStrategy.Infinite;\n    }\n\n    /**\n     * Updates the site attribute and starts a new search\n     *\n     * @param chosenSite Sitemodel to search within\n     */\n    siteChanged(chosenSite: SiteModel): void {\n        this.siteId = chosenSite.guid;\n        this.updateResults();\n    }\n\n    /**\n     * Updates the searchTerm attribute and starts a new search\n     *\n     * @param searchTerm string value to search against\n     */\n    search(searchTerm: string): void {\n        this.searchTerm = searchTerm;\n        this.updateResults();\n    }\n\n    /**\n     * Returns whether breadcrumb has to be shown or not\n     */\n    needBreadcrumbs() {\n        const whenInFolderNavigation = !this.showingSearchResults,\n            whenInSelectingSearchResult = this.showingSearchResults && this.chosenNode;\n\n        return whenInFolderNavigation || whenInSelectingSearchResult;\n    }\n\n    /**\n     * Returns the actually selected|entered folder node or null in case of searching for the breadcrumb\n     */\n    get breadcrumbFolderNode(): MinimalNodeEntryEntity | null {\n        if (this.showingSearchResults && this.chosenNode) {\n            return this.chosenNode;\n        } else {\n            return this.documentList.folderNode;\n        }\n    }\n\n    /**\n     * Clear the search input\n     */\n    clear(): void {\n        this.searchTerm = '';\n        this.nodes = null;\n        this.skipCount = 0;\n        this.chosenNode = null;\n        this.showingSearchResults = false;\n        this.folderIdToShow = this.currentFolderId;\n    }\n\n    /**\n     * Update the result list depending on the criterias\n     */\n    private updateResults(): void {\n        if (this.searchTerm.length === 0) {\n            this.folderIdToShow = this.siteId || this.currentFolderId;\n        } else {\n            this.startNewSearch();\n        }\n    }\n\n    /**\n     * Load the first page of a new search result\n     */\n    private startNewSearch(): void {\n        this.nodes = null;\n        this.skipCount = 0;\n        this.chosenNode = null;\n        this.folderIdToShow = null;\n        this.querySearch();\n    }\n\n    /**\n     * Loads the next batch of search results\n     *\n     * @param event Pagination object\n     */\n    getNextPageOfSearch(event: Pagination): void {\n        this.skipCount = event.skipCount;\n        this.querySearch();\n    }\n\n    /**\n     * Perform the call to searchService with the proper parameters\n     */\n    private querySearch(): void {\n        if (this.isSearchTermLongEnough()) {\n            this.loadingSearchResults = true;\n\n            this.contentNodeSelectorService.search(this.searchTerm, this.siteId, this.skipCount, this.pageSize)\n                .subscribe(this.showSearchResults.bind(this));\n        }\n    }\n\n    /**\n     * Show the results of the search\n     *\n     * @param results Search results\n     */\n    private showSearchResults(results: NodePaging): void {\n        this.showingSearchResults = true;\n        this.loadingSearchResults = false;\n\n        // Documentlist hack, since data displaying for preloaded nodes is a little bit messy there\n        if (!this.nodes) {\n            this.nodes = results;\n        } else {\n            this.documentList.data.loadPage(results, true);\n        }\n\n        this.pagination = results.list.pagination;\n        this.highlight();\n    }\n\n    /**\n     * Predicate method to decide whether searchTerm fulfills the necessary criteria\n     */\n    isSearchTermLongEnough(): boolean {\n        return this.searchTerm.length > 3;\n    }\n\n    /**\n     * Hightlight the actual searchterm in the next frame\n     */\n    highlight(): void {\n        setTimeout(() => {\n            this.highlighter.highlight(this.searchTerm);\n        }, 0);\n    }\n\n    /**\n     * Invoked when user selects a node\n     *\n     * @param event CustomEvent for node-select\n     */\n    onNodeSelect(event: any): void {\n        this.attemptNodeSelection(event.detail.node.entry);\n    }\n\n    /**\n     * Sets showingSearchResults state to be able to differentiate between search results or folder results\n     */\n    onFolderChange(): void {\n        this.showingSearchResults = false;\n    }\n\n    /**\n     * Attempts to set the currently loaded node\n     */\n    onFolderLoaded(): void {\n        this.attemptNodeSelection(this.documentList.folderNode);\n    }\n\n    /**\n     * Selects node as chosen if it has the right permission, clears the selection otherwise\n     *\n     * @param entry\n     */\n    private attemptNodeSelection(entry: MinimalNodeEntryEntity): void {\n        if (this.contentService.hasPermission(entry, 'create')) {\n            this.chosenNode = entry;\n        } else {\n            this.resetChosenNode();\n        }\n    }\n\n    /**\n     * Clears the chosen node\n     */\n    resetChosenNode(): void {\n        this.chosenNode = null;\n    }\n\n    /**\n     * Emit event with the chosen node\n     */\n    choose(): void {\n        this.select.next([this.chosenNode]);\n    }\n\n    /**\n     * Close the dialog\n     */\n    close(): void {\n        this.containingDialog.close();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/document-list/components/content-node-selector/content-node-selector.component.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { MinimalNodeEntryEntity, PathElementEntity } from 'alfresco-js-api';\nimport { DocumentListComponent } from '../document-list.component';\n\n@Component({\n    selector: 'adf-breadcrumb',\n    template: require('./breadcrumb.component.html'),\n    styles: [require('./breadcrumb.component.scss')],\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        'class': 'adf-breadcrumb'\n    }\n})\nexport class BreadcrumbComponent implements OnChanges {\n\n    @Input()\n    folderNode: MinimalNodeEntryEntity = null;\n\n    @Input()\n    root: string = null;\n\n    @Input()\n    rootId: string = null;\n\n    @Input()\n    target: DocumentListComponent;\n\n    route: PathElementEntity[] = [];\n\n    get hasRoot(): boolean {\n        return !!this.root;\n    }\n\n    @Output()\n    navigate: EventEmitter<PathElementEntity> = new EventEmitter<PathElementEntity>();\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.folderNode) {\n            const node: MinimalNodeEntryEntity = changes.folderNode.currentValue;\n            this.route = this.parseRoute(node);\n        }\n    }\n\n    parseRoute(node: MinimalNodeEntryEntity): PathElementEntity[] {\n        if (node && node.path) {\n            const route = <PathElementEntity[]> (node.path.elements || []).slice();\n\n            route.push(<PathElementEntity> {\n                id: node.id,\n                name: node.name\n            });\n\n            const rootPos = this.getElementPosition(route, this.rootId);\n            if (rootPos > 0) {\n                route.splice(0, rootPos);\n            }\n\n            if (rootPos === -1 && this.rootId) {\n                route[0].id = this.rootId;\n            }\n\n            if (this.root) {\n                route[0].name = this.root;\n            }\n\n            return route;\n        }\n\n        return [];\n    }\n\n    private getElementPosition(route: PathElementEntity[], nodeId: string): number {\n        let result: number = -1;\n\n        if (route && route.length > 0 && nodeId) {\n            result = route.findIndex(el => el.id === nodeId);\n        }\n\n        return result;\n    }\n\n    onRoutePathClick(route: PathElementEntity, event?: Event): void {\n        if (event) {\n            event.preventDefault();\n        }\n\n        if (route) {\n            this.navigate.emit(route);\n\n            if (this.target) {\n                this.target.loadFolderByNodeId(route.id);\n            }\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/document-list/components/breadcrumb/breadcrumb.component.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Response } from '@angular/http';\nimport { MinimalNodeEntity, MinimalNodeEntryEntity, NodePaging } from 'alfresco-js-api';\nimport { AlfrescoApiService, AlfrescoAuthenticationService, AlfrescoContentService, LogService, PermissionsEnum, ThumbnailService } from 'ng2-alfresco-core';\nimport { Observable } from 'rxjs/Rx';\n\n@Injectable()\nexport class DocumentListService {\n\n    static ROOT_ID = '-root-';\n\n    constructor(authService: AlfrescoAuthenticationService,\n                private contentService: AlfrescoContentService,\n                private apiService: AlfrescoApiService,\n                private logService: LogService,\n                private thumbnailService: ThumbnailService) {\n    }\n\n    private getNodesPromise(folder: string, opts?: any): Promise<NodePaging> {\n\n        let rootNodeId = DocumentListService.ROOT_ID;\n        if (opts && opts.rootFolderId) {\n            rootNodeId = opts.rootFolderId;\n        }\n\n        let params: any = {\n            includeSource: true,\n            include: ['path', 'properties', 'allowableOperations']\n        };\n\n        if (folder) {\n            params.relativePath = folder;\n        }\n\n        if (opts) {\n            if (opts.maxItems) {\n                params.maxItems = opts.maxItems;\n            }\n            if (opts.skipCount) {\n                params.skipCount = opts.skipCount;\n            }\n        }\n\n        return this.apiService.getInstance().nodes.getNodeChildren(rootNodeId, params);\n    }\n\n    deleteNode(nodeId: string): Observable<any> {\n        return Observable.fromPromise(this.apiService.getInstance().nodes.deleteNode(nodeId));\n    }\n\n    /**\n     * Copy a node to destination node\n     *\n     * @param nodeId The id of the node to be copied\n     * @param targetParentId The id of the folder-node where the node have to be copied to\n     */\n    copyNode(nodeId: string, targetParentId: string) {\n        return Observable.fromPromise(this.apiService.getInstance().nodes.copyNode(nodeId, { targetParentId }))\n            .catch(err => this.handleError(err));\n    }\n\n    /**\n     * Move a node to destination node\n     *\n     * @param nodeId The id of the node to be moved\n     * @param targetParentId The id of the folder-node where the node have to be moved to\n     */\n    moveNode(nodeId: string, targetParentId: string) {\n        return Observable.fromPromise(this.apiService.getInstance().nodes.moveNode(nodeId, { targetParentId }))\n            .catch(err => this.handleError(err));\n    }\n\n    /**\n     * Create a new folder in the path.\n     * @param name Folder name\n     * @param parentId Parent folder ID\n     * @returns {any}\n     */\n    createFolder(name: string, parentId: string): Observable<MinimalNodeEntity> {\n        return Observable.fromPromise(this.apiService.getInstance().nodes.createFolder(name, '/', parentId))\n            .catch(err => this.handleError(err));\n    }\n\n    /**\n     * Gets the folder node with the specified relative name path below the root node.\n     * @param folder Path to folder.\n     * @param opts Options.\n     * @returns {Observable<NodePaging>} Folder entity.\n     */\n    getFolder(folder: string, opts?: any) {\n        return Observable.fromPromise(this.getNodesPromise(folder, opts))\n            .map(res => <NodePaging> res)\n            .catch(err => this.handleError(err));\n    }\n\n    getFolderNode(nodeId: string): Promise<MinimalNodeEntryEntity> {\n        let opts: any = {\n            includeSource: true,\n            include: ['path', 'properties', 'allowableOperations']\n        };\n\n        let nodes: any = this.apiService.getInstance().nodes;\n        return nodes.getNodeInfo(nodeId, opts);\n    }\n\n    /**\n     * Get thumbnail URL for the given document node.\n     * @param node Node to get URL for.\n     * @returns {string} URL address.\n     */\n    getDocumentThumbnailUrl(node: MinimalNodeEntity) {\n        return this.thumbnailService.getDocumentThumbnailUrl(node);\n    }\n\n    getMimeTypeIcon(mimeType: string): string {\n        return this.thumbnailService.getMimeTypeIcon(mimeType);\n    }\n\n    getDefaultMimeTypeIcon(): string {\n        return this.thumbnailService.getDefaultMimeTypeIcon();\n    }\n\n    hasPermission(node: any, permission: PermissionsEnum|string): boolean {\n        return this.contentService.hasPermission(node, permission);\n    }\n\n    private handleError(error: Response) {\n        // in a real world app, we may send the error to some remote logging infrastructure\n        // instead of just logging it to the console\n        this.logService.error(error);\n        return Observable.throw(error || 'Server error');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/document-list/services/document-list.service.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ContentChild, Input, TemplateRef } from '@angular/core';\nimport { AlfrescoTranslationService, FileModel, FileUploadStatus, NodesApiService, NotificationService, UploadService } from 'ng2-alfresco-core';\nimport { Observable } from 'rxjs/Rx';\n\n@Component({\n    selector: 'adf-file-uploading-list',\n    template: require('./file-uploading-list.component.html'),\n    styles: [require('./file-uploading-list.component.scss')]\n})\nexport class FileUploadingListComponent {\n\n    FileUploadStatus = FileUploadStatus;\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    @Input()\n    files: FileModel[] = [];\n\n    constructor(\n        private uploadService: UploadService,\n        private nodesApi: NodesApiService,\n        private notificationService: NotificationService,\n        private translateService: AlfrescoTranslationService) {\n    }\n\n    /**\n     * Cancel file upload\n     *\n     * @param {FileModel} file File model to cancel upload for.\n     *\n     * @memberOf FileUploadingListComponent\n     */\n    cancelFile(file: FileModel): void {\n        this.uploadService.cancelUpload(file);\n    }\n\n    removeFile(file: FileModel): void {\n        this.deleteNode(file)\n            .subscribe(() => {\n                if ( file.status === FileUploadStatus.Error) {\n                    this.notifyError(file);\n                }\n\n                this.uploadService.cancelUpload(file);\n            });\n    }\n\n    /**\n     * Call the appropriate method for each file, depending on state\n     */\n    cancelAllFiles(): void {\n        this.getUploadingFiles()\n            .forEach((file) => this.uploadService.cancelUpload(file));\n\n        const deletedFiles = this.files\n            .filter((file) => file.status === FileUploadStatus.Complete)\n            .map((file) => this.deleteNode(file));\n\n        Observable.forkJoin(...deletedFiles)\n            .subscribe((files: FileModel[]) => {\n                const errors = files\n                    .filter((file) => file.status === FileUploadStatus.Error);\n\n                if (errors.length) {\n                    this.notifyError(...errors);\n                }\n\n                this.uploadService.cancelUpload(...files);\n            });\n    }\n\n    /**\n     * Checks if all the files are uploaded\n     * @returns {boolean} - false if there is at least one file in Progress | Starting | Pending\n     */\n    isUploadCompleted(): boolean {\n         return !this.isUploadCancelled() &&\n            Boolean(this.files.length) &&\n            !this.files\n                .some(({status}) =>\n                    status === FileUploadStatus.Starting ||\n                    status === FileUploadStatus.Progress ||\n                    status === FileUploadStatus.Pending\n                );\n    }\n\n    /**\n     * Check if all the files are Cancelled | Aborted | Error.\n     * @returns {boolean} - false if there is at least one file in uploading states\n     */\n    isUploadCancelled(): boolean {\n        return !!this.files.length &&\n            this.files\n                .every(({status}) =>\n                    status === FileUploadStatus.Aborted ||\n                    status === FileUploadStatus.Cancelled ||\n                    status === FileUploadStatus.Deleted\n                );\n    }\n\n    private deleteNode(file: FileModel): Observable<FileModel> {\n        const { id } = file.data.entry;\n\n        return this.nodesApi\n            .deleteNode(id, { permanent: true })\n            .map(() => {\n                file.status = FileUploadStatus.Deleted;\n                return file;\n            })\n            .catch((error) => {\n                file.status = FileUploadStatus.Error;\n                return Observable.of(file);\n            });\n    }\n\n    private notifyError(...files: FileModel[]) {\n        let translateSubscription = null;\n\n        if (files.length === 1) {\n            translateSubscription = this.translateService\n                .get(\n                    'FILE_UPLOAD.MESSAGES.REMOVE_FILE_ERROR',\n                    { fileName: files[0].name}\n                );\n        } else {\n            translateSubscription = this.translateService\n                .get(\n                    'FILE_UPLOAD.MESSAGES.REMOVE_FILES_ERROR',\n                    { total: files.length }\n                );\n        }\n\n        translateSubscription\n            .subscribe(message => this.notificationService.openSnackMessage(message, 4000));\n    }\n\n    private getUploadingFiles() {\n        return this.files.filter((item) => {\n            if (\n                item.status === FileUploadStatus.Pending ||\n                item.status === FileUploadStatus.Progress ||\n                item.status === FileUploadStatus.Starting\n            ) {\n                return item;\n            }\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/upload/components/file-uploading-list.component.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\nimport { RatingService } from './../services/rating.service';\n\n@Component({\n    selector: 'adf-rating',\n    styles: [require('./rating.component.scss')],\n    template: require('./rating.component.html'),\n    providers: [RatingService],\n    encapsulation: ViewEncapsulation.None\n})\nexport class RatingComponent implements OnChanges {\n\n    @Input()\n    nodeId: string;\n\n    average: number = 0;\n\n    ratingType: string = 'fiveStar';\n\n    @Output()\n    changeVote = new EventEmitter();\n\n    stars: Array<any> = [];\n\n    constructor(private ratingService: RatingService) {\n    }\n\n    ngOnChanges() {\n        let ratingObserver = this.ratingService.getRating(this.nodeId, this.ratingType);\n\n        ratingObserver.subscribe(\n            (data) => {\n                if (data.entry.aggregate) {\n                    this.average = data.entry.aggregate.average;\n                    this.calculateStars();\n                }\n            }\n        );\n\n        return ratingObserver;\n    }\n\n    calculateStars() {\n        this.stars = [];\n\n        for (let i = 0; i < 5; i++) {\n            if (i < this.average) {\n                this.stars.push({fill: true});\n            } else {\n                this.stars.push({fill: false});\n            }\n        }\n\n        this.changeVote.emit(this.average);\n    }\n\n    updateVote(vote: number) {\n        this.ratingService.postRating(this.nodeId, this.ratingType, vote).subscribe(\n            (data) => {\n                if (data.entry.aggregate) {\n                    if (this.average !== data.entry.aggregate.average) {\n                        this.average = data.entry.aggregate.average;\n                        this.calculateStars();\n                    }\n                }\n            }\n        );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/social/rating.component.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\nimport { RatingService } from './../services/rating.service';\n\n@Component({\n    selector: 'adf-like',\n    styles: [require('./like.component.scss')],\n    template: require('./like.component.html'),\n    providers: [RatingService],\n    encapsulation: ViewEncapsulation.None\n})\nexport class LikeComponent implements OnChanges {\n\n    @Input()\n    nodeId: string;\n\n    likesCounter: number = 0;\n\n    ratingType: string = 'likes';\n\n    isLike: boolean = false;\n\n    @Output()\n    changeVote = new EventEmitter();\n\n    constructor(private ratingService: RatingService) {\n    }\n\n    ngOnChanges() {\n        this.clean();\n\n        let ratingObserver = this.ratingService.getRating(this.nodeId, this.ratingType);\n\n        ratingObserver.subscribe(\n            (data) => {\n                if (data.entry.aggregate) {\n                    this.likesCounter = data.entry.aggregate.numberOfRatings;\n                    if (data.entry.ratedAt) {\n                        this.isLike = true;\n                    }\n                }\n            }\n        );\n\n        return ratingObserver;\n    }\n\n    likeClick() {\n        if (this.isLike) {\n            this.ratingService.deleteRating(this.nodeId, this.ratingType).subscribe(\n                () => {\n                    this.likesCounter -= 1;\n                    this.isLike = false;\n                }\n            );\n        } else {\n            this.ratingService.postRating(this.nodeId, this.ratingType, true).subscribe(\n                (data) => {\n                    this.likesCounter = data.entry.aggregate.numberOfRatings;\n                    this.isLike = true;\n                }\n            );\n        }\n\n        this.changeVote.emit(this.likesCounter);\n    }\n\n    clean() {\n        this.isLike = false;\n        this.likesCounter = 0;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/social/like.component.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\nimport { AlfrescoTranslationService } from 'ng2-alfresco-core';\nimport { TagService } from './../services/tag.service';\n\n/**\n *\n * This component, provide a list of the tags relative a node with actions button to add or remove new tag\n *\n * @returns {TagComponent} .\n */\n\n@Component({\n    selector: 'adf-tag-node-actions-list',\n    template: require('./tag-actions.component.html'),\n    styles: [require('./tag-actions.component.scss')],\n    encapsulation: ViewEncapsulation.None\n})\nexport class TagActionsComponent implements OnChanges {\n\n    @Input()\n    nodeId: string;\n\n    @Output()\n    successAdd: EventEmitter<any> = new EventEmitter();\n\n    @Output()\n    error: EventEmitter<any> = new EventEmitter();\n\n    @Output()\n    result = new EventEmitter();\n\n    newTagName: string;\n\n    tagsEntries: any;\n\n    errorMsg: string;\n\n    disableAddTag: boolean = true;\n\n    constructor(private tagService: TagService, private translateService: AlfrescoTranslationService) {\n        this.tagService.refresh.subscribe(() => {\n            this.refreshTag();\n        });\n    }\n\n    ngOnChanges() {\n        return this.refreshTag();\n    }\n\n    refreshTag() {\n        this.tagService.getTagsByNodeId(this.nodeId).subscribe((data) => {\n            this.tagsEntries = data.list.entries;\n            this.disableAddTag = false;\n            this.result.emit(this.tagsEntries);\n        }, () => {\n            this.tagsEntries = null;\n            this.disableAddTag = true;\n            this.result.emit(this.tagsEntries);\n        });\n    }\n\n    addTag() {\n        if (this.searchTag(this.newTagName)) {\n            this.translateService.get('TAG.MESSAGES.EXIST').subscribe((error) => {\n                this.errorMsg = error;\n            });\n            this.error.emit(this.errorMsg);\n        } else {\n            this.tagService.addTag(this.nodeId, this.newTagName).subscribe(() => {\n                this.newTagName = '';\n                this.successAdd.emit(this.nodeId);\n            });\n        }\n    }\n\n    searchTag(searchTagName: string) {\n        if (this.tagsEntries) {\n            return this.tagsEntries.find((currentTag) => {\n                return (searchTagName === currentTag.entry.tag);\n            });\n        }\n    }\n\n    cleanErrorMsg() {\n        this.errorMsg = '';\n    }\n\n    removeTag(tag: string) {\n        this.tagService.removeTag(this.nodeId, tag);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/tag/tag-actions.component.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, OnInit, Output, ViewEncapsulation } from '@angular/core';\nimport { TagService } from '../services/tag.service';\n\n/**\n *\n * This component provide a list of all the tag inside the ECM\n *\n * @returns {TagList} .\n */\n\n@Component({\n    selector: 'adf-tag-list',\n    template: require('./tag-list.component.html'),\n    styles: [require('./tag-list.component.scss')],\n    encapsulation: ViewEncapsulation.None\n})\nexport class TagListComponent implements OnInit {\n\n    tagsEntries: any;\n\n    @Output()\n    result = new EventEmitter();\n\n    /**\n     * Constructor\n     * @param tagService\n     */\n    constructor(private tagService: TagService) {\n        this.tagService.refresh.subscribe(() => {\n            this.refreshTag();\n        });\n    }\n\n    ngOnInit() {\n        return this.refreshTag();\n    }\n\n    refreshTag() {\n        this.tagService.getAllTheTags().subscribe((data) => {\n            this.tagsEntries = data.list.entries;\n            this.result.emit(this.tagsEntries);\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/tag/tag-list.component.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\nimport { TagService } from '../services/tag.service';\n\n/**\n *\n * This component, ShowNodeTag a list of the tag on relative a node\n *\n * @returns {TagNodeList} .\n */\n\n@Component({\n    selector: 'adf-tag-node-list',\n    template: require('./tag-node-list.component.html'),\n    styles: [require('./tag-node-list.component.scss')],\n    encapsulation: ViewEncapsulation.None\n})\nexport class TagNodeListComponent implements OnChanges {\n\n    @Input()\n    nodeId: string;\n\n    tagsEntries: any;\n\n    @Output()\n    results = new EventEmitter();\n\n    /**\n     * Constructor\n     * @param tagService\n     */\n    constructor(private tagService: TagService) {\n        this.tagService.refresh.subscribe(() => {\n            this.refreshTag();\n        });\n    }\n\n    ngOnChanges() {\n        return this.refreshTag();\n    }\n\n    refreshTag() {\n        this.tagService.getTagsByNodeId(this.nodeId).subscribe((data) => {\n            this.tagsEntries = data.list.entries;\n            this.results.emit(this.tagsEntries);\n        });\n    }\n\n    removeTag(tag: string) {\n        this.tagService.removeTag(this.nodeId, tag).subscribe(() => {\n            this.refreshTag();\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/tag/tag-node-list.component.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\nimport { AlfrescoApiService, LogService } from 'ng2-alfresco-core';\nimport { ObjectDataTableAdapter } from '@adf/core';\n\n/**\n * <adf-webscript-get [scriptPath]=\"string\"\n *                         [scriptArgs]=\"Object\"\n *                         [contextRoot]=\"string\"\n *                         [servicePath]=\"string\"\n *                         [contentType]=\"JSON|HTML|DATATABLE\"\n *                         (success)=\"customMethod($event)>\n * </adf-webscript-get>\n *\n * This component, provide a get webscript viewer\n *\n * @InputParam {string} scriptPath path to Web Script (as defined by Web Script)\n * @InputParam {Object} scriptArgs arguments to pass to Web Script\n * @InputParam {string} contextRoot path where application is deployed default value 'alfresco'\n * @InputParam {string} servicePath path where Web Script service is mapped default value 'service'\n * @InputParam {string} contentType JSON | HTML | DATATABLE | TEXT\n *\n * @Output - success - The event is emitted when the data are recived\n *\n * @returns {WebscriptComponent} .\n */\n@Component({\n    selector: 'adf-webscript-get',\n    template: require('./webscript.component.html')\n})\nexport class WebscriptComponent implements OnChanges {\n\n    @Input()\n    scriptPath: string;\n\n    @Input()\n    scriptArgs: any;\n\n    @Input()\n    showData: boolean = true;\n\n    @Input()\n    contextRoot: string = 'alfresco';\n\n    @Input()\n    servicePath: string = 'service';\n\n    @Input()\n    contentType: string = 'TEXT';\n\n    @Output()\n    success = new EventEmitter();\n\n    data: any = undefined;\n    showError: boolean = false;\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    ngOnChanges(changes) {\n        if (this.showData) {\n            this.clean();\n        }\n\n        return new Promise((resolve, reject) => {\n            this.apiService.getInstance().webScript.executeWebScript('GET', this.scriptPath, this.scriptArgs, this.contextRoot, this.servicePath).then((webScriptdata) => {\n\n                this.data = webScriptdata;\n\n                if (this.showData) {\n                    if (this.contentType === 'DATATABLE') {\n                        this.data = this.showDataAsDataTable(webScriptdata);\n                    }\n                }\n\n                this.success.emit(this.data);\n\n                resolve();\n            }, (error) => {\n                this.logService.log('Error' + error);\n                reject();\n            });\n        });\n    }\n\n    /**\n     * show the data in a ng2-alfresco-datatable\n     *\n     * @param data\n     *\n     * @retutns the data as datatable\n     */\n    showDataAsDataTable(data: any) {\n        let datatableData: any = null;\n        try {\n\n            if (!data.schema) {\n                data.schema = ObjectDataTableAdapter.generateSchema(data.data);\n            }\n\n            if (data.schema && data.schema.length > 0) {\n                this.data = new ObjectDataTableAdapter(data.data, data.schema);\n            }\n\n        } catch (e) {\n            this.logService.error('error during the cast as datatable');\n        }\n\n        return datatableData;\n    }\n\n    clean() {\n        this.data = undefined;\n    }\n\n    isDataTableContent() {\n        return this.contentType === 'DATATABLE';\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/webscript/webscript.component.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DatePipe } from '@angular/common';\nimport { NodePaging } from 'alfresco-js-api';\nimport { TimeAgoPipe } from 'ng2-alfresco-core';\nimport { DataColumn, DataRow, DataSorting, DataTableAdapter } from '@adf/core';\nimport { PermissionStyleModel } from './../models/permissions-style.model';\nimport { DocumentListService } from './../services/document-list.service';\nimport { ImageResolver } from './image-resolver.model';\nimport { RowFilter } from './row-filter.model';\nimport { ShareDataRow } from './share-data-row.model';\n\nexport class ShareDataTableAdapter implements DataTableAdapter {\n\n    ERR_ROW_NOT_FOUND: string = 'Row not found';\n    ERR_COL_NOT_FOUND: string = 'Column not found';\n\n    private sorting: DataSorting;\n    private rows: DataRow[];\n    private columns: DataColumn[];\n    private page: NodePaging;\n\n    private filter: RowFilter;\n    private imageResolver: ImageResolver;\n\n    thumbnails: boolean = false;\n    permissionsStyle: PermissionStyleModel[];\n    selectedRow: DataRow;\n\n    constructor(private documentListService: DocumentListService,\n                schema: DataColumn[] = [],\n                sorting?: DataSorting) {\n        this.rows = [];\n        this.columns = schema || [];\n        this.sorting = sorting;\n    }\n\n    getRows(): Array<DataRow> {\n        return this.rows;\n    }\n\n    // TODO: disable this api\n    setRows(rows: Array<DataRow>) {\n        this.rows = rows || [];\n        this.sort();\n    }\n\n    getColumns(): Array<DataColumn> {\n        return this.columns;\n    }\n\n    setColumns(columns: Array<DataColumn>) {\n        this.columns = columns || [];\n    }\n\n    getValue(row: DataRow, col: DataColumn): any {\n        if (!row) {\n            throw new Error(this.ERR_ROW_NOT_FOUND);\n        }\n        if (!col) {\n            throw new Error(this.ERR_COL_NOT_FOUND);\n        }\n        let dataRow: ShareDataRow = <ShareDataRow> row;\n        let value: any = row.getValue(col.key);\n        if (dataRow.cache[col.key] !== undefined) {\n            return dataRow.cache[col.key];\n        }\n\n        if (col.type === 'date') {\n            try {\n                const result = this.formatDate(col, value);\n                return dataRow.cacheValue(col.key, result);\n            } catch (err) {\n                console.error(`Error parsing date ${value} to format ${col.format}`);\n                return 'Error';\n            }\n        }\n\n        if (col.key === '$thumbnail') {\n\n            if (this.imageResolver) {\n                let resolved = this.imageResolver(row, col);\n                if (resolved) {\n                    return resolved;\n                }\n            }\n\n            const node = (<ShareDataRow> row).node;\n\n            if (node.entry.isFolder) {\n                return this.documentListService.getMimeTypeIcon('folder');\n            }\n\n            if (node.entry.isFile) {\n                if (this.thumbnails) {\n                    return this.documentListService.getDocumentThumbnailUrl(node);\n                }\n            }\n\n            if (node.entry.content) {\n                const mimeType = node.entry.content.mimeType;\n                if (mimeType) {\n                    return this.documentListService.getMimeTypeIcon(mimeType);\n                }\n            }\n\n            return this.documentListService.getDefaultMimeTypeIcon();\n        }\n\n        if (col.type === 'image') {\n\n            if (this.imageResolver) {\n                let resolved = this.imageResolver(row, col);\n                if (resolved) {\n                    return resolved;\n                }\n            }\n        }\n\n        return dataRow.cacheValue(col.key, value);\n    }\n\n    formatDate(col: DataColumn, value: any): string {\n        if (col.type === 'date') {\n            const format = col.format || 'medium';\n            if (format === 'timeAgo') {\n                const timeAgoPipe = new TimeAgoPipe();\n                return timeAgoPipe.transform(value);\n            } else {\n                const datePipe = new DatePipe('en-US');\n                return datePipe.transform(value, format);\n            }\n        }\n\n        return value;\n    }\n\n    getSorting(): DataSorting {\n        return this.sorting;\n    }\n\n    setSorting(sorting: DataSorting): void {\n        this.sorting = sorting;\n\n        this.sortRows(this.rows, this.sorting);\n    }\n\n    sort(key?: string, direction?: string): void {\n        let sorting = this.sorting || new DataSorting();\n        if (key) {\n            sorting.key = key;\n            sorting.direction = direction || 'asc';\n        }\n        this.setSorting(sorting);\n    }\n\n    setFilter(filter: RowFilter) {\n        this.filter = filter;\n    }\n\n    setImageResolver(resolver: ImageResolver) {\n        this.imageResolver = resolver;\n    }\n\n    private sortRows(rows: DataRow[], sorting: DataSorting) {\n        const options: Intl.CollatorOptions = {};\n\n        if (sorting && sorting.key && rows && rows.length > 0) {\n\n            if (sorting.key.includes('sizeInBytes') || sorting.key === 'name') {\n                options.numeric = true;\n            }\n\n            rows.sort((a: ShareDataRow, b: ShareDataRow) => {\n                if (a.node.entry.isFolder !== b.node.entry.isFolder) {\n                    return a.node.entry.isFolder ? -1 : 1;\n                }\n\n                let left = a.getValue(sorting.key);\n                if (left) {\n                    left = (left instanceof Date) ? left.valueOf().toString() : left.toString();\n                } else {\n                    left = '';\n                }\n\n                let right = b.getValue(sorting.key);\n                if (right) {\n                    right = (right instanceof Date) ? right.valueOf().toString() : right.toString();\n                } else {\n                    right = '';\n                }\n\n                return sorting.direction === 'asc'\n                    ? left.localeCompare(right, undefined, options)\n                    : right.localeCompare(left, undefined, options);\n            });\n        }\n    }\n\n    public loadPage(page: NodePaging, merge: boolean = false) {\n        this.page = page;\n\n        let rows = [];\n\n        if (page && page.list) {\n            let data = page.list.entries;\n            if (data && data.length > 0) {\n                rows = data.map(item => new ShareDataRow(item, this.documentListService, this.permissionsStyle));\n\n                if (this.filter) {\n                    rows = rows.filter(this.filter);\n                }\n\n                // Sort by first sortable or just first column\n                if (this.columns && this.columns.length > 0) {\n                    let sorting = this.getSorting();\n                    if (sorting) {\n                        this.sortRows(rows, sorting);\n                    } else {\n                        let sortable = this.columns.filter(c => c.sortable);\n                        if (sortable.length > 0) {\n                            this.sort(sortable[0].key, 'asc');\n                        } else {\n                            this.sort(this.columns[0].key, 'asc');\n                        }\n                    }\n                }\n            }\n        }\n\n        if (merge) {\n            this.rows = this.rows.concat(rows);\n        } else {\n            this.rows = rows;\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/document-list/data/share-datatable-adapter.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MinimalNode, MinimalNodeEntity } from 'alfresco-js-api';\nimport { ObjectUtils } from 'ng2-alfresco-core';\nimport { DataRow } from '@adf/core';\nimport { PermissionStyleModel } from './../models/permissions-style.model';\nimport { DocumentListService } from './../services/document-list.service';\n\nexport class ShareDataRow implements DataRow {\n\n    static ERR_OBJECT_NOT_FOUND: string = 'Object source not found';\n\n    cache: { [key: string]: any } = {};\n    isSelected: boolean = false;\n    isDropTarget: boolean;\n    cssClass: string = '';\n\n    get node(): MinimalNodeEntity {\n        return this.obj;\n    }\n\n    constructor(private obj: MinimalNodeEntity, private documentListService: DocumentListService, private permissionsStyle: PermissionStyleModel[]) {\n        if (!obj) {\n            throw new Error(ShareDataRow.ERR_OBJECT_NOT_FOUND);\n        }\n\n        this.isDropTarget = this.isFolderAndHasPermissionToUpload(obj);\n\n        if (permissionsStyle) {\n            this.cssClass = this.getPermissionClass(obj);\n        }\n    }\n\n    getPermissionClass(nodeEntity: MinimalNodeEntity): string {\n        let permissionsClasses = '';\n\n        this.permissionsStyle.forEach((currentPermissionsStyle: PermissionStyleModel) => {\n\n            if (this.applyPermissionStyleToFolder(nodeEntity.entry, currentPermissionsStyle) || this.applyPermissionStyleToFile(nodeEntity.entry, currentPermissionsStyle)) {\n\n                if (this.documentListService.hasPermission(nodeEntity.entry, currentPermissionsStyle.permission)) {\n                    permissionsClasses += ` ${currentPermissionsStyle.css}`;\n                }\n            }\n\n        });\n\n        return permissionsClasses;\n    }\n\n    private applyPermissionStyleToFile(node: MinimalNode, currentPermissionsStyle: PermissionStyleModel): boolean {\n        return (currentPermissionsStyle.isFile && node.isFile);\n    }\n\n    private applyPermissionStyleToFolder(node: MinimalNode, currentPermissionsStyle: PermissionStyleModel): boolean {\n        return (currentPermissionsStyle.isFolder && node.isFolder);\n    }\n\n    isFolderAndHasPermissionToUpload(obj: MinimalNodeEntity): boolean {\n        return this.isFolder(obj) && this.documentListService.hasPermission(obj.entry, 'create');\n    }\n\n    isFolder(obj: MinimalNodeEntity): boolean {\n        return obj.entry && obj.entry.isFolder;\n    }\n\n    cacheValue(key: string, value: any): any {\n        this.cache[key] = value;\n        return value;\n    }\n\n    getValue(key: string): any {\n        if (this.cache[key] !== undefined) {\n            return this.cache[key];\n        }\n        return ObjectUtils.getValue(this.obj.entry, key);\n    }\n\n    hasValue(key: string): boolean {\n        return this.getValue(key) !== undefined;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/document-list/data/share-data-row.model.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MinimalNodeEntity, MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport { BaseEvent } from 'ng2-alfresco-core';\n\nexport class NodeEntityEvent extends BaseEvent<MinimalNodeEntity> {\n    constructor(entity: MinimalNodeEntity) {\n        super();\n        this.value = entity;\n    }\n}\n\nexport class NodeEntryEvent extends BaseEvent<MinimalNodeEntryEntity> {\n    constructor(entity: MinimalNodeEntryEntity) {\n        super();\n        this.value = entity;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/document-list/components/node.event.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { AfterContentInit, Component, ContentChild, Input, OnInit, TemplateRef } from '@angular/core';\nimport { LogService } from 'ng2-alfresco-core';\nimport { DataColumn } from '@adf/core';\n\nimport { ContentColumnListComponent } from './content-column-list.component';\n\n@Component({\n    selector: 'content-column',\n    template: ''\n})\nexport class ContentColumnComponent implements OnInit, AfterContentInit, DataColumn {\n\n    @Input()\n    key: string;\n\n    @Input()\n    type: string = 'text';\n\n    @Input()\n    format: string;\n\n    @Input()\n    sortable: boolean = false;\n\n    @Input()\n    title: string = '';\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    /**\n     * Title to be used for screen readers.\n     */\n    @Input('sr-title')\n    srTitle: string;\n\n    @Input('class')\n    cssClass: string;\n\n    constructor(private list: ContentColumnListComponent, private logService: LogService) {\n        this.logService.log('ContentColumnComponent is deprecated starting with 1.7.0 and may be removed in future versions. Use DataColumnComponent instead.');\n    }\n\n    ngOnInit() {\n        if (!this.srTitle && this.key === '$thumbnail') {\n            this.srTitle = 'Thumbnail';\n        }\n    }\n\n    ngAfterContentInit() {\n        this.register();\n    }\n\n    register(): boolean {\n        if (this.list) {\n            return this.list.registerColumn(this);\n        }\n        return false;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/document-list/components/content-column/content-column.component.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component } from '@angular/core';\nimport { LogService } from 'ng2-alfresco-core';\nimport { DataColumn } from '@adf/core';\n\nimport { DocumentListComponent } from './../document-list.component';\n\n@Component({\n    selector: 'content-columns',\n    template: ''\n})\nexport class ContentColumnListComponent {\n\n    constructor(private documentList: DocumentListComponent, private logService: LogService ) {\n        this.logService.log('ContentColumnListComponent is deprecated starting with 1.7.0 and may be removed in future versions. Use DataColumnListComponent instead.');\n    }\n\n    /**\n     * Registers column model within the parent document list component.\n     * @param column Column definition model to register.\n     */\n    registerColumn(column: DataColumn): boolean {\n        if (this.documentList && column) {\n            let columns = this.documentList.data.getColumns();\n            columns.push(column);\n            return true;\n        }\n        return false;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/document-list/components/content-column/content-column-list.component.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\n\nimport { ContentActionHandler } from '../../models/content-action.model';\nimport { DocumentActionsService } from '../../services/document-actions.service';\nimport { FolderActionsService } from '../../services/folder-actions.service';\nimport { ContentActionModel } from './../../models/content-action.model';\nimport { ContentActionListComponent } from './content-action-list.component';\n\n@Component({\n    selector: 'content-action',\n    template: '',\n    providers: [\n        DocumentActionsService,\n        FolderActionsService\n    ]\n})\nexport class ContentActionComponent implements OnInit, OnChanges {\n\n    @Input()\n    title: string = 'Action';\n\n    @Input()\n    icon: string;\n\n    @Input()\n    handler: string;\n\n    @Input()\n    target: string;\n\n    @Input()\n    permission: string;\n\n    @Input()\n    disableWithNoPermission: boolean;\n\n    @Input()\n    disabled: boolean = false;\n\n    @Output()\n    execute = new EventEmitter();\n\n    @Output()\n    permissionEvent = new EventEmitter();\n\n    @Output()\n    error = new EventEmitter();\n\n    @Output()\n    success = new EventEmitter();\n\n    model: ContentActionModel;\n\n    constructor(\n        private list: ContentActionListComponent,\n        private documentActions: DocumentActionsService,\n        private folderActions: FolderActionsService) {\n        this.model = new ContentActionModel();\n    }\n\n    ngOnInit() {\n        this.model = new ContentActionModel({\n            title: this.title,\n            icon: this.icon,\n            permission: this.permission,\n            disableWithNoPermission: this.disableWithNoPermission,\n            target: this.target,\n            disabled: this.disabled\n        });\n\n        if (this.handler) {\n            this.model.handler = this.getSystemHandler(this.target, this.handler);\n        }\n\n        if (this.execute) {\n            this.model.execute = (value: any): void => {\n                this.execute.emit({ value });\n            };\n        }\n\n        this.register();\n    }\n\n    register(): boolean {\n        if (this.list) {\n            return this.list.registerAction(this.model);\n        }\n        return false;\n    }\n\n    ngOnChanges(changes) {\n        // update localizable properties\n        this.model.title = this.title;\n    }\n\n    getSystemHandler(target: string, name: string): ContentActionHandler {\n        if (target) {\n            let ltarget = target.toLowerCase();\n\n            if (ltarget === 'document') {\n                if (this.documentActions) {\n                    this.documentActions.permissionEvent.subscribe((permision) => {\n                        this.permissionEvent.emit(permision);\n                    });\n\n                    this.documentActions.error.subscribe((errors) => {\n                        this.error.emit(errors);\n                    });\n\n                    this.documentActions.success.subscribe((message) => {\n                        this.success.emit(message);\n                    });\n\n                    return this.documentActions.getHandler(name);\n                }\n                return null;\n            }\n\n            if (ltarget === 'folder') {\n                if (this.folderActions) {\n                    this.folderActions.permissionEvent.subscribe((permision) => {\n                        this.permissionEvent.emit(permision);\n                    });\n\n                    this.folderActions.error.subscribe((errors) => {\n                        this.error.emit(errors);\n                    });\n\n                    this.folderActions.success.subscribe((message) => {\n                        this.success.emit(message);\n                    });\n\n                    return this.folderActions.getHandler(name);\n                }\n                return null;\n            }\n        }\n        return null;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/document-list/components/content-action/content-action.component.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component } from '@angular/core';\n\nimport { ContentActionModel } from './../../models/content-action.model';\nimport { DocumentListComponent } from './../document-list.component';\n\n@Component({\n    selector: 'content-actions',\n    template: ''\n})\nexport class ContentActionListComponent {\n\n    constructor(private documentList: DocumentListComponent) {\n    }\n\n    /**\n     * Registers action handler within the parent document list component.\n     * @param action Action model to register.\n     */\n    registerAction(action: ContentActionModel): boolean {\n        if (this.documentList && action) {\n            this.documentList.actions.push(action);\n            return true;\n        }\n        return false;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/document-list/components/content-action/content-action-list.component.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AfterContentInit, ContentChild, Directive, TemplateRef } from '@angular/core';\nimport { DocumentListComponent } from './../document-list.component';\n\n@Directive({\n    selector: 'empty-folder-content'\n})\nexport class EmptyFolderContentDirective implements AfterContentInit {\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    constructor(private documentList: DocumentListComponent) {\n    }\n\n    ngAfterContentInit() {\n        this.documentList.emptyFolderTemplate = this.template;\n        this.documentList.dataTable.noContentTemplate = this.template;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/document-list/components/empty-folder/empty-folder-content.directive.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AfterContentInit, ContentChild, Directive, TemplateRef } from '@angular/core';\nimport { DocumentListComponent } from './../document-list.component';\n\n@Directive({\n    selector: 'no-permission-content'\n})\nexport class NoPermissionContentDirective implements AfterContentInit {\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    constructor(private documentList: DocumentListComponent) {\n    }\n\n    ngAfterContentInit() {\n        this.documentList.noPermissionTemplate = this.template;\n        this.documentList.dataTable.noPermissionTemplate = this.template;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/document-list/components/no-permission/no-permission-content.directive.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { SiteModel, SitesApiService } from 'ng2-alfresco-core';\n\n@Component({\n    selector: 'adf-sites-dropdown',\n    styles: [require('./sites-dropdown.component.scss')],\n    template: require('./sites-dropdown.component.html')\n})\nexport class DropdownSitesComponent implements OnInit {\n\n    @Input()\n    hideMyFiles: boolean = false;\n\n    @Output()\n    change: EventEmitter<SiteModel> = new EventEmitter();\n\n    public MY_FILES_VALUE = 'default';\n\n    siteList = [];\n\n    public siteSelected: string;\n\n    constructor(private sitesService: SitesApiService) {}\n\n    ngOnInit() {\n        this.sitesService.getSites().subscribe((result) => {\n            this.siteList = result;\n        },\n        (error) => {});\n    }\n\n    selectedSite() {\n        let siteFound;\n        if (this.siteSelected === this.MY_FILES_VALUE) {\n            siteFound = new SiteModel();\n        }else {\n           siteFound = this.siteList.find( site => site.guid === this.siteSelected);\n        }\n        this.change.emit(siteFound);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/document-list/components/site-dropdown/sites-dropdown.component.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EventEmitter, Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport { AlfrescoContentService } from 'ng2-alfresco-core';\nimport { DataColumn } from '@adf/core';\nimport { Subject } from 'rxjs/Rx';\nimport { ContentNodeSelectorComponent, ContentNodeSelectorComponentData } from '../components/content-node-selector/content-node-selector.component';\nimport { ShareDataRow } from '../data/share-data-row.model';\nimport { DocumentListService } from './document-list.service';\n\n@Injectable()\nexport class NodeActionsService {\n\n    constructor(private dialog: MatDialog,\n                private documentListService?: DocumentListService,\n                private contentService?: AlfrescoContentService) {}\n\n    /**\n     * Copy content node\n     *\n     * @param contentEntry node to copy\n     * @param permission permission which is needed to apply the action\n     */\n    public copyContent(contentEntry: MinimalNodeEntryEntity, permission?: string): Subject<string> {\n        return this.doFileOperation('copy', 'content', contentEntry, permission);\n    }\n\n    /**\n     * Copy folder node\n     *\n     * @param contentEntry node to copy\n     * @param permission permission which is needed to apply the action\n     */\n    public copyFolder(contentEntry: MinimalNodeEntryEntity, permission?: string): Subject<string> {\n        return this.doFileOperation('copy', 'folder', contentEntry, permission);\n    }\n\n    /**\n     * Move content node\n     *\n     * @param contentEntry node to move\n     * @param permission permission which is needed to apply the action\n     */\n    public moveContent(contentEntry: MinimalNodeEntryEntity, permission?: string): Subject<string> {\n        return this.doFileOperation('move', 'content', contentEntry, permission);\n    }\n\n    /**\n     * Move folder node\n     *\n     * @param contentEntry node to move\n     * @param permission permission which is needed to apply the action\n     */\n    public moveFolder(contentEntry: MinimalNodeEntryEntity, permission?: string): Subject<string> {\n        return this.doFileOperation('move', 'folder', contentEntry, permission);\n    }\n\n    /**\n     * General method for performing the given operation (copy|move)\n     *\n     * @param action the action to perform (copy|move)\n     * @param type type of the content (content|folder)\n     * @param contentEntry the contentEntry which has to have the action performed on\n     * @param permission permission which is needed to apply the action\n     */\n    private doFileOperation(action: string, type: string, contentEntry: MinimalNodeEntryEntity, permission?: string): Subject<string> {\n        const observable: Subject<string> = new Subject<string>();\n\n        if (this.contentService.hasPermission(contentEntry, permission)) {\n            const data: ContentNodeSelectorComponentData = {\n                title: `${action} ${contentEntry.name} to ...`,\n                currentFolderId: contentEntry.parentId,\n                rowFilter: this.rowFilter.bind(this, contentEntry.id),\n                imageResolver: this.imageResolver.bind(this),\n                select: new EventEmitter<MinimalNodeEntryEntity[]>()\n            };\n\n            this.dialog.open(ContentNodeSelectorComponent, { data, panelClass: 'adf-content-node-selector-dialog', width: '630px' });\n\n            data.select.subscribe((selections: MinimalNodeEntryEntity[]) => {\n                const selection = selections[0];\n                this.documentListService[`${action}Node`].call(this.documentListService, contentEntry.id, selection.id)\n                    .subscribe(\n                        observable.next.bind(observable, `OPERATION.SUCCES.${type.toUpperCase()}.${action.toUpperCase()}`),\n                        observable.error.bind(observable)\n                    );\n                this.dialog.closeAll();\n            });\n\n            return observable;\n        } else {\n            observable.error(new Error(JSON.stringify({ error: { statusCode: 403 } })));\n            return observable;\n        }\n    }\n\n    private rowFilter(currentNodeId, row: ShareDataRow): boolean {\n        const node: MinimalNodeEntryEntity = row.node.entry;\n\n        if (node.id === currentNodeId || node.isFile) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    private imageResolver(row: ShareDataRow, col: DataColumn): string|null {\n        const entry: MinimalNodeEntryEntity = row.node.entry;\n        if (!this.contentService.hasPermission(entry, 'create')) {\n            return this.documentListService.getMimeTypeIcon('disable/folder');\n        }\n\n        return null;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/document-list/services/node-actions.service.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './public-api';\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/upload/index.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    EventEmitter,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    Output,\n    SimpleChanges,\n    ViewEncapsulation\n} from '@angular/core';\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport {\n    AlfrescoApiService,\n    AlfrescoTranslationService,\n    EXTENDIBLE_COMPONENT,\n    FileModel,\n    FileUtils,\n    LogService,\n    NodePermissionSubject,\n    NotificationService,\n    UploadService\n} from 'ng2-alfresco-core';\nimport { Observable, Subject } from 'rxjs/Rx';\nimport { PermissionModel } from '../../document-list/models/permissions.model';\n\n@Component({\n    selector: 'adf-upload-button',\n    template: require('./upload-button.component.html'),\n    styles: [require('./upload-button.component.scss')],\n    providers: [\n        {provide: EXTENDIBLE_COMPONENT, useExisting: forwardRef(() => UploadButtonComponent)}\n    ],\n    encapsulation: ViewEncapsulation.None\n})\nexport class UploadButtonComponent implements OnInit, OnChanges, NodePermissionSubject {\n\n    /** @deprecated Deprecated in 1.6.0, you can use UploadService events and NotificationService api instead. */\n    @Input()\n    showNotificationBar: boolean = true;\n\n    /** @deprecated Deprecated in 1.6.0, this property is not used for couple of releases already. */\n    @Input()\n    currentFolderPath: string = '/';\n\n    /** @deprecated Deprecated in 1.8.0, use the button with combination of adf-node-permission directive */\n    @Input()\n    disableWithNoPermission: boolean = false;\n\n    @Input()\n    disabled: boolean = false;\n\n    @Input()\n    uploadFolders: boolean = false;\n\n    @Input()\n    multipleFiles: boolean = false;\n\n    @Input()\n    versioning: boolean = false;\n\n    @Input()\n    acceptedFilesType: string = '*';\n\n    @Input()\n    maxFilesSize: number;\n\n    @Input()\n    staticTitle: string;\n\n    @Input()\n    tooltip: string = null;\n\n    @Input()\n    rootFolderId: string = '-root-';\n\n    @Output()\n    success = new EventEmitter();\n\n    @Output()\n    error = new EventEmitter();\n\n    @Output()\n    createFolder = new EventEmitter();\n\n    @Output()\n    permissionEvent: EventEmitter<PermissionModel> = new EventEmitter<PermissionModel>();\n\n    private hasPermission: boolean = false;\n\n    private permissionValue: Subject<boolean> = new Subject<boolean>();\n\n    constructor(private uploadService: UploadService,\n                private translateService: AlfrescoTranslationService,\n                private logService: LogService,\n                private notificationService: NotificationService,\n                private apiService: AlfrescoApiService) {\n    }\n\n    ngOnInit() {\n        this.permissionValue.subscribe((permission: boolean) => {\n            this.hasPermission = permission;\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        let rootFolderId = changes['rootFolderId'];\n        if (rootFolderId && rootFolderId.currentValue) {\n            this.checkPermission();\n        }\n    }\n\n    isButtonDisabled(): boolean {\n        return this.isForceDisable() || this.isDisableWithNoPermission();\n    }\n\n    isForceDisable(): boolean {\n        return this.disabled ? true : undefined;\n    }\n\n    /** @deprecated Deprecated in 1.8.0, use the button with combination of adf-node-permission directive */\n    isDisableWithNoPermission(): boolean {\n        return !this.hasPermission && this.disableWithNoPermission ? true : undefined;\n    }\n\n    onFilesAdded($event: any): void {\n        let files: File[] = FileUtils.toFileArray($event.currentTarget.files);\n\n        if (this.hasPermission) {\n            this.uploadFiles(files);\n        } else {\n            this.permissionEvent.emit(new PermissionModel({type: 'content', action: 'upload', permission: 'create'}));\n        }\n        // reset the value of the input file\n        $event.target.value = '';\n    }\n\n    onDirectoryAdded($event: any): void {\n        if (this.hasPermission) {\n            let files: File[] = FileUtils.toFileArray($event.currentTarget.files);\n            this.uploadFiles(files);\n        } else {\n            this.permissionEvent.emit(new PermissionModel({type: 'content', action: 'upload', permission: 'create'}));\n        }\n        // reset the value of the input file\n        $event.target.value = '';\n    }\n\n    /**\n     * Upload a list of file in the specified path\n     * @param files\n     * @param path\n     */\n    uploadFiles(files: File[]): void {\n        const latestFilesAdded: FileModel[] = files\n            .map<FileModel>(this.createFileModel.bind(this))\n            .filter(this.isFileAcceptable.bind(this))\n            .filter(this.isFileSizeAcceptable.bind(this));\n\n        if (latestFilesAdded.length > 0) {\n            this.uploadService.addToQueue(...latestFilesAdded);\n            this.uploadService.uploadFilesInTheQueue(this.success);\n            if (this.showNotificationBar) {\n                this.showUndoNotificationBar(latestFilesAdded);\n            }\n        }\n    }\n\n    /**\n     * Creates FileModel from File\n     *\n     * @param file\n     */\n    private createFileModel(file: File): FileModel {\n        return new FileModel(file, {\n            newVersion: this.versioning,\n            parentId: this.rootFolderId,\n            path: (file.webkitRelativePath || '').replace(/\\/[^\\/]*$/, '')\n        });\n    }\n\n    /**\n     * Checks if the given file is allowed by the extension filters\n     *\n     * @param file FileModel\n     */\n    private isFileAcceptable(file: FileModel): boolean {\n        if (this.acceptedFilesType === '*') {\n            return true;\n        }\n\n        const allowedExtensions = this.acceptedFilesType\n            .split(',')\n            .map(ext => ext.replace(/^\\./, ''));\n\n        if (allowedExtensions.indexOf(file.extension) !== -1) {\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Checks if the given file is an acceptable size\n     *\n     * @param file FileModel\n     */\n    private isFileSizeAcceptable(file: FileModel): boolean {\n        let acceptableSize = true;\n\n        if ((this.maxFilesSize !== undefined && this.maxFilesSize !== null ) && (this.maxFilesSize <= 0 || file.size > this.maxFilesSize)) {\n            acceptableSize = false;\n\n            this.translateService.get('FILE_UPLOAD.MESSAGES.EXCEED_MAX_FILE_SIZE', {fileName: file.name}).subscribe((message: string) => {\n                this.error.emit(message);\n            });\n        }\n\n        return acceptableSize;\n    }\n\n    /**\n     * Show undo notification bar.\n     *\n     * @param {FileModel[]} latestFilesAdded - files in the upload queue enriched with status flag and xhr object.\n     */\n    private showUndoNotificationBar(latestFilesAdded: FileModel[]): void {\n        let messageTranslate: any, actionTranslate: any;\n        messageTranslate = this.translateService.get('FILE_UPLOAD.MESSAGES.PROGRESS');\n        actionTranslate = this.translateService.get('FILE_UPLOAD.ACTION.UNDO');\n\n        this.notificationService.openSnackMessageAction(messageTranslate.value, actionTranslate.value, 3000).onAction().subscribe(() => {\n            this.uploadService.cancelUpload(...latestFilesAdded);\n        });\n    }\n\n    checkPermission() {\n        if (this.rootFolderId) {\n            this.getFolderNode(this.rootFolderId).subscribe(\n                res => this.permissionValue.next(this.hasCreatePermission(res)),\n                error => this.error.emit(error)\n            );\n        }\n    }\n\n    // TODO: move to AlfrescoContentService\n    getFolderNode(nodeId: string): Observable<MinimalNodeEntryEntity> {\n        let opts: any = {\n            includeSource: true,\n            include: ['allowableOperations']\n        };\n\n        return Observable.fromPromise(this.apiService.getInstance().nodes.getNodeInfo(nodeId, opts))\n            .catch(err => this.handleError(err));\n    }\n\n    private handleError(error: Response) {\n        // in a real world app, we may send the error to some remote logging infrastructure\n        // instead of just logging it to the console\n        this.logService.error(error);\n        return Observable.throw(error || 'Server error');\n    }\n\n    private hasCreatePermission(node: any): boolean {\n        if (node && node.allowableOperations) {\n            return node.allowableOperations.find(permission => permission === 'create') ? true : false;\n        }\n        return false;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/upload/components/upload-button.component.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectorRef, Component, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { FileModel, FileUploadCompleteEvent, FileUploadDeleteEvent,\n         FileUploadErrorEvent, FileUploadStatus, UploadService } from 'ng2-alfresco-core';\nimport { Observable, Subscription } from 'rxjs/Rx';\nimport { FileUploadingListComponent } from './file-uploading-list.component';\n\n@Component({\n    selector: 'adf-file-uploading-dialog, file-uploading-dialog',\n    template: require('./file-uploading-dialog.component.html'),\n    styles: [require('./file-uploading-dialog.component.scss')]\n})\nexport class FileUploadingDialogComponent implements OnInit, OnDestroy {\n    @ViewChild(FileUploadingListComponent)\n    uploadList: FileUploadingListComponent;\n\n    @Input()\n    position: string = 'right';\n\n    filesUploadingList: FileModel[] = [];\n    isDialogActive: boolean = false;\n    totalCompleted: number = 0;\n    totalErrors: number = 0;\n    isDialogMinimized: boolean = false;\n    isConfirmation: boolean = false;\n\n    private listSubscription: Subscription;\n    private counterSubscription: Subscription;\n    private fileUploadSubscription: Subscription;\n    private errorSubscription: Subscription;\n\n    constructor(\n        private uploadService: UploadService,\n        private changeDetecor: ChangeDetectorRef) {}\n\n    ngOnInit() {\n        this.listSubscription = this.uploadService\n            .queueChanged.subscribe((fileList: FileModel[]) => {\n                this.filesUploadingList = fileList;\n\n                if (this.filesUploadingList.length) {\n                    this.isDialogActive = true;\n                }\n        });\n\n        this.counterSubscription = Observable\n            .merge(\n                this.uploadService.fileUploadComplete,\n                this.uploadService.fileUploadDeleted\n            )\n            .subscribe((event: (FileUploadDeleteEvent|FileUploadCompleteEvent)) => {\n                this.totalCompleted = event.totalComplete;\n                this.changeDetecor.detectChanges();\n            });\n\n        this.errorSubscription = this.uploadService.fileUploadError\n            .subscribe((event: FileUploadErrorEvent) => {\n                this.totalErrors = event.totalError;\n                this.changeDetecor.detectChanges();\n            });\n\n        this.fileUploadSubscription = this.uploadService\n            .fileUpload.subscribe(() => {\n                this.changeDetecor.detectChanges();\n            });\n\n        this.uploadService.fileDeleted.subscribe((objId) => {\n            if (this.filesUploadingList) {\n                let file = this.filesUploadingList.find((item) => {\n                    return item.data.entry.id === objId;\n                });\n                if (file) {\n                    file.status = FileUploadStatus.Cancelled;\n                    this.changeDetecor.detectChanges();\n                }\n            }\n        });\n    }\n\n    /**\n     * Toggle confirmation message.\n     */\n    toggleConfirmation() {\n        this.isConfirmation = !this.isConfirmation;\n\n        if (this.isDialogMinimized) {\n            this.isDialogMinimized = false;\n        }\n    }\n\n    /**\n     * Cancel uploads and hide confiramtion\n     */\n    cancelAllUploads() {\n        this.toggleConfirmation();\n\n        this.uploadList.cancelAllFiles();\n    }\n\n    /**\n     * Toggle dialog minimized state.\n     */\n    toggleMinimized(): void {\n        this.isDialogMinimized = !this.isDialogMinimized;\n        this.changeDetecor.detectChanges();\n    }\n\n    /**\n     * Dismiss dialog\n     */\n    close(): void {\n        this.isConfirmation = false;\n        this.totalCompleted = 0;\n        this.totalErrors = 0;\n        this.filesUploadingList = [];\n        this.isDialogActive = false;\n        this.isDialogMinimized = false;\n        this.uploadService.clearQueue();\n        this.changeDetecor.detectChanges();\n    }\n\n    ngOnDestroy() {\n        this.uploadService.clearQueue();\n        this.listSubscription.unsubscribe();\n        this.counterSubscription.unsubscribe();\n        this.fileUploadSubscription.unsubscribe();\n        this.errorSubscription.unsubscribe();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/upload/components/file-uploading-dialog.component.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, forwardRef, Input, Output, ViewEncapsulation } from '@angular/core';\nimport {\n    AlfrescoTranslationService,\n    EXTENDIBLE_COMPONENT,\n    FileInfo,\n    FileModel,\n    FileUtils,\n    NodePermissionSubject,\n    NotificationService,\n    UploadService\n} from 'ng2-alfresco-core';\n\n@Component({\n    selector: 'adf-upload-drag-area',\n    template: require('./upload-drag-area.component.html'),\n    styles: [require('./upload-drag-area.component.css')],\n    providers: [\n        { provide: EXTENDIBLE_COMPONENT, useExisting: forwardRef(() => UploadDragAreaComponent)}\n    ],\n    encapsulation: ViewEncapsulation.None\n})\nexport class UploadDragAreaComponent implements NodePermissionSubject {\n\n    /** @deprecated Deprecated in favor of disabled input property */\n    @Input()\n    set enabled(enabled: boolean) {\n        console.warn('Deprecated: enabled input property should not be used for UploadDragAreaComponent. Please use disabled instead.');\n        this.disabled = !enabled;\n    }\n\n    /** @deprecated Deprecated in favor of disabled input property */\n    get enabled(): boolean {\n        console.warn('Deprecated: enabled input property should not be used for UploadDragAreaComponent. Please use disabled instead.');\n        return !this.disabled;\n    }\n\n    /** @deprecated Deprecated in 1.6.0, you can use UploadService events and NotificationService api instead. */\n    @Input()\n    showNotificationBar: boolean = true;\n\n    /** @deprecated Deprecated in 1.6.0, this property is not used for couple of releases already. Use rootFolderId instead. */\n    @Input()\n    currentFolderPath: string = '/';\n\n    /** @deprecated Deprecated in 1.6.2, this property is not used for couple of releases already. Use parentId instead. */\n    @Input()\n    rootFolderId: string = '-root-';\n\n    @Input()\n    disabled: boolean = false;\n\n    @Input()\n    versioning: boolean = false;\n\n    @Input()\n    parentId: string;\n\n    @Output()\n    success = new EventEmitter();\n\n    constructor(private uploadService: UploadService,\n                private translateService: AlfrescoTranslationService,\n                private notificationService: NotificationService) {\n    }\n\n    /**\n     * Method called when files are dropped in the drag area.\n     *\n     * @param {File[]} files - files dropped in the drag area.\n     */\n    onFilesDropped(files: File[]): void {\n        if (!this.disabled && files.length) {\n            const fileModels = files.map(file => new FileModel(file, {\n                newVersion: this.versioning,\n                path: '/',\n                parentId: this.parentId || this.rootFolderId\n            }));\n            this.uploadService.addToQueue(...fileModels);\n            this.uploadService.uploadFilesInTheQueue(this.success);\n            let latestFilesAdded = this.uploadService.getQueue();\n            if (this.showNotificationBar) {\n                this.showUndoNotificationBar(latestFilesAdded);\n            }\n        }\n    }\n\n    /**\n     * Called when the file are dropped in the drag area\n     *\n     * @param item - FileEntity\n     */\n    onFilesEntityDropped(item: any): void {\n        if (!this.disabled) {\n            item.file((file: File) => {\n                const fileModel = new FileModel(file, {\n                    newVersion: this.versioning,\n                    parentId: this.parentId || this.rootFolderId,\n                    path: item.fullPath.replace(item.name, '')\n                });\n                this.uploadService.addToQueue(fileModel);\n                this.uploadService.uploadFilesInTheQueue(this.success);\n            });\n            if (this.showNotificationBar) {\n                this.showUndoNotificationBar(item);\n            }\n        }\n    }\n\n    /**\n     * Called when a folder are dropped in the drag area\n     *\n     * @param folder - name of the dropped folder\n     */\n    onFolderEntityDropped(folder: any): void {\n        if (!this.disabled && folder.isDirectory) {\n            FileUtils.flattern(folder).then(entries => {\n                let files = entries.map(entry => {\n                    return new FileModel(entry.file, {\n                        newVersion: this.versioning,\n                        parentId: this.parentId || this.rootFolderId,\n                        path: entry.relativeFolder\n                    });\n                });\n                this.uploadService.addToQueue(...files);\n                /* @deprecated in 1.6.0 */\n                if (this.showNotificationBar) {\n                    let latestFilesAdded = this.uploadService.getQueue();\n                    this.showUndoNotificationBar(latestFilesAdded);\n                }\n                this.uploadService.uploadFilesInTheQueue(this.success);\n            });\n        }\n    }\n\n    /**\n     * Show undo notification bar.\n     *\n     * @param {FileModel[]} latestFilesAdded - files in the upload queue enriched with status flag and xhr object.\n     */\n    showUndoNotificationBar(latestFilesAdded: FileModel[]) {\n        let messageTranslate: any, actionTranslate: any;\n        messageTranslate = this.translateService.get('FILE_UPLOAD.MESSAGES.PROGRESS');\n        actionTranslate = this.translateService.get('FILE_UPLOAD.ACTION.UNDO');\n\n        this.notificationService.openSnackMessageAction(messageTranslate.value, actionTranslate.value, 3000).onAction().subscribe(() => {\n            this.uploadService.cancelUpload(...latestFilesAdded);\n        });\n    }\n\n    /**\n     * Show the error inside Notification bar\n     *\n     * @param Error message\n     * @private\n     */\n    showErrorNotificationBar(errorMessage: string) {\n        this.notificationService.openSnackMessage(errorMessage, 3000);\n    }\n\n    /** Returns true or false considering the component options and node permissions */\n    isDroppable(): boolean {\n        return !this.disabled;\n    }\n\n    /**\n     * Handles 'upload-files' events raised by child components.\n     *\n     * @param event DOM event\n     */\n    onUploadFiles(event: CustomEvent) {\n        event.stopPropagation();\n        event.preventDefault();\n        let isAllowed: boolean = this.hasCreatePermission(event.detail.data.obj.entry);\n        if (isAllowed) {\n            let files: FileInfo[] = event.detail.files;\n            if (files && files.length > 0) {\n                let parentId = this.parentId || this.rootFolderId;\n                if (event.detail.data && event.detail.data.obj.entry.isFolder) {\n                    parentId = event.detail.data.obj.entry.id || this.parentId || this.rootFolderId;\n                }\n                const fileModels = files.map(fileInfo => new FileModel(fileInfo.file, {\n                    newVersion: this.versioning,\n                    path: fileInfo.relativeFolder,\n                    parentId: parentId\n                }));\n                this.uploadFiles(fileModels);\n            }\n        }\n    }\n\n    /**\n     * Does the actual file uploading and show the notification\n     *\n     * @param files\n     */\n    private uploadFiles(files: FileModel[]): void {\n        if (files.length) {\n            this.uploadService.addToQueue(...files);\n            this.uploadService.uploadFilesInTheQueue(this.success);\n            let latestFilesAdded = this.uploadService.getQueue();\n            if (this.showNotificationBar) {\n                this.showUndoNotificationBar(latestFilesAdded);\n            }\n        }\n    }\n\n    /**\n     * Check if \"create\" permission is present on the given node\n     *\n     * @param node\n     */\n    private hasCreatePermission(node: any): boolean {\n        let isPermitted = false;\n        if (node && node['allowableOperations']) {\n            let permFound = node['allowableOperations'].find(element => element === 'create');\n            isPermitted = permFound ? true : false;\n        }\n        return isPermitted;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/upload/components/upload-drag-area.component.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { FileModel, FileUploadStatus } from 'ng2-alfresco-core';\n\n@Component({\n    selector: 'adf-file-uploading-list-row',\n    template: require('./file-uploading-list-row.component.html'),\n    styles: [ require('./file-uploading-list-row.component.scss') ]\n})\nexport class FileUploadingListRowComponent {\n    @Input()\n    file: FileModel;\n\n    @Output()\n    cancel: EventEmitter<FileModel> = new EventEmitter<FileModel>();\n\n    @Output()\n    remove: EventEmitter<FileModel> = new EventEmitter<FileModel>();\n\n    FileUploadStatus = FileUploadStatus;\n\n    onCancel(file: FileModel): void {\n        this.cancel.emit(file);\n    }\n\n    onRemove(file: FileModel): void {\n        this.remove.emit(file);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/upload/components/file-uploading-list-row.component.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive, ElementRef, EventEmitter, Input, NgZone, OnDestroy, OnInit, Output } from '@angular/core';\nimport { FileUtils } from 'ng2-alfresco-core';\n\n@Directive({\n    selector: '[file-draggable]'\n})\nexport class FileDraggableDirective implements OnInit, OnDestroy {\n\n    files: File [];\n\n    @Input('file-draggable')\n    enabled: boolean = true;\n\n    @Output()\n    filesDropped: EventEmitter<File[]> = new EventEmitter<File[]>();\n\n    @Output()\n    filesEntityDropped: EventEmitter<any> = new EventEmitter();\n\n    @Output()\n    folderEntityDropped: EventEmitter<any> = new EventEmitter();\n\n    private cssClassName: string = 'file-draggable__input-focus';\n    private element: HTMLElement;\n\n    constructor(el: ElementRef, private ngZone: NgZone) {\n        this.element = el.nativeElement;\n    }\n\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.element.addEventListener('dragenter', this.onDragEnter.bind(this));\n            this.element.addEventListener('dragover', this.onDragOver.bind(this));\n            this.element.addEventListener('dragleave', this.onDragLeave.bind(this));\n            this.element.addEventListener('drop', this.onDropFiles.bind(this));\n        });\n    }\n\n    ngOnDestroy() {\n        this.element.removeEventListener('dragenter', this.onDragEnter);\n        this.element.removeEventListener('dragover', this.onDragOver);\n        this.element.removeEventListener('dragleave', this.onDragLeave);\n        this.element.removeEventListener('drop', this.onDropFiles);\n    }\n\n    /**\n     * Method called when files is dropped in the drag and drop area.\n     * @param event DOM event.\n     */\n    onDropFiles(event: any): void {\n        if (this.enabled && !event.defaultPrevented) {\n            this.preventDefault(event);\n\n            let items = event.dataTransfer.items;\n            if (items) {\n                for (let i = 0; i < items.length; i++) {\n                    if (typeof items[i].webkitGetAsEntry !== 'undefined') {\n                        let item = items[i].webkitGetAsEntry();\n                        if (item) {\n                            if (item.isFile) {\n                                this.filesEntityDropped.emit(item);\n                            } else if (item.isDirectory) {\n                                this.folderEntityDropped.emit(item);\n                            }\n                        }\n                    } else {\n                        let files = FileUtils.toFileArray(event.dataTransfer.files);\n                        this.filesDropped.emit(files);\n                    }\n                }\n            } else {\n                // safari or FF\n                let files = FileUtils.toFileArray(event.dataTransfer.files);\n                this.filesDropped.emit(files);\n            }\n\n            this.element.classList.remove(this.cssClassName);\n        }\n    }\n\n    /**\n     * Change the style of the drag area when a file drag in.\n     *\n     * @param {event} event - DOM event.\n     */\n    onDragEnter(event: Event): void {\n        if (this.enabled && !event.defaultPrevented) {\n            this.preventDefault(event);\n            this.element.classList.add(this.cssClassName);\n        }\n    }\n\n    /**\n     * Change the style of the drag area when a file drag out.\n     *\n     * @param {event} event - DOM event.\n     */\n    onDragLeave(event: Event): void {\n        if (this.enabled && !event.defaultPrevented) {\n            this.preventDefault(event);\n            this.element.classList.remove(this.cssClassName);\n        }\n    }\n\n    /**\n     * Change the style of the drag area when a file is over the drag area.\n     *\n     * @param event\n     */\n    onDragOver(event: Event): void {\n        if (this.enabled && !event.defaultPrevented) {\n            this.preventDefault(event);\n            this.element.classList.add(this.cssClassName);\n        }\n    }\n\n    /**\n     * Prevent default and stop propagation of the DOM event.\n     *\n     * @param {event} $event - DOM event.\n     */\n    preventDefault(event: Event): void {\n        event.stopPropagation();\n        event.preventDefault();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/upload/directives/file-draggable.directive.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './social';\nexport * from './tag';\nexport * from './webscript';\nexport * from './services';\nexport * from './document-list';\nexport * from './upload';\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/index.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './public-api';\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/social/index.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './rating.component';\nexport * from './like.component';\nexport * from './social-module';\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/social/public-api.ts","\n        var result = require(\"!!../../node_modules/raw-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./rating.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./content-services/social/rating.component.scss\n// module id = 197\n// module chunks = 2","module.exports = \".adf-rating-container {\\n  overflow: hidden;\\n  width: 100%; }\\n  .adf-rating-container .adf-rating-star {\\n    float: left;\\n    transition: all .3s;\\n    padding: 1px;\\n    cursor: pointer; }\\n    .adf-rating-container .adf-rating-star .mat-list-item-content {\\n      padding: 0 2px !important; }\\n  .adf-rating-container .adf-colored-star {\\n    color: #ffe944; }\\n  .adf-rating-container .adf-grey-star {\\n    color: #808080; }\\n  .adf-rating-container .adf-stars-container {\\n    padding: 0 !important;\\n    margin: 0 !important;\\n    display: inline-block; }\\n  .adf-rating-container .adf-rating-star:hover {\\n    transform: rotate(13deg) scale(1.2); }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./node_modules/sass-loader/lib/loader.js!./content-services/social/rating.component.scss\n// module id = 198\n// module chunks = 2","module.exports = \"<mat-list id=\\\"adf-rating-container\\\" class=\\\"adf-rating-container\\\">\\n    <mat-list-item class=\\\"adf-rating-star\\\" *ngFor=\\\"let currentRate of stars; let idx = index\\\">\\n            <span id=\\\"adf-rate-{{idx}}\\\">\\n                <mat-icon id=\\\"adf-grey-star-{{idx}}\\\" *ngIf=\\\"currentRate.fill\\\" class=\\\"adf-colored-star\\\"\\n                         (click)=\\\"updateVote(idx + 1)\\\">star_rate\\n                </mat-icon>\\n                <mat-icon id=\\\"adf-colored-star-{{idx}}\\\" *ngIf=\\\"!currentRate.fill\\\" class=\\\"adf-grey-star\\\"\\n                         (click)=\\\"updateVote(idx + 1)\\\">star_border\\n                </mat-icon>\\n            </span>\\n    </mat-list-item>\\n</mat-list>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./content-services/social/rating.component.html\n// module id = 199\n// module chunks = 2","\n        var result = require(\"!!../../node_modules/raw-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./like.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./content-services/social/like.component.scss\n// module id = 200\n// module chunks = 2","module.exports = \".adf-like-container {\\n  overflow: hidden;\\n  width: 100%; }\\n  .adf-like-container .adf-like {\\n    padding: 5px;\\n    cursor: pointer;\\n    float: left;\\n    margin: 5px 0px 5px 5px; }\\n  .adf-like-container .adf-like-select {\\n    cursor: pointer;\\n    color: #2196f3; }\\n  .adf-like-container .adf-like-select:hover {\\n    cursor: pointer;\\n    color: #808080; }\\n  .adf-like-container .adf-like-grey {\\n    cursor: pointer;\\n    color: #808080; }\\n  .adf-like-container .adf-like-grey:hover {\\n    cursor: pointer;\\n    color: #2196f3; }\\n  .adf-like-container .adf-like-counter {\\n    float: left;\\n    padding: 13px 0 0 0; }\\n  .adf-like-container .adf-left {\\n    float: left;\\n    padding: 13px 0 0 4px; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./node_modules/sass-loader/lib/loader.js!./content-services/social/like.component.scss\n// module id = 201\n// module chunks = 2","module.exports = \"<div id=\\\"adf-like-container\\\" class=\\\"adf-like-container\\\">\\n    <div class=\\\"adf-like\\\">\\n        <span id=\\\"adf-like-{{nodeId}}\\\" [ngClass]=\\\"{'adf-like-select': isLike ,'adf-like-grey': !isLike  }\\\"\\n              (click)=\\\"likeClick()\\\">\\n            <mat-icon>thumb_up</mat-icon>\\n        </span>\\n    </div>\\n    <div id=\\\"adf-like-counter\\\" class=\\\"adf-like-counter\\\">{{likesCounter}}</div>\\n    <div class=\\\"adf-left\\\" *ngIf=\\\"likesCounter<=1\\\">Like</div>\\n    <div class=\\\"adf-left\\\" *ngIf=\\\"likesCounter>1\\\">Likes</div>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./content-services/social/like.component.html\n// module id = 202\n// module chunks = 2","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { CoreModule } from 'ng2-alfresco-core';\nimport { MaterialModule } from '../material.module';\n\nimport { RatingService } from '../services/rating.service';\nimport { LikeComponent } from './like.component';\nimport { RatingComponent } from './rating.component';\n\n@NgModule({\n    imports: [\n        CoreModule,\n        MaterialModule\n    ],\n    exports: [\n        RatingComponent,\n        LikeComponent\n    ],\n    declarations: [\n        RatingComponent,\n        LikeComponent\n    ],\n    providers: [\n        RatingService\n    ]\n})\nexport class SocialModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/social/social-module.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './public-api';\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/tag/index.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './tag-actions.component';\nexport * from './tag-list.component';\nexport * from './tag-node-list.component';\nexport * from './tag-module';\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/tag/public-api.ts","module.exports = \"<mat-list>\\n    <mat-list-item *ngFor=\\\"let currentEntry of tagsEntries; let idx = index\\\">\\n        <div class=\\\"adf-tag-actions-container\\\" id=\\\"tag_delete_{{idx}}\\\" (click)=\\\"removeTag(currentEntry.entry.id)\\\">\\n            <div class=\\\"adf-tag-actions-delete-text\\\" id=\\\"tag_name_{{idx}}\\\">\\n                {{currentEntry.entry.tag}}\\n            </div>\\n            <mat-icon class=\\\"adf-tag-actions-delete-icon\\\">delete</mat-icon>\\n        </div>\\n    </mat-list-item>\\n</mat-list>\\n<table class=\\\"adf-full-width\\\" cellspacing=\\\"0\\\">\\n    <tr>\\n        <td>\\n            <mat-form-field class=\\\"adf-full-width\\\">\\n                <input matInput placeholder=\\\"{{'TAG.LABEL.NEWTAG' | translate }}\\\"\\n                       type=\\\"text\\\"\\n                       (keypress)=\\\"cleanErrorMsg()\\\"\\n                       [(ngModel)]=\\\"newTagName\\\"\\n                       id=\\\"new-tag-text\\\"/>\\n                <mat-hint *ngIf=\\\"error\\\" [ngStyle]=\\\"{'color': 'red'}\\\" align=\\\"start\\\">{{errorMsg}}</mat-hint>\\n            </mat-form-field>\\n        </td>\\n        <td>\\n            <button class=\\\"adf-full-width\\\" color=\\\"primary\\\" id=\\\"add-tag\\\" (click)=\\\"addTag()\\\" [disabled]=\\\"disableAddTag\\\"\\n                    mat-raised-button>\\n                {{'TAG.BUTTON.ADD' | translate }}\\n            </button>\\n        </td>\\n    </tr>\\n</table>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./content-services/tag/tag-actions.component.html\n// module id = 206\n// module chunks = 2","\n        var result = require(\"!!../../node_modules/raw-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./tag-actions.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./content-services/tag/tag-actions.component.scss\n// module id = 207\n// module chunks = 2","module.exports = \".adf-full-width {\\n  width: 100%; }\\n\\n.adf-tag-actions-delete-icon {\\n  float: right;\\n  cursor: pointer; }\\n\\n.adf-tag-actions-delete-text {\\n  font-size: 16px;\\n  float: left; }\\n\\n.adf-tag-actions-container {\\n  padding: 8px 0 8px 0;\\n  height: 20px; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./node_modules/sass-loader/lib/loader.js!./content-services/tag/tag-actions.component.scss\n// module id = 208\n// module chunks = 2","module.exports = \"<mat-list>\\n    <mat-list-item *ngFor=\\\"let currentEntry of tagsEntries; let idx = index\\\">\\n        <div class=\\\"adf-list-tag\\\" id=\\\"tag_name_{{idx}}\\\">{{currentEntry.entry.tag}}</div>\\n    </mat-list-item>\\n</mat-list>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./content-services/tag/tag-list.component.html\n// module id = 209\n// module chunks = 2","\n        var result = require(\"!!../../node_modules/raw-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./tag-list.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./content-services/tag/tag-list.component.scss\n// module id = 210\n// module chunks = 2","module.exports = \".adf-list-tag {\\n  padding: 16px;\\n  font-size: 16px; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./node_modules/sass-loader/lib/loader.js!./content-services/tag/tag-list.component.scss\n// module id = 211\n// module chunks = 2","module.exports = \"<mat-chip-list>\\n    <mat-chip class=\\\"adf-tag-chips adf-primary-background-color\\\" *ngFor=\\\"let currentEntry of tagsEntries; let idx = index\\\">\\n        <span id=\\\"tag_name_{{idx}}\\\">{{currentEntry.entry.tag}}</span>\\n        <button class=\\\"adf-tag-chips-delete\\\" id=\\\"tag_delete_{{idx}}\\\" type=\\\"button\\\" (click)=\\\"removeTag(currentEntry.entry.id)\\\">\\n            <mat-icon class=\\\"adf-tag-chips-delete-icon adf-primary-contrast-text-color\\\" matChipRemove>cancel</mat-icon>\\n        </button>\\n    </mat-chip>\\n</mat-chip-list>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./content-services/tag/tag-node-list.component.html\n// module id = 212\n// module chunks = 2","\n        var result = require(\"!!../../node_modules/raw-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./tag-node-list.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./content-services/tag/tag-node-list.component.scss\n// module id = 213\n// module chunks = 2","module.exports = \".adf-tag-chips-delete {\\n  overflow: visible;\\n  cursor: pointer;\\n  height: 17px;\\n  width: 20px;\\n  float: right;\\n  border: 0;\\n  background: none;\\n  padding: 0;\\n  margin: -1px 0px 0px 10px; }\\n\\n.adf-tag-chips-delete-icon {\\n  font-size: 20px;\\n  background-repeat: no-repeat;\\n  display: inline-block;\\n  fill: currentColor;\\n  height: 20px;\\n  width: 20px; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./node_modules/sass-loader/lib/loader.js!./content-services/tag/tag-node-list.component.scss\n// module id = 214\n// module chunks = 2","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { CoreModule, TRANSLATION_PROVIDER } from 'ng2-alfresco-core';\nimport { MaterialModule } from '../material.module';\nimport { TagService } from '../services/tag.service';\nimport { TagActionsComponent } from './tag-actions.component';\nimport { TagListComponent } from './tag-list.component';\nimport { TagNodeListComponent } from './tag-node-list.component';\n\n@NgModule({\n    imports: [\n        CoreModule,\n        MaterialModule\n    ],\n    exports: [\n        TagActionsComponent,\n        TagListComponent,\n        TagNodeListComponent\n    ],\n    declarations: [\n        TagActionsComponent,\n        TagListComponent,\n        TagNodeListComponent\n    ],\n    providers: [\n        TagService,\n        {\n            provide: TRANSLATION_PROVIDER,\n            multi: true,\n            useValue: {\n                name: 'ng2-alfresco-tag',\n                source: 'assets/ng2-alfresco-tag'\n            }\n        }\n    ]\n})\nexport class TagModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/tag/tag-module.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './public-api';\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/webscript/index.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './webscript.component';\nexport * from './webscript-module';\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/webscript/public-api.ts","module.exports = \"<div *ngIf=\\\"showData\\\">\\n    <div *ngIf=\\\"contentType === 'JSON'\\\" id=\\\"webscript-data-JSON\\\">{{data | json}}</div>\\n    <div *ngIf=\\\"contentType === 'HTML'\\\" id=\\\"webscript-data-HTML\\\" [innerHTML]=\\\"data\\\"></div>\\n    <div *ngIf=\\\"contentType === 'TEXT'\\\" id=\\\"webscript-data-TEXT\\\">{{data}}</div>\\n    <div *ngIf=\\\"isDataTableContent()\\\">\\n        <adf-datatable id=\\\"webscript-datatable-wrapper\\\" [data]=\\\"data\\\"></adf-datatable>\\n        <div>\\n            <div *ngIf=\\\"showError\\\" id=\\\"error\\\">{{'WEBSCRIPT.ERROR' | translate: {\\n                data: data,\\n                contentType: contentType\\n                }\\n                }}\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./content-services/webscript/webscript.component.html\n// module id = 218\n// module chunks = 2","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { CoreModule, TRANSLATION_PROVIDER } from 'ng2-alfresco-core';\nimport { DataTableModule } from '@adf/core';\nimport { MaterialModule } from '../material.module';\nimport { WebscriptComponent } from './webscript.component';\n\n@NgModule({\n    imports: [\n        CoreModule,\n        MaterialModule,\n        DataTableModule\n    ],\n    exports: [\n        WebscriptComponent\n    ],\n    declarations: [\n        WebscriptComponent\n    ],\n    providers: [\n        {\n            provide: TRANSLATION_PROVIDER,\n            multi: true,\n            useValue: {\n                name: 'ng2-alfresco-webscript',\n                source: 'assets/ng2-alfresco-webscript'\n            }\n        }\n    ]\n})\nexport class WebScriptModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/webscript/webscript-module.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './public-api';\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/services/index.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './rating.service';\nexport * from './tag.service';\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/services/public-api.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './public-api';\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/document-list/index.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './components/document-list.component';\nexport * from './components/node.event';\nexport * from './components/content-column/content-column.component';\nexport * from './components/content-column/content-column-list.component';\nexport * from './components/content-action/content-action.component';\nexport * from './components/content-action/content-action-list.component';\nexport * from './components/content-node-selector/content-node-selector.component';\nexport * from './components/empty-folder/empty-folder-content.directive';\nexport * from './components/no-permission/no-permission-content.directive';\nexport * from './components/breadcrumb/breadcrumb.component';\nexport * from './components/site-dropdown/sites-dropdown.component';\n\n// data\nexport * from './data/share-datatable-adapter';\nexport * from './data/share-data-row.model';\n\n// services\nexport * from './services/folder-actions.service';\nexport * from './services/document-actions.service';\nexport * from './services/document-list.service';\nexport * from './services/node-actions.service';\n\n// models\nexport * from './models/content-action.model';\nexport * from './models/document-library.model';\nexport * from './models/permissions.model';\nexport * from './models/permissions-style.model';\n\nexport * from './document-list-module';\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/document-list/public-api.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let presetsDefaultModel = {\n    '-trashcan-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'name',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'path',\n            type: 'location',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.LOCATION',\n            format: this.locationFormat,\n            sortable: true\n        },\n        {\n            key: 'content.sizeInBytes',\n            type: 'fileSize',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SIZE',\n            sortable: true\n        },\n        {\n            key: 'archivedAt',\n            type: 'date',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.DELETED_ON',\n            format: 'timeAgo',\n            sortable: true\n        },\n        {\n            key: 'archivedByUser.displayName',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.DELETED_BY',\n            sortable: true\n        }\n    ],\n    '-sites-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'title',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'visibility',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.STATUS',\n            sortable: true\n        }\n    ],\n    '-mysites-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'title',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'visibility',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.STATUS',\n            sortable: true\n        }\n    ],\n    '-favorites-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'name',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'path',\n            type: 'location',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.LOCATION',\n            format: this.locationFormat,\n            sortable: true\n        },\n        {\n            key: 'content.sizeInBytes',\n            type: 'fileSize',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SIZE',\n            sortable: true\n        },\n        {\n            key: 'modifiedAt',\n            type: 'date',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_ON',\n            format: 'timeAgo',\n            sortable: true\n        },\n        {\n            key: 'modifiedByUser.displayName',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_BY',\n            sortable: true\n        }\n    ],\n    '-recent-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'name',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'path',\n            type: 'location',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.LOCATION',\n            cssClass: 'ellipsis-cell',\n            format: this.locationFormat,\n            sortable: true\n        },\n        {\n            key: 'content.sizeInBytes',\n            type: 'fileSize',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SIZE',\n            sortable: true\n        },\n        {\n            key: 'modifiedAt',\n            type: 'date',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_ON',\n            format: 'timeAgo',\n            sortable: true\n        }\n    ],\n    '-sharedlinks-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'name',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'path',\n            type: 'location',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.LOCATION',\n            cssClass: 'ellipsis-cell',\n            format: this.locationFormat,\n            sortable: true\n        },\n        {\n            key: 'content.sizeInBytes',\n            type: 'fileSize',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SIZE',\n            sortable: true\n        },\n        {\n            key: 'modifiedAt',\n            type: 'date',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_ON',\n            format: 'timeAgo',\n            sortable: true\n        },\n        {\n            key: 'modifiedByUser.displayName',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_BY',\n            sortable: true\n        },\n        {\n            key: 'sharedByUser.displayName',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SHARED_BY',\n            sortable: true\n        }\n    ],\n    'default': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'name',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'content.sizeInBytes',\n            type: 'fileSize',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SIZE',\n            sortable: true\n        },\n        {\n            key: 'modifiedAt',\n            type: 'date',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_ON',\n            format: 'timeAgo',\n            sortable: true\n        },\n        {\n            key: 'modifiedByUser.displayName',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_BY',\n            sortable: true\n        }\n    ]\n};\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/document-list/models/preset.model.ts","module.exports = __webpack_public_path__ + \"content-services/document-list/assets/images/empty_doc_lib.a89c064e4edfa54d2e347bf594947219.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./content-services/document-list/assets/images/empty_doc_lib.svg\n// module id = 225\n// module chunks = 2","\n        var result = require(\"!!../../../node_modules/raw-loader/index.js!../../../node_modules/sass-loader/lib/loader.js!./document-list.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./content-services/document-list/components/document-list.component.scss\n// module id = 226\n// module chunks = 2","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./node_modules/sass-loader/lib/loader.js!./content-services/document-list/components/document-list.component.scss\n// module id = 227\n// module chunks = 2","module.exports = \"<adf-datatable\\n    [selectionMode]=\\\"selectionMode\\\"\\n    [data]=\\\"data\\\"\\n    [actions]=\\\"contentActions\\\"\\n    [actionsPosition]=\\\"contentActionsPosition\\\"\\n    [multiselect]=\\\"multiselect\\\"\\n    [allowDropFiles]=\\\"allowDropFiles\\\"\\n    [contextMenu]=\\\"contextMenuActions\\\"\\n    [rowStyle]=\\\"rowStyle\\\"\\n    [rowStyleClass]=\\\"rowStyleClass\\\"\\n    [loading]=\\\"loading\\\"\\n    [noPermission]=\\\"noPermission\\\"\\n    [showHeader]=\\\"!isEmpty()\\\"\\n    (showRowContextMenu)=\\\"onShowRowContextMenu($event)\\\"\\n    (showRowActionsMenu)=\\\"onShowRowActionsMenu($event)\\\"\\n    (executeRowAction)=\\\"onExecuteRowAction($event)\\\"\\n    (rowClick)=\\\"onNodeClick($event.value?.node)\\\"\\n    (rowDblClick)=\\\"onNodeDblClick($event.value?.node)\\\"\\n    (row-select)=\\\"onNodeSelect($event.detail)\\\"\\n    (row-unselect)=\\\"onNodeUnselect($event.detail)\\\">\\n\\n    <div *ngIf=\\\"!isEmptyTemplateDefined()\\\">\\n        <no-content-template>\\n            <ng-template>\\n                <adf-empty-list>\\n                    <div class=\\\"adf-empty-list_template adf-empty-folder\\\">\\n                        <div class=\\\"adf-empty-folder-this-space-is-empty\\\">{{'ADF-DOCUMENT-LIST.EMPTY.HEADER' | translate}}</div>\\n                        <div fxHide.lt-md=\\\"true\\\" class=\\\"adf-empty-folder-drag-drop\\\">{{ 'ADF-DATATABLE.EMPTY.DRAG-AND-DROP.TITLE' | translate }}</div>\\n                        <div fxHide.lt-md=\\\"true\\\" class=\\\"adf-empty-folder-any-files-here-to-add\\\">{{ 'ADF-DATATABLE.EMPTY.DRAG-AND-DROP.SUBTITLE' | translate }}</div>\\n                        <img class=\\\"adf-empty-folder-image\\\" [src]=\\\"emptyFolderImageUrl\\\">\\n                    </div>\\n                    <!-- <div adf-empty-list-header class=\\\"adf-empty-list-header\\\"> {{'ADF-DOCUMENT-LIST.EMPTY.HEADER' | translate}} </div> -->\\n                </adf-empty-list>\\n            </ng-template>\\n        </no-content-template>\\n    </div>\\n\\n    <div *ngIf=\\\"!isNoPermissionTemplateDefined()\\\">\\n        <no-permission-template>\\n            <ng-template>\\n                <div class=\\\"adf-no-permission__template\\\">\\n                    <mat-icon>ic_error</mat-icon>\\n                    <p class=\\\"adf-no-permission__template--text\\\">{{ 'ADF-DOCUMENT-LIST.NO_PERMISSION' | translate }}</p>\\n                </div>\\n            </ng-template>\\n        </no-permission-template>\\n    </div>\\n\\n    <div>\\n        <loading-content-template>\\n            <ng-template>\\n                <div class=\\\"adf-document-list-loading-container\\\">\\n                    <mat-progress-spinner\\n                        id=\\\"adf-document-list-loading\\\"\\n                        class=\\\"adf-document-list-loading-margin\\\"\\n                        [color]=\\\"'primary'\\\"\\n                        [mode]=\\\"'indeterminate'\\\">\\n                    </mat-progress-spinner>\\n                </div>\\n            </ng-template>\\n        </loading-content-template>\\n    </div>\\n</adf-datatable>\\n\\n<ng-container *ngIf=\\\"isPaginationEnabled()\\\">\\n    <adf-pagination\\n        *ngIf=\\\"isPaginationNeeded()\\\"\\n        class=\\\"adf-documentlist-pagination\\\"\\n        (changePageSize)=\\\"onChangePageSize($event)\\\"\\n        (changePageNumber)=\\\"onChangePageNumber($event)\\\"\\n        (nextPage)=\\\"onNextPage($event)\\\"\\n        (prevPage)=\\\"onPrevPage($event)\\\"\\n        [pagination]=\\\"pagination\\\"\\n        [supportedPageSizes]=\\\"supportedPageSizes\\\">\\n    </adf-pagination>\\n\\n    <adf-infinite-pagination\\n        *ngIf=\\\"!isPaginationNeeded()\\\"\\n        [pagination]=\\\"pagination\\\"\\n        [pageSize]=\\\"pageSize\\\"\\n        [loading]=\\\"infiniteLoading\\\"\\n        (loadMore)=\\\"loadNextBatch($event)\\\">\\n            {{ 'ADF-DOCUMENT-LIST.LAYOUT.LOAD_MORE' | translate }}\\n    </adf-infinite-pagination>\\n</ng-container>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./content-services/document-list/components/document-list.component.html\n// module id = 228\n// module chunks = 2","module.exports = __WEBPACK_EXTERNAL_MODULE_229__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"rxjs/Observable\"\n// module id = 229\n// module chunks = 2","\n        var result = require(\"!!../../../../node_modules/raw-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./content-node-selector.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./content-services/document-list/components/content-node-selector/content-node-selector.component.scss\n// module id = 230\n// module chunks = 2","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./node_modules/sass-loader/lib/loader.js!./content-services/document-list/components/content-node-selector/content-node-selector.component.scss\n// module id = 231\n// module chunks = 2","module.exports = \"<header matDialogTitle\\n    class=\\\"adf-content-node-selector-title\\\"\\n    data-automation-id=\\\"content-node-selector-title\\\">{{title}}</header>\\n\\n<section matDialogContent\\n    class=\\\"adf-content-node-selector-content\\\"\\n    (node-select)=\\\"onNodeSelect($event)\\\">\\n\\n    <mat-form-field floatPlaceholder=\\\"never\\\" class=\\\"adf-content-node-selector-content-input\\\">\\n        <input #searchInput\\n            matInput\\n            placeholder=\\\"Search\\\"\\n            (input)=\\\"search(searchInput.value)\\\"\\n            [value]=\\\"searchTerm\\\"\\n            data-automation-id=\\\"content-node-selector-search-input\\\">\\n\\n        <mat-icon *ngIf=\\\"searchTerm.length > 0\\\"\\n                matSuffix (click)=\\\"clear()\\\"\\n                class=\\\"adf-content-node-selector-content-input-icon\\\"\\n                data-automation-id=\\\"content-node-selector-search-clear\\\">clear</mat-icon>\\n\\n        <mat-icon *ngIf=\\\"searchTerm.length === 0\\\"\\n            matSuffix\\n            class=\\\"adf-content-node-selector-content-input-icon\\\"\\n            data-automation-id=\\\"content-node-selector-search-icon\\\">search</mat-icon>\\n\\n    </mat-form-field>\\n\\n    <adf-sites-dropdown\\n        (change)=\\\"siteChanged($event)\\\"\\n        data-automation-id=\\\"content-node-selector-sites-combo\\\"></adf-sites-dropdown>\\n\\n    <adf-toolbar>\\n        <adf-toolbar-title>\\n            <adf-dropdown-breadcrumb *ngIf=\\\"needBreadcrumbs()\\\"\\n                class=\\\"adf-content-node-selector-content-breadcrumb\\\"\\n                [target]=\\\"documentList\\\"\\n                [folderNode]=\\\"breadcrumbFolderNode\\\"\\n                data-automation-id=\\\"content-node-selector-content-breadcrumb\\\">\\n            </adf-dropdown-breadcrumb>\\n        </adf-toolbar-title>\\n    </adf-toolbar>\\n\\n    <div class=\\\"adf-content-node-selector-content-list\\\" data-automation-id=\\\"content-node-selector-content-list\\\">\\n        <adf-document-list\\n                    #documentList\\n                    adf-highlight\\n                    adf-highlight-selector=\\\".cell-value adf-datatable-cell .adf-datatable-cell-value\\\"\\n                    [node]=\\\"nodes\\\"\\n                    [rowFilter]=\\\"rowFilter\\\"\\n                    [imageResolver]=\\\"imageResolver\\\"\\n                    [currentFolderId]=\\\"folderIdToShow\\\"\\n                    selectionMode=\\\"single\\\"\\n                    [contextMenuActions]=\\\"false\\\"\\n                    [contentActions]=\\\"false\\\"\\n                    [allowDropFiles]=\\\"false\\\"\\n                    [enablePagination]=\\\"!showingSearchResults\\\"\\n                    paginationStrategy=\\\"{{paginationStrategy}}\\\"\\n                    [pageSize]=\\\"pageSize\\\"\\n                    (folderChange)=\\\"onFolderChange()\\\"\\n                    (ready)=\\\"onFolderLoaded()\\\"\\n                    data-automation-id=\\\"content-node-selector-document-list\\\">\\n            <empty-folder-content>\\n                <ng-template>\\n                    <div>{{ 'NODE_SELECTOR.NO_RESULTS' | translate }}</div>\\n                </ng-template>\\n            </empty-folder-content>\\n        </adf-document-list>\\n\\n        <adf-infinite-pagination\\n            *ngIf=\\\"showingSearchResults && isSearchTermLongEnough()\\\"\\n            [pagination]=\\\"pagination\\\"\\n            [pageSize]=\\\"pageSize\\\"\\n            [loading]=\\\"loadingSearchResults\\\"\\n            (loadMore)=\\\"getNextPageOfSearch($event)\\\"\\n            data-automation-id=\\\"content-node-selector-search-pagination\\\">\\n            {{ 'ADF-DOCUMENT-LIST.LAYOUT.LOAD_MORE' | translate }}\\n        </adf-infinite-pagination>\\n    </div>\\n\\n</section>\\n\\n<footer matDialogActions class=\\\"adf-content-node-selector-actions\\\">\\n\\n    <button *ngIf=\\\"inDialog\\\"\\n        mat-button\\n        class=\\\"adf-content-node-selector-actions-cancel\\\"\\n        (click)=\\\"close()\\\"\\n        data-automation-id=\\\"content-node-selector-actions-cancel\\\">{{ 'NODE_SELECTOR.CANCEL' | translate }}\\n    </button>\\n\\n    <button mat-button\\n        [disabled]=\\\"!chosenNode\\\"\\n        class=\\\"adf-content-node-selector-actions-choose\\\"\\n        (click)=\\\"choose()\\\"\\n        data-automation-id=\\\"content-node-selector-actions-choose\\\">{{ 'NODE_SELECTOR.CHOOSE' | translate }}\\n    </button>\\n\\n</footer>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./content-services/document-list/components/content-node-selector/content-node-selector.component.html\n// module id = 232\n// module chunks = 2","module.exports = \"<div *ngIf=\\\"folderNode\\\" data-automation-id=\\\"breadcrumb\\\" class=\\\"adf-breadcrumb-container\\\">\\n    <li *ngFor=\\\"let item of route; let last = last\\\"\\n        [class.active]=\\\"last\\\"\\n        [ngSwitch]=\\\"last\\\"\\n        title=\\\"{{ item.name | translate }}\\\"\\n        class=\\\"adf-breadcrumb-item\\\">\\n\\n        <a *ngSwitchDefault href=\\\"#\\\" [attr.data-automation-id]=\\\"'breadcrumb_' + item.name\\\"\\n           class=\\\"adf-breadcrumb-item-anchor\\\"\\n           (click)=\\\"onRoutePathClick(item, $event)\\\">\\n            {{ item.name | translate }}\\n        </a>\\n\\n        <div *ngSwitchCase=\\\"true\\\" class=\\\"adf-breadcrumb-item-current\\\">\\n            {{ item.name | translate }}\\n        </div>\\n\\n        <mat-icon class=\\\"adf-breadcrumb-item-chevron\\\" *ngIf=\\\"!last\\\">\\n            chevron_right\\n        </mat-icon>\\n    </li>\\n</div>\\n<div *ngIf=\\\"!folderNode && hasRoot\\\">\\n    <li class=\\\"adf-breadcrumb-item\\\">\\n        <div class=\\\"adf-breadcrumb-item-current\\\">\\n            {{ root | translate }}\\n        </div>\\n    </li>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./content-services/document-list/components/breadcrumb/breadcrumb.component.html\n// module id = 233\n// module chunks = 2","\n        var result = require(\"!!../../../../node_modules/raw-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./breadcrumb.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./content-services/document-list/components/breadcrumb/breadcrumb.component.scss\n// module id = 234\n// module chunks = 2","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./node_modules/sass-loader/lib/loader.js!./content-services/document-list/components/breadcrumb/breadcrumb.component.scss\n// module id = 235\n// module chunks = 2","\n        var result = require(\"!!../../../../node_modules/raw-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./sites-dropdown.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./content-services/document-list/components/site-dropdown/sites-dropdown.component.scss\n// module id = 236\n// module chunks = 2","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./node_modules/sass-loader/lib/loader.js!./content-services/document-list/components/site-dropdown/sites-dropdown.component.scss\n// module id = 237\n// module chunks = 2","module.exports = \"<div id=\\\"site-dropdown-container\\\" class=\\\"adf-site-dropdown-container\\\">\\n    <mat-form-field>\\n        <mat-select\\n            class=\\\"adf-site-dropdown-list-element\\\"\\n            id=\\\"site-dropdown\\\"\\n            placeholder=\\\"{{'DROPDOWN.PLACEHOLDER_LABEL' | translate}}\\\"\\n            floatPlaceholder=\\\"never\\\"\\n            data-automation-id=\\\"site-my-files-select\\\"\\n            [(ngModel)]=\\\"siteSelected\\\"\\n            (ngModelChange)=\\\"selectedSite()\\\">\\n            <mat-option *ngIf=\\\"!hideMyFiles\\\" data-automation-id=\\\"site-my-files-option\\\" id=\\\"default_site_option\\\" [value]=\\\"MY_FILES_VALUE\\\">{{'DROPDOWN.MY_FILES_OPTION' | translate}}</mat-option>\\n            <mat-option *ngFor=\\\"let site of siteList\\\" [value]=\\\"site.guid\\\">\\n                {{ site.title }}\\n            </mat-option>\\n        </mat-select>\\n    </mat-form-field>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./content-services/document-list/components/site-dropdown/sites-dropdown.component.html\n// module id = 238\n// module chunks = 2","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// note: contains only limited subset of available fields\n\nimport { MinimalNodeEntity, MinimalNodeEntryEntity } from 'alfresco-js-api';\n\nexport class NodePaging {\n    list: NodePagingList;\n}\n\nexport class NodePagingList {\n    pagination: Pagination;\n    entries: NodeMinimalEntry[];\n}\n\nexport class NodeMinimalEntry implements MinimalNodeEntity {\n    entry: NodeMinimal;\n}\n\nexport class Pagination {\n    count: number;\n    hasMoreItems: boolean;\n    totalItems: number;\n    skipCount: number;\n    maxItems: number;\n}\n\nexport class NodeMinimal implements MinimalNodeEntryEntity {\n    id: string;\n    parentId: string;\n    name: string;\n    nodeType: string;\n    isFolder: boolean;\n    isFile: boolean;\n    modifiedAt: Date;\n    modifiedByUser: UserInfo;\n    createdAt: Date;\n    createdByUser: UserInfo;\n    content: ContentInfo;\n    path: PathInfoEntity;\n    properties: NodeProperties = {};\n}\n\nexport class UserInfo {\n    displayName: string;\n    id: string;\n}\n\nexport class ContentInfo {\n    mimeType: string;\n    mimeTypeName: string;\n    sizeInBytes: number;\n    encoding: string;\n}\n\nexport class PathInfoEntity {\n    elements: PathElementEntity[];\n    isComplete: boolean;\n    name: string;\n}\n\nexport class PathElementEntity {\n    id: string;\n    name: string;\n}\n\nexport interface NodeProperties {\n    [key: string]: any;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/document-list/models/document-library.model.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PermissionsEnum } from 'ng2-alfresco-core';\n\nexport class PermissionStyleModel {\n    css: string;\n    permission: PermissionsEnum;\n    isFolder: boolean = true;\n    isFile: boolean = true;\n\n    constructor(css: string, permission: PermissionsEnum, isFile: boolean = true, isFolder: boolean = true) {\n        this.css = css;\n        this.permission = permission;\n        this.isFile = isFile;\n        this.isFolder = isFolder;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/document-list/models/permissions-style.model.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MaterialModule } from '../material.module';\n\nimport { CoreModule, TRANSLATION_PROVIDER } from 'ng2-alfresco-core';\nimport { DataTableModule } from '@adf/core';\nimport { UploadModule } from '../upload';\n\nimport { BreadcrumbComponent } from './components/breadcrumb/breadcrumb.component';\nimport { DropdownBreadcrumbComponent } from './components/breadcrumb/dropdown-breadcrumb.component';\nimport { ContentActionListComponent } from './components/content-action/content-action-list.component';\nimport { ContentActionComponent } from './components/content-action/content-action.component';\nimport { ContentColumnListComponent } from './components/content-column/content-column-list.component';\nimport { ContentColumnComponent } from './components/content-column/content-column.component';\nimport { ContentNodeSelectorComponent } from './components/content-node-selector/content-node-selector.component';\nimport { DocumentListComponent } from './components/document-list.component';\nimport { DropdownSitesComponent } from './components/site-dropdown/sites-dropdown.component';\nimport { VersionListComponent } from './components/version-manager/version-list.component';\nimport { VersionManagerComponent } from './components/version-manager/version-manager.component';\nimport { VersionUploadComponent } from './components/version-manager/version-upload.component';\n\nimport { EmptyFolderContentDirective } from './components/empty-folder/empty-folder-content.directive';\nimport { NoPermissionContentDirective } from './components/no-permission/no-permission-content.directive';\n\nimport { ContentNodeSelectorService } from './components/content-node-selector/content-node-selector.service';\nimport { DocumentActionsService } from './services/document-actions.service';\nimport { DocumentListService } from './services/document-list.service';\nimport { FolderActionsService } from './services/folder-actions.service';\nimport { NodeActionsService } from './services/node-actions.service';\n\n@NgModule({\n    imports: [\n        CoreModule,\n        DataTableModule,\n        FlexLayoutModule,\n        MaterialModule,\n        UploadModule\n    ],\n    declarations: [\n        DocumentListComponent,\n        ContentColumnComponent,\n        ContentColumnListComponent,\n        ContentActionComponent,\n        ContentActionListComponent,\n        EmptyFolderContentDirective,\n        NoPermissionContentDirective,\n        BreadcrumbComponent,\n        DropdownSitesComponent,\n        DropdownBreadcrumbComponent,\n        ContentNodeSelectorComponent,\n        VersionListComponent,\n        VersionUploadComponent,\n        VersionManagerComponent\n    ],\n    providers: [\n        DocumentListService,\n        FolderActionsService,\n        DocumentActionsService,\n        NodeActionsService,\n        ContentNodeSelectorService,\n        {\n            provide: TRANSLATION_PROVIDER,\n            multi: true,\n            useValue: {\n                name: 'ng2-alfresco-documentlist',\n                source: 'assets/ng2-alfresco-documentlist'\n            }\n        }\n    ],\n    entryComponents: [\n        ContentNodeSelectorComponent\n    ],\n    exports: [\n        DocumentListComponent,\n        ContentColumnComponent,\n        ContentColumnListComponent,\n        ContentActionComponent,\n        ContentActionListComponent,\n        EmptyFolderContentDirective,\n        NoPermissionContentDirective,\n        BreadcrumbComponent,\n        DropdownSitesComponent,\n        DropdownBreadcrumbComponent,\n        ContentNodeSelectorComponent,\n        VersionListComponent,\n        VersionUploadComponent,\n        VersionManagerComponent\n    ]\n})\nexport class DocumentListModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/document-list/document-list-module.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_242__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/flex-layout\"\n// module id = 242\n// module chunks = 2","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './components/upload-button.component';\nexport * from './components/file-uploading-dialog.component';\nexport * from './components/upload-drag-area.component';\nexport * from './components/file-uploading-list.component';\nexport * from './components/file-uploading-list-row.component';\n\nexport * from './directives/file-draggable.directive';\n\nexport * from './upload-module';\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/upload/public-api.ts","module.exports = \"<form class=\\\"adf-upload-button-file-container\\\">\\n    <!--Files Upload-->\\n    <a *ngIf=\\\"!uploadFolders\\\"\\n        [disabled]=\\\"isButtonDisabled()\\\"\\n        mat-raised-button color=\\\"primary\\\">\\n        <mat-icon>file_upload</mat-icon>\\n\\n        <!--Multiple Files Upload-->\\n        <span *ngIf=\\\"multipleFiles\\\">\\n            <label\\n                id=\\\"upload-multiple-file-label\\\"\\n                *ngIf=\\\"!staticTitle\\\"\\n                for=\\\"upload-multiple-files\\\">{{ 'FILE_UPLOAD.BUTTON.UPLOAD_FILE' | translate }}</label>\\n            <label\\n                id=\\\"upload-multiple-file-label-static\\\"\\n                *ngIf=\\\"staticTitle\\\"\\n                for=\\\"upload-multiple-files\\\">{{ staticTitle }}</label>\\n            <input #uploadFiles\\n                id=\\\"upload-multiple-files\\\"\\n                data-automation-id=\\\"upload-multiple-files\\\"\\n                type=\\\"file\\\"\\n                name=\\\"uploadFiles\\\"\\n                multiple=\\\"multiple\\\"\\n                accept=\\\"{{acceptedFilesType}}\\\"\\n                [attr.disabled]=\\\"isButtonDisabled()\\\"\\n                [title]=\\\"tooltip\\\"\\n                (change)=\\\"onFilesAdded($event)\\\">\\n        </span>\\n\\n        <!--Single Files Upload-->\\n        <span *ngIf=\\\"!multipleFiles\\\">\\n            <label\\n                id=\\\"upload-single-file-label\\\"\\n                *ngIf=\\\"!staticTitle\\\"\\n                for=\\\"upload-single-file\\\">{{ 'FILE_UPLOAD.BUTTON.UPLOAD_FILE' | translate }}</label>\\n            <label\\n                id=\\\"upload-single-file-label-static\\\"\\n                *ngIf=\\\"staticTitle\\\"\\n                for=\\\"upload-single-file\\\">{{ staticTitle }}</label>\\n            <input #uploadFiles\\n                id=\\\"upload-single-file\\\"\\n                data-automation-id=\\\"upload-single-file\\\"\\n                type=\\\"file\\\"\\n                name=\\\"uploadFiles\\\"\\n                accept=\\\"{{acceptedFilesType}}\\\"\\n                [attr.disabled]=\\\"isButtonDisabled()\\\"\\n                [title]=\\\"tooltip\\\"\\n                (change)=\\\"onFilesAdded($event)\\\">\\n        </span>\\n    </a>\\n\\n    <!--Folders Upload-->\\n    <a *ngIf=\\\"uploadFolders\\\"\\n        [disabled]=\\\"isButtonDisabled()\\\" mat-raised-button color=\\\"primary\\\">\\n        <mat-icon>file_upload</mat-icon>\\n        <label\\n            id=\\\"uploadFolder-label\\\"\\n            *ngIf=\\\"!staticTitle\\\"\\n            for=\\\"uploadFolder\\\">{{ 'FILE_UPLOAD.BUTTON.UPLOAD_FOLDER' | translate }}</label>\\n        <label\\n            id=\\\"uploadFolder-label-static\\\"\\n            *ngIf=\\\"staticTitle\\\"\\n            for=\\\"uploadFolder\\\">{{ staticTitle }}</label>\\n        <input #uploadFolders\\n            id=\\\"uploadFolder\\\"\\n            data-automation-id=\\\"uploadFolder\\\"\\n            type=\\\"file\\\"\\n            name=\\\"uploadFiles\\\"\\n            multiple=\\\"multiple\\\"\\n            accept=\\\"{{acceptedFilesType}}\\\"\\n            webkitdirectory directory\\n            [attr.disabled]=\\\"isButtonDisabled()\\\"\\n            [title]=\\\"tooltip\\\"\\n            (change)=\\\"onDirectoryAdded($event)\\\">\\n    </a>\\n</form>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./content-services/upload/components/upload-button.component.html\n// module id = 244\n// module chunks = 2","\n        var result = require(\"!!../../../node_modules/raw-loader/index.js!../../../node_modules/sass-loader/lib/loader.js!./upload-button.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./content-services/upload/components/upload-button.component.scss\n// module id = 245\n// module chunks = 2","module.exports = \".adf-upload-button-file-container input {\\n  cursor: pointer;\\n  height: 100%;\\n  right: 0;\\n  opacity: 0;\\n  position: absolute;\\n  top: 0;\\n  width: 300px;\\n  z-index: 4; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./node_modules/sass-loader/lib/loader.js!./content-services/upload/components/upload-button.component.scss\n// module id = 246\n// module chunks = 2","module.exports = \"<div class=\\\"upload-list\\\">\\n    <ng-template\\n        ngFor\\n        [ngForOf]=\\\"files\\\"\\n        [ngForTemplate]=\\\"template\\\">\\n    </ng-template>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./content-services/upload/components/file-uploading-list.component.html\n// module id = 247\n// module chunks = 2","\n        var result = require(\"!!../../../node_modules/raw-loader/index.js!../../../node_modules/sass-loader/lib/loader.js!./file-uploading-list.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./content-services/upload/components/file-uploading-list.component.scss\n// module id = 248\n// module chunks = 2","module.exports = \":host {\\n  display: flex;\\n  flex-direction: column; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./node_modules/sass-loader/lib/loader.js!./content-services/upload/components/file-uploading-list.component.scss\n// module id = 249\n// module chunks = 2","module.exports = \"<div *ngIf=\\\"isDialogActive\\\"\\n     class=\\\"upload-dialog\\\"\\n     [class.upload-dialog--minimized]=\\\"isDialogMinimized\\\"\\n     [class.upload-dialog--position-left]=\\\"position === 'left'\\\"\\n     [class.upload-dialog--position-right]=\\\"position === 'right'\\\">\\n    <header class=\\\"upload-dialog__header\\\">\\n        <button\\n            mat-button\\n            color=\\\"secondary\\\"\\n            [disabled]=\\\"isConfirmation\\\"\\n            (click)=\\\"toggleMinimized()\\\">\\n            <mat-icon\\n                mat-list-icon\\n                title=\\\"{{ (isDialogMinimized ? 'ADF_FILE_UPLOAD.BUTTON.MAXIMIZE': 'ADF_FILE_UPLOAD.BUTTON.MINIMIZE') | translate }}\\\">\\n                    {{ isDialogMinimized ? 'keyboard_arrow_up' : 'keyboard_arrow_down' }}\\n            </mat-icon>\\n        </button>\\n\\n        <span\\n            class=\\\"upload-dialog__title\\\"\\n            *ngIf=\\\"!uploadList.isUploadCompleted() && !uploadList.isUploadCancelled()\\\">\\n            {{ 'FILE_UPLOAD.MESSAGES.UPLOAD_PROGRESS'\\n                | translate: {\\n                    completed: totalCompleted,\\n                    total: filesUploadingList.length\\n                }\\n            }}\\n        </span>\\n\\n        <span\\n            class=\\\"upload-dialog__title\\\"\\n            *ngIf=\\\"uploadList.isUploadCompleted()\\\">\\n            {{ 'FILE_UPLOAD.MESSAGES.UPLOAD_COMPLETED'\\n                | translate: {\\n                    completed: totalCompleted,\\n                    total: filesUploadingList.length\\n                }\\n            }}\\n        </span>\\n\\n        <span\\n            class=\\\"upload-dialog__title\\\"\\n            *ngIf=\\\"uploadList.isUploadCancelled()\\\">\\n            {{ 'FILE_UPLOAD.MESSAGES.UPLOAD_CANCELED' | translate }}\\n        </span>\\n    </header>\\n\\n    <section\\n        class=\\\"upload-dialog__info\\\"\\n        *ngIf=\\\"totalErrors\\\">\\n        {{\\n            (totalErrors > 1\\n                 ? 'FILE_UPLOAD.MESSAGES.UPLOAD_ERRORS'\\n                 : 'FILE_UPLOAD.MESSAGES.UPLOAD_ERROR')\\n                 | translate: { total: totalErrors }\\n        }}\\n    </section>\\n\\n    <section\\n        class=\\\"upload-dialog__content\\\"\\n        [class.upload-dialog--padding]=\\\"isConfirmation\\\">\\n        <adf-file-uploading-list\\n            [class.upload-dialog--hide]=\\\"isConfirmation\\\"\\n            #uploadList\\n            [files]=\\\"filesUploadingList\\\">\\n                <ng-template let-file=\\\"$implicit\\\">\\n                     <adf-file-uploading-list-row\\n                        [file]=\\\"file\\\"\\n                        (remove)=\\\"uploadList.removeFile(file)\\\"\\n                        (cancel)=\\\"uploadList.cancelFile(file)\\\">\\n                    </adf-file-uploading-list-row>\\n                </ng-template>\\n        </adf-file-uploading-list>\\n\\n        <div\\n            class=\\\"upload-dialog__confirmation\\\"\\n            [class.upload-dialog--hide]=\\\"!isConfirmation\\\">\\n                <p class=\\\"upload-dialog__confirmation--title\\\">\\n                    {{ 'ADF_FILE_UPLOAD.CONFIRMATION.MESSAGE.TITLE' | translate }}\\n                </p>\\n\\n                <p class=\\\"upload-dialog__confirmation--text\\\">\\n                    {{ 'ADF_FILE_UPLOAD.CONFIRMATION.MESSAGE.TEXT' | translate }}\\n                </p>\\n        </div>\\n    </section>\\n\\n    <footer\\n        class=\\\"upload-dialog__actions\\\"\\n        [class.upload-dialog--hide]=\\\"isConfirmation\\\">\\n        <button\\n            color=\\\"primary\\\"\\n            mat-button\\n            *ngIf=\\\"!uploadList.isUploadCompleted() && !uploadList.isUploadCancelled()\\\"\\n            (click)=\\\"toggleConfirmation()\\\">\\n            {{ 'ADF_FILE_UPLOAD.BUTTON.CANCEL_ALL' | translate }}\\n        </button>\\n\\n        <button\\n            *ngIf=\\\"uploadList.isUploadCompleted() || uploadList.isUploadCancelled()\\\"\\n            mat-button\\n            color=\\\"primary\\\"\\n            (click)=\\\"close($event)\\\">\\n            {{ 'ADF_FILE_UPLOAD.BUTTON.CLOSE' | translate }}\\n        </button>\\n    </footer>\\n\\n    <footer\\n        class=\\\"upload-dialog__actions\\\"\\n        [class.upload-dialog--hide]=\\\"!isConfirmation\\\">\\n        <button\\n            color=\\\"secondary\\\"\\n            mat-button\\n            (click)=\\\"cancelAllUploads()\\\">\\n            {{ 'ADF_FILE_UPLOAD.CONFIRMATION.BUTTON.CANCEL' | translate }}\\n        </button>\\n\\n        <button\\n            mat-button\\n            color=\\\"primary\\\"\\n            (click)=\\\"toggleConfirmation()\\\">\\n            {{ 'ADF_FILE_UPLOAD.CONFIRMATION.BUTTON.CONTINUE' | translate }}\\n        </button>\\n    </footer>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./content-services/upload/components/file-uploading-dialog.component.html\n// module id = 250\n// module chunks = 2","\n        var result = require(\"!!../../../node_modules/raw-loader/index.js!../../../node_modules/sass-loader/lib/loader.js!./file-uploading-dialog.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./content-services/upload/components/file-uploading-dialog.component.scss\n// module id = 251\n// module chunks = 2","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./node_modules/sass-loader/lib/loader.js!./content-services/upload/components/file-uploading-dialog.component.scss\n// module id = 252\n// module chunks = 2","module.exports = \"<div [file-draggable]=\\\"isDroppable()\\\" id=\\\"UploadBorder\\\" class=\\\"upload-border\\\"\\n     (filesDropped)=\\\"onFilesDropped($event)\\\"\\n     (filesEntityDropped)=\\\"onFilesEntityDropped($event)\\\"\\n     (folderEntityDropped)=\\\"onFolderEntityDropped($event)\\\"\\n     (upload-files)=\\\"onUploadFiles($event)\\\"\\n     dropzone=\\\"\\\" webkitdropzone=\\\"*\\\" #droparea>\\n    <ng-content></ng-content>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./content-services/upload/components/upload-drag-area.component.html\n// module id = 253\n// module chunks = 2","\n        var result = require(\"!!../../../node_modules/css-loader/index.js!./upload-drag-area.component.css\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./content-services/upload/components/upload-drag-area.component.css\n// module id = 254\n// module chunks = 2","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".upload-border {\\n    vertical-align: middle;\\n    text-align: center;\\n}\\n\\n.file-draggable__input-focus {\\n    color: #2196F3;\\n    border: 1px dashed #2196F3;\\n}\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./content-services/upload/components/upload-drag-area.component.css\n// module id = 255\n// module chunks = 2","module.exports = \"<div class=\\\"adf-file-uploading-row\\\">\\n    <mat-icon\\n        mat-list-icon\\n        class=\\\"adf-file-uploading-row__type\\\">\\n        insert_drive_file\\n    </mat-icon>\\n\\n    <span\\n        class=\\\"adf-file-uploading-row__name\\\"\\n        title=\\\"{{ file.name }}\\\">\\n        {{ file.name }}\\n    </span>\\n\\n    <div\\n        *ngIf=\\\"file.status === FileUploadStatus.Progress || file.status === FileUploadStatus.Starting\\\"\\n        (click)=\\\"onCancel(file)\\\"\\n        class=\\\"adf-file-uploading-row__group adf-file-uploading-row__group--toggle\\\"\\n        title=\\\"{{ 'ADF_FILE_UPLOAD.BUTTON.CANCEL_FILE' | translate }}\\\">\\n        <span class=\\\"adf-file-uploading-row__status\\\">\\n            {{ file.progress.loaded | adfFileSize }} / {{ file.progress.total | adfFileSize }}\\n        </span>\\n\\n        <mat-icon\\n            mat-list-icon\\n            class=\\\"adf-file-uploading-row__action adf-file-uploading-row__action--cancel\\\">\\n            clear\\n        </mat-icon>\\n    </div>\\n\\n    <div\\n        *ngIf=\\\"file.status === FileUploadStatus.Complete\\\"\\n        (click)=\\\"onRemove(file)\\\"\\n        class=\\\"adf-file-uploading-row__group adf-file-uploading-row__group--toggle\\\"\\n        title=\\\"{{ 'ADF_FILE_UPLOAD.BUTTON.REMOVE_FILE' | translate }}\\\">\\n        <mat-icon\\n            mat-list-icon\\n            class=\\\"adf-file-uploading-row__status adf-file-uploading-row__status--done\\\">\\n            check_circle\\n        </mat-icon>\\n\\n        <mat-icon\\n            mat-list-icon\\n            class=\\\"adf-file-uploading-row__action adf-file-uploading-row__action--remove\\\">\\n            remove_circle\\n        </mat-icon>\\n    </div>\\n\\n    <div\\n        *ngIf=\\\"file.status === FileUploadStatus.Pending\\\"\\n        (click)=\\\"onCancel(file)\\\"\\n        class=\\\"adf-file-uploading-row__group adf-file-uploading-row__group--toggle\\\">\\n        <mat-icon\\n            mat-list-icon\\n            class=\\\"adf-file-uploading-row__status adf-file-uploading-row__status--pending\\\">\\n            schedule\\n        </mat-icon>\\n\\n        <mat-icon\\n            mat-list-icon\\n            class=\\\"adf-file-uploading-row__action adf-file-uploading-row__action--remove\\\">\\n            remove_circle\\n        </mat-icon>\\n    </div>\\n\\n    <div\\n        *ngIf=\\\"file.status === FileUploadStatus.Error\\\"\\n        class=\\\"adf-file-uploading-row__block adf-file-uploading-row__status--error\\\"\\n        title=\\\"{{ file.response }}\\\">\\n        <mat-icon mat-list-icon>\\n            report_problem\\n        </mat-icon>\\n    </div>\\n\\n    <div\\n        *ngIf=\\\"file.status === FileUploadStatus.Cancelled  ||\\n            file.status === FileUploadStatus.Aborted ||\\n            file.status === FileUploadStatus.Deleted\\\"\\n        class=\\\"adf-file-uploading-row__block adf-file-uploading-row__status--cancelled\\\">\\n        {{ 'ADF_FILE_UPLOAD.STATUS.FILE_CANCELED_STATUS' | translate }}\\n    </div>\\n<div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./content-services/upload/components/file-uploading-list-row.component.html\n// module id = 256\n// module chunks = 2","\n        var result = require(\"!!../../../node_modules/raw-loader/index.js!../../../node_modules/sass-loader/lib/loader.js!./file-uploading-list-row.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./content-services/upload/components/file-uploading-list-row.component.scss\n// module id = 257\n// module chunks = 2","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./node_modules/sass-loader/lib/loader.js!./content-services/upload/components/file-uploading-list-row.component.scss\n// module id = 258\n// module chunks = 2","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\n\nimport { CoreModule, TRANSLATION_PROVIDER } from 'ng2-alfresco-core';\nimport { MaterialModule } from '../material.module';\n\nimport { FileUploadingDialogComponent } from './components/file-uploading-dialog.component';\nimport { FileUploadingListRowComponent } from './components/file-uploading-list-row.component';\nimport { FileUploadingListComponent } from './components/file-uploading-list.component';\nimport { UploadButtonComponent } from './components/upload-button.component';\nimport { UploadDragAreaComponent } from './components/upload-drag-area.component';\n\nimport { FileDraggableDirective } from './directives/file-draggable.directive';\n\n@NgModule({\n    imports: [\n        CoreModule,\n        MaterialModule\n    ],\n    declarations: [\n        FileDraggableDirective,\n        UploadDragAreaComponent,\n        UploadButtonComponent,\n        FileUploadingDialogComponent,\n        FileUploadingListComponent,\n        FileUploadingListRowComponent\n    ],\n    providers: [\n        {\n            provide: TRANSLATION_PROVIDER,\n            multi: true,\n            useValue: {\n                name: 'ng2-alfresco-upload',\n                source: 'assets/ng2-alfresco-upload'\n            }\n        }\n    ],\n    exports: [\n        FileDraggableDirective,\n        UploadDragAreaComponent,\n        UploadButtonComponent,\n        FileUploadingDialogComponent,\n        FileUploadingListComponent,\n        FileUploadingListRowComponent\n    ]\n})\nexport class UploadModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/upload/upload-module.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, OnChanges, SimpleChanges, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { MatSelect } from '@angular/material';\nimport { PathElementEntity } from 'alfresco-js-api';\nimport { BreadcrumbComponent } from './breadcrumb.component';\n\n@Component({\n    selector: 'adf-dropdown-breadcrumb',\n    template: require('./dropdown-breadcrumb.component.html'),\n    styles: [require('./dropdown-breadcrumb.component.scss')],\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        'class': 'adf-dropdown-breadcrumb'\n    }\n})\nexport class DropdownBreadcrumbComponent extends BreadcrumbComponent implements OnChanges {\n\n    @ViewChild(MatSelect)\n    selectbox: MatSelect;\n\n    currentNode: PathElementEntity;\n    previousNodes: PathElementEntity[];\n\n    ngOnChanges(changes: SimpleChanges): void {\n        super.ngOnChanges(changes);\n        this.recalculateNodes();\n    }\n\n    /**\n     * Calculate the current and previous nodes from the route array\n     */\n    private recalculateNodes(): void {\n        this.currentNode = this.route[this.route.length - 1];\n        this.previousNodes = this.route.slice(0, this.route.length - 1).reverse();\n    }\n\n    /**\n     * Opens the selectbox overlay\n     */\n    open(): void {\n        if (this.selectbox) {\n            this.selectbox.open();\n        }\n    }\n\n    /**\n     * Return if route has more than one element (means: we are not in the root directory)\n     */\n    hasPreviousNodes(): boolean {\n        return this.previousNodes.length > 0;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/document-list/components/breadcrumb/dropdown-breadcrumb.component.ts","module.exports = \"<ng-container *ngIf=\\\"route.length > 0\\\">\\n\\n    <button\\n        tabindex=\\\"0\\\"\\n        class=\\\"adf-dropdown-breadcumb-trigger\\\"\\n        (click)=\\\"open()\\\"\\n        data-automation-id=\\\"dropdown-breadcrumb-trigger\\\">\\n        <mat-icon [class.isRoot]=\\\"!hasPreviousNodes()\\\">folder</mat-icon>\\n    </button>\\n    <mat-icon class=\\\"adf-dropddown-breadcrumb-item-chevron\\\">chevron_right</mat-icon>\\n\\n    <mat-select\\n        *ngIf=\\\"hasPreviousNodes()\\\"\\n        class=\\\"adf-dropdown-breadcrumb-path\\\"\\n        tabindex=\\\"0\\\"\\n        data-automation-id=\\\"dropdown-breadcrumb-path\\\" >\\n\\n        <mat-option\\n            *ngFor=\\\"let node of previousNodes;\\\"\\n            (click)=\\\"onRoutePathClick(node, $event)\\\"\\n            class=\\\"adf-dropdown-breadcrumb-path-option\\\"\\n            tabindex=\\\"0\\\"\\n            data-automation-class=\\\"dropdown-breadcrumb-path-option\\\">\\n            {{ node.name }}\\n        </mat-option>\\n    </mat-select>\\n\\n    <span\\n        class=\\\"adf-current-folder\\\"\\n        [class.isRoot]=\\\"!hasPreviousNodes()\\\"\\n        data-automation-id=\\\"current-folder\\\">{{ currentNode.name }}</span>\\n</ng-container>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./content-services/document-list/components/breadcrumb/dropdown-breadcrumb.component.html\n// module id = 261\n// module chunks = 2","\n        var result = require(\"!!../../../../node_modules/raw-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./dropdown-breadcrumb.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./content-services/document-list/components/breadcrumb/dropdown-breadcrumb.component.scss\n// module id = 262\n// module chunks = 2","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./node_modules/sass-loader/lib/loader.js!./content-services/document-list/components/breadcrumb/dropdown-breadcrumb.component.scss\n// module id = 263\n// module chunks = 2","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnChanges, ViewEncapsulation } from '@angular/core';\nimport { VersionsApi } from 'alfresco-js-api';\nimport { AlfrescoApiService } from 'ng2-alfresco-core';\n\n@Component({\n    selector: 'adf-version-list',\n    template: require('./version-list.component.html'),\n    styles: [require('./version-list.component.scss')],\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        'class': 'adf-version-list'\n    }\n})\nexport class VersionListComponent implements OnChanges {\n\n    private versionsApi: VersionsApi;\n    versions: any = [];\n    isLoading: boolean = true;\n\n    @Input()\n    id: string;\n\n    constructor(private alfrescoApi: AlfrescoApiService) {\n        this.versionsApi = this.alfrescoApi.versionsApi;\n    }\n\n    ngOnChanges() {\n        this.loadVersionHistory();\n    }\n\n    restore(versionId) {\n        this.versionsApi\n            .revertVersion(this.id, versionId, { majorVersion: true, comment: ''})\n            .then(this.loadVersionHistory.bind(this));\n    }\n\n    private loadVersionHistory() {\n        this.isLoading = true;\n        this.versionsApi.listVersionHistory(this.id).then((data) => {\n            this.versions = data.list.entries;\n            this.isLoading = false;\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/document-list/components/version-manager/version-list.component.ts","module.exports = \"<mat-list class=\\\"adf-version-list\\\" *ngIf=\\\"!isLoading; else loading_template\\\">\\n    <mat-list-item *ngFor=\\\"let version of versions\\\">\\n        <mat-icon mat-list-icon>insert_drive_file</mat-icon>\\n        <h4 mat-line class=\\\"adf-version-list-item-name\\\">{{version.entry.name}}</h4>\\n        <p mat-line>\\n            <span class=\\\"adf-version-list-item-version\\\">{{version.entry.id}}</span> -\\n            <span class=\\\"adf-version-list-item-date\\\">{{version.entry.modifiedAt | date}}</span>\\n        </p>\\n        <p mat-line class=\\\"adf-version-list-item-comment\\\">{{version.entry.versionComment}}</p>\\n\\n        <mat-menu #versionMenu=\\\"matMenu\\\" yPosition=\\\"below\\\" xPosition=\\\"before\\\">\\n            <button mat-menu-item (click)=\\\"restore(version.entry.id)\\\"> Restore </button>\\n        </mat-menu>\\n\\n        <button mat-icon-button [matMenuTriggerFor]=\\\"versionMenu\\\">\\n            <mat-icon>more_vert</mat-icon>\\n        </button>\\n    </mat-list-item>\\n</mat-list>\\n\\n<ng-template #loading_template>\\n    <mat-progress-bar data-automation-id=\\\"version-history-loading-bar\\\" mode=\\\"indeterminate\\\" color=\\\"accent\\\"></mat-progress-bar>\\n</ng-template>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./content-services/document-list/components/version-manager/version-list.component.html\n// module id = 265\n// module chunks = 2","\n        var result = require(\"!!../../../../node_modules/raw-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./version-list.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./content-services/document-list/components/version-manager/version-list.component.scss\n// module id = 266\n// module chunks = 2","module.exports = \".adf-version-list .mat-list-item {\\n  border-bottom: 1px solid #d8d8d8; }\\n\\n.adf-version-list-item-version {\\n  font-weight: bold; }\\n\\n.adf-version-list-item-date {\\n  opacity: 0.6; }\\n\\n.adf-version-list-item-comment {\\n  opacity: 0.5; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./node_modules/sass-loader/lib/loader.js!./content-services/document-list/components/version-manager/version-list.component.scss\n// module id = 267\n// module chunks = 2","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\n\n@Component({\n    selector: 'adf-version-manager',\n    template: require('./version-manager.component.html'),\n    styles: [require('./version-manager.component.scss')],\n    encapsulation: ViewEncapsulation.None\n})\nexport class VersionManagerComponent {\n\n    @Input()\n    node: MinimalNodeEntryEntity;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/document-list/components/version-manager/version-manager.component.ts","module.exports = \"<div class=\\\"adf-new-version-uploader-container\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\">\\n    <adf-version-upload [node]=\\\"node\\\"></adf-version-upload>\\n</div>\\n<div class=\\\"adf-version-list-container\\\">\\n    <adf-version-list [id]=\\\"node.id\\\"></adf-version-list>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./content-services/document-list/components/version-manager/version-manager.component.html\n// module id = 269\n// module chunks = 2","\n        var result = require(\"!!../../../../node_modules/raw-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./version-manager.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./content-services/document-list/components/version-manager/version-manager.component.scss\n// module id = 270\n// module chunks = 2","module.exports = \".adf-button.upload-new-version {\\n  box-shadow: none; }\\n\\n.adf-new-version-uploader-container {\\n  border-bottom: 1px solid #d8d8d8;\\n  padding: 16px 0; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./node_modules/sass-loader/lib/loader.js!./content-services/document-list/components/version-manager/version-manager.component.scss\n// module id = 271\n// module chunks = 2","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\n\n@Component({\n    selector: 'adf-version-upload',\n    template: require('./version-upload.component.html'),\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        'class': 'adf-version-upload'\n    }\n})\nexport class VersionUploadComponent {\n\n    @Input()\n    node: MinimalNodeEntryEntity;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/document-list/components/version-manager/version-upload.component.ts","module.exports = \"<adf-upload-button\\n    data-automation-id=\\\"adf-new-version-file-upload\\\"\\n    class=\\\"adf-new-version-file-upload\\\"\\n    staticTitle=\\\"Upload new version\\\"\\n    [rootFolderId]=\\\"node.parentId\\\"\\n    tooltip=\\\"Restriction: upload file with the same name to create a new version of it\\\"\\n    [versioning]=\\\"true\\\">\\n</adf-upload-button>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./content-services/document-list/components/version-manager/version-upload.component.html\n// module id = 273\n// module chunks = 2","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { NodePaging } from 'alfresco-js-api';\nimport { SearchOptions, SearchService } from 'ng2-alfresco-core';\nimport { Observable } from 'rxjs/Rx';\n\n/**\n * Internal service used by ContentNodeSelector component.\n */\n@Injectable()\nexport class ContentNodeSelectorService {\n\n    constructor(private searchService: SearchService) {}\n\n    /**\n     * Performs a search for content node selection\n     *\n     * @param searchTerm    The term to search for\n     * @param skipCount     From where to start the loading\n     * @param rootNodeId    The root is to start the search from\n     * @param maxItems      How many items to load\n     */\n    public search(searchTerm: string, rootNodeId: string, skipCount: number, maxItems: number): Observable<NodePaging> {\n\n        searchTerm = searchTerm + '*';\n\n        let searchOpts: SearchOptions = {\n            include: ['path', 'allowableOperations'],\n            skipCount,\n            rootNodeId,\n            nodeType: 'cm:folder',\n            maxItems,\n            orderBy: null\n        };\n\n        return this.searchService.getNodeQueryResults(searchTerm, searchOpts);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./content-services/document-list/components/content-node-selector/content-node-selector.service.ts"],"sourceRoot":""}
