{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 4918c403d90e07ea407d","webpack:///external \"@angular/core\"","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///external \"rxjs/Rx\"","webpack:///external \"@angular/material\"","webpack:///external \"ng2-alfresco-core\"","webpack:///external \"@angular/common\"","webpack:///./contents-service/services/rating.service.ts","webpack:///external \"ng2-alfresco-datatable\"","webpack:///./contents-service/material.module.ts","webpack:///./contents-service/services/tag.service.ts","webpack:///./contents-service/document-list/components/document-list.component.ts","webpack:///./contents-service/document-list/models/content-action.model.ts","webpack:///./contents-service/document-list/models/permissions.model.ts","webpack:///./contents-service/social/rating.component.ts","webpack:///./contents-service/social/like.component.ts","webpack:///./contents-service/tag/tag-actions.component.ts","webpack:///./contents-service/tag/tag-list.component.ts","webpack:///./contents-service/tag/tag-node-list.component.ts","webpack:///./contents-service/webscript/webscript.component.ts","webpack:///./contents-service/document-list/data/share-datatable-adapter.ts","webpack:///./contents-service/document-list/data/share-data-row.model.ts","webpack:///./contents-service/document-list/components/node.event.ts","webpack:///./contents-service/document-list/services/document-actions.service.ts","webpack:///./contents-service/document-list/services/folder-actions.service.ts","webpack:///./contents-service/document-list/components/content-action/content-action-list.component.ts","webpack:///./contents-service/document-list/components/content-node-selector/content-node-selector.component.ts","webpack:///./contents-service/document-list/services/document-list.service.ts","webpack:///./contents-service/index.ts","webpack:///./contents-service/social/index.ts","webpack:///./contents-service/social/public-api.ts","webpack:///./contents-service/social/rating.component.scss?5101","webpack:///./contents-service/social/rating.component.scss","webpack:///./contents-service/social/rating.component.html","webpack:///./contents-service/social/like.component.scss?002d","webpack:///./contents-service/social/like.component.scss","webpack:///./contents-service/social/like.component.html","webpack:///./contents-service/social/social-module.ts","webpack:///./contents-service/tag/index.ts","webpack:///./contents-service/tag/public-api.ts","webpack:///./contents-service/tag/tag-actions.component.html","webpack:///./contents-service/tag/tag-actions.component.scss?5f83","webpack:///./contents-service/tag/tag-actions.component.scss","webpack:///./contents-service/tag/tag-list.component.html","webpack:///./contents-service/tag/tag-list.component.scss?370b","webpack:///./contents-service/tag/tag-list.component.scss","webpack:///./contents-service/tag/tag-node-list.component.html","webpack:///./contents-service/tag/tag-node-list.component.scss?9d90","webpack:///./contents-service/tag/tag-node-list.component.scss","webpack:///./contents-service/tag/tag-module.ts","webpack:///./contents-service/webscript/index.ts","webpack:///./contents-service/webscript/public-api.ts","webpack:///./contents-service/webscript/webscript.component.html","webpack:///./contents-service/webscript/webscript-module.ts","webpack:///./contents-service/services/index.ts","webpack:///./contents-service/services/public-api.ts","webpack:///./contents-service/document-list/index.ts","webpack:///./contents-service/document-list/public-api.ts","webpack:///./contents-service/document-list/models/preset.model.ts","webpack:///./contents-service/document-list/assets/images/empty_doc_lib.svg","webpack:///./contents-service/document-list/components/document-list.component.scss?0b87","webpack:///./contents-service/document-list/components/document-list.component.scss","webpack:///./contents-service/document-list/components/document-list.component.html","webpack:///./contents-service/document-list/components/content-column/content-column.component.ts","webpack:///./contents-service/document-list/components/content-column/content-column-list.component.ts","webpack:///./contents-service/document-list/components/content-action/content-action.component.ts","webpack:///external \"rxjs/Observable\"","webpack:///./contents-service/document-list/components/content-node-selector/content-node-selector.component.scss?4f1d","webpack:///./contents-service/document-list/components/content-node-selector/content-node-selector.component.scss","webpack:///./contents-service/document-list/components/content-node-selector/content-node-selector.component.html","webpack:///./contents-service/document-list/components/empty-folder/empty-folder-content.directive.ts","webpack:///./contents-service/document-list/components/no-permission/no-permission-content.directive.ts","webpack:///./contents-service/document-list/components/breadcrumb/breadcrumb.component.ts","webpack:///./contents-service/document-list/components/breadcrumb/breadcrumb.component.html","webpack:///./contents-service/document-list/components/breadcrumb/breadcrumb.component.scss?78b2","webpack:///./contents-service/document-list/components/breadcrumb/breadcrumb.component.scss","webpack:///./contents-service/document-list/components/site-dropdown/sites-dropdown.component.ts","webpack:///./contents-service/document-list/components/site-dropdown/sites-dropdown.component.scss?0c79","webpack:///./contents-service/document-list/components/site-dropdown/sites-dropdown.component.scss","webpack:///./contents-service/document-list/components/site-dropdown/sites-dropdown.component.html","webpack:///./contents-service/document-list/services/node-actions.service.ts","webpack:///./contents-service/document-list/models/document-library.model.ts","webpack:///./contents-service/document-list/models/permissions-style.model.ts"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_0__","__WEBPACK_EXTERNAL_MODULE_2__","__WEBPACK_EXTERNAL_MODULE_3__","__WEBPACK_EXTERNAL_MODULE_4__","__WEBPACK_EXTERNAL_MODULE_8__","__WEBPACK_EXTERNAL_MODULE_17__","__WEBPACK_EXTERNAL_MODULE_152__","__webpack_require__","moduleId","installedModules","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","decorators","target","key","desc","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","paramIndex","decorator","setPrototypeOf","Array","assign","__WEBPACK_IMPORTED_MODULE_2_rxjs_Rx__","RatingService","[object Object]","apiService","nodeId","ratingType","fromPromise","getInstance","core","ratingsApi","getRating","map","res","catch","handleError","vote","ratingBody","id","myRating","rate","removeRating","error","console","throw","__WEBPACK_IMPORTED_MODULE_0_tslib__","__WEBPACK_IMPORTED_MODULE_1__angular_core__","material_1","MatIconModule","MatListModule","MatButtonModule","MatInputModule","MatChipsModule","MatDialogModule","MatRippleModule","core_1","MaterialModule","__decorate","NgModule","imports","TagService","logService","refresh","tagsApi","getNodeTags","err","getTags","tagName","tagBody","TagBody","tag","promiseAdd","addTag","subscribe","data","emit","promiseRemove","removeTag","PaginationStrategy","__WEBPACK_IMPORTED_MODULE_8__node_event__","DocumentListComponent","DocumentListComponent_1","documentListService","ngZone","elementRef","appConfig","preferences","permissionsStyle","locationFormat","navigate","navigationMode","DOUBLE_CLICK_NAVIGATION","thumbnails","selectionMode","multiselect","enablePagination","contentActions","contentActionsPosition","contextMenuActions","pageSize","DEFAULT_PAGE_SIZE","emptyFolderImageUrl","allowDropFiles","loading","paginationStrategy","Finite","infiniteLoading","noPermission","selection","skipCount","rowFilter","imageResolver","currentFolderId","folderNode","node","nodeClick","nodeDblClick","folderChange","preview","ready","actions","contextActionHandler","__WEBPACK_IMPORTED_MODULE_4_rxjs_Rx__","layoutPresets","currentNodeAllowableOperations","CREATE_PERMISSION","defaultPageSizes","supportedPageSizes","entry","getNodeActions","a","model","subject","action","executeContentAction","hasCustomLayout","columnList","columns","result","paginationSize","pageSizes","indexOf","getDefaultPageSize","loadLayoutPresets","__WEBPACK_IMPORTED_MODULE_6__data_share_datatable_adapter__","getDefaultSorting","setFilter","setImageResolver","val","contextActionCallback","enforceSingleClickNavigationForMobile","schema","setColumns","getColumns","setupDefaultColumns","changes","currentValue","loadFolder","previousValue","resetPagination","loadFolderByNodeId","resetSelection","loadPage","loadFolderNodesByFolderNodeId","merge","run","dataTable","emptyFolderTemplate","noPermissionTemplate","test","navigator","userAgent","getRows","isEmpty","isFile","isFolder","ltarget","toLowerCase","actionsByTarget","filter","__WEBPACK_IMPORTED_MODULE_7__models_content_action_model__","forEach","checkPermission","permission","hasPermissions","allowableOperations","find","disableWithNoPermission","disabled","e","preventDefault","canNavigateFolder","handlerSub","handler","of","execute","loadTrashcan","loadSharedLinks","loadSites","loadMemberSites","loadFavorites","loadRecent","getFolderNode","then","JSON","parse","message","statusCode","maxItems","Promise","resolve","reject","getFolder","rootFolderId","isCurrentPageEmpty","updateSkipCount","pagination","list","options","include","nodesApi","getDeletedNodes","page","onPageLoaded","sharedLinksApi","findSharedLinks","sitesApi","getSites","peopleApi","getSiteMembership","entries","site","where","favoritesApi","getFavorites","file","folder","properties","cm:title","title","cm:description","description","getPerson","person","username","query","language","filterQueries","sort","type","field","ascending","paging","searchApi","search","hasNodeEntries","hasPages","isPaginationEnabled","preset","getLayoutPreset","domEvent","CustomEvent","detail","sender","bubbles","nativeElement","dispatchEvent","event","defaultPrevented","SINGLE_CLICK_NAVIGATION","onPreviewFile","performNavigation","row","args","value","getContextActions","reload","isMobile","defaultSorting","sorting","direction","__WEBPACK_IMPORTED_MODULE_3_ng2_alfresco_datatable__","isCustomSource","folderId","newSkipCount","hasPermission","element","hasCurrentNodePermission","externalSettings","__WEBPACK_IMPORTED_MODULE_5__models_preset_model__","col","__WEBPACK_IMPORTED_MODULE_2_ng2_alfresco_core__","selector","styles","template","encapsulation","None","__webpack_exports__","ContentActionModel","obj","icon","DocumentActionModel","json","super","FolderActionModel","PermissionModel","__WEBPACK_IMPORTED_MODULE_2__services_rating_service__","RatingComponent","ratingService","average","changeVote","stars","ratingObserver","aggregate","calculateStars","push","fill","postRating","providers","LikeComponent","likesCounter","isLike","clean","numberOfRatings","ratedAt","deleteRating","ng2_alfresco_core_1","tag_service_1","TagActionsComponent","tagService","translateService","_this","successAdd","EventEmitter","disableAddTag","refreshTag","ngOnChanges","getTagsByNodeId","tagsEntries","searchTag","newTagName","errorMsg","searchTagName","currentTag","cleanErrorMsg","Input","Output","_a","_b","Component","ViewEncapsulation","_c","_d","AlfrescoTranslationService","TagListComponent","getAllTheTags","TagNodeListComponent","results","__WEBPACK_IMPORTED_MODULE_2_ng2_alfresco_datatable__","WebscriptComponent","showData","contextRoot","servicePath","contentType","success","undefined","showError","webScript","executeWebScript","scriptPath","scriptArgs","webScriptdata","showDataAsDataTable","log","generateSchema","__WEBPACK_IMPORTED_MODULE_3__share_data_row_model__","ShareDataTableAdapter","ERR_ROW_NOT_FOUND","ERR_COL_NOT_FOUND","rows","Error","dataRow","getValue","cache","formatDate","cacheValue","format","resolved","getMimeTypeIcon","getDocumentThumbnailUrl","content","mimeType","getDefaultMimeTypeIcon","__WEBPACK_IMPORTED_MODULE_1_ng2_alfresco_core__","transform","__WEBPACK_IMPORTED_MODULE_0__angular_common__","sortRows","setSorting","resolver","includes","numeric","b","left","Date","valueOf","toString","right","localeCompare","item","getSorting","sortable","concat","ShareDataRow","isSelected","cssClass","ERR_OBJECT_NOT_FOUND","isDropTarget","isFolderAndHasPermissionToUpload","getPermissionClass","nodeEntity","permissionsClasses","currentPermissionsStyle","applyPermissionStyleToFolder","applyPermissionStyleToFile","css","ObjectUtils","hasValue","NodeEntityEvent","_super","entity","__extends","BaseEvent","NodeEntryEvent","__WEBPACK_IMPORTED_MODULE_4__models_permissions_model__","DocumentActionsService","nodeActionsService","contentService","permissionEvent","__WEBPACK_IMPORTED_MODULE_3_rxjs_Rx__","handlers","setupActionHandlers","lkey","download","bind","copyNode","moveNode","deleteNode","canExecuteAction","link","document","createElement","body","appendChild","setAttribute","href","getContentUrl","click","removeChild","__WEBPACK_IMPORTED_MODULE_2_rxjs_Observable__","actionObservable","copyContent","prepareHandlers","moveContent","fileOperationMessage","next","handlerObservable","__WEBPACK_IMPORTED_MODULE_3__models_permissions_model__","FolderActionsService","copyFolder","moveFolder","ContentActionListComponent","documentList","__WEBPACK_IMPORTED_MODULE_4__document_list_component__","ContentNodeSelectorComponent","contentNodeSelectorService","containingDialog","nodes","searchTerm","showingSearchResults","loadingSearchResults","inDialog","chosenNode","folderIdToShow","select","Infinite","chosenSite","siteId","guid","updateResults","whenInFolderNavigation","whenInSelectingSearchResult","breadcrumbFolderNode","startNewSearch","querySearch","isSearchTermLongEnough","showSearchResults","highlight","setTimeout","highlighter","attemptNodeSelection","resetChosenNode","close","__WEBPACK_IMPORTED_MODULE_3_ng2_alfresco_core__","__WEBPACK_IMPORTED_MODULE_2__angular_material__","DocumentListService","DocumentListService_1","authService","thumbnailService","opts","rootNodeId","ROOT_ID","params","includeSource","relativePath","getNodeChildren","targetParentId","parentId","createFolder","getNodesPromise","getNodeInfo","__WEBPACK_IMPORT_KEY__","__WEBPACK_IMPORTED_MODULE_4__document_list__","__WEBPACK_IMPORTED_MODULE_0__public_api__","__WEBPACK_IMPORTED_MODULE_2__social_module__","__WEBPACK_IMPORTED_MODULE_6__rating_component__","SocialModule","__WEBPACK_IMPORTED_MODULE_3__material_module__","__WEBPACK_IMPORTED_MODULE_5__like_component__","declarations","__WEBPACK_IMPORTED_MODULE_4__services_rating_service__","__export","__WEBPACK_IMPORTED_MODULE_7__tag_node_list_component__","TagModule","__WEBPACK_IMPORTED_MODULE_5__tag_actions_component__","__WEBPACK_IMPORTED_MODULE_6__tag_list_component__","__WEBPACK_IMPORTED_MODULE_4__services_tag_service__","provide","multi","useValue","source","__WEBPACK_IMPORTED_MODULE_5__webscript_component__","WebScriptModule","__WEBPACK_IMPORTED_MODULE_4__material_module__","__WEBPACK_IMPORTED_MODULE_1__tag_service__","presetsDefaultModel","-trashcan-","srTitle","-sites-","-mysites-","-favorites-","-recent-","-sharedlinks-","default","ContentColumnComponent","register","registerColumn","ContentColumnListComponent","column","document_actions_service_1","folder_actions_service_1","content_action_model_1","content_action_list_component_1","ContentActionComponent","documentActions","folderActions","ngOnInit","getSystemHandler","registerAction","permision","errors","getHandler","EmptyFolderContentDirective","noContentTemplate","document_list_component_1","NoPermissionContentDirective","ngAfterContentInit","ContentChild","TemplateRef","Directive","BreadcrumbComponent","rootId","route","hasRoot","parseRoute","path","elements","slice","rootPos","getElementPosition","splice","findIndex","el","host","class","DropdownSitesComponent","sitesService","hideMyFiles","change","MY_FILES_VALUE","siteList","siteFound","siteSelected","Rx_1","content_node_selector_component_1","document_list_service_1","NodeActionsService","dialog","contentEntry","doFileOperation","observable","Subject","open","panelClass","width","selections","toUpperCase","closeAll","stringify","currentNodeId","Injectable","MatDialog","AlfrescoContentService","NodePaging","NodePagingList","NodeMinimalEntry","Pagination","NodeMinimal","UserInfo","ContentInfo","PathInfoEntity","PathElementEntity","PermissionStyleModel"],"mappings":"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","file":"contents-service/bundles/contents-service.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@angular/core\"), require(\"rxjs/Rx\"), require(\"@angular/material\"), require(\"ng2-alfresco-core\"), require(\"@angular/common\"), require(\"ng2-alfresco-datatable\"), require(\"rxjs/Observable\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@angular/core\", \"rxjs/Rx\", \"@angular/material\", \"ng2-alfresco-core\", \"@angular/common\", \"ng2-alfresco-datatable\", \"rxjs/Observable\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"contents-service\"] = factory(require(\"@angular/core\"), require(\"rxjs/Rx\"), require(\"@angular/material\"), require(\"ng2-alfresco-core\"), require(\"@angular/common\"), require(\"ng2-alfresco-datatable\"), require(\"rxjs/Observable\"));\n\telse\n\t\troot[\"contents-service\"] = factory(root[\"@angular/core\"], root[\"rxjs/Rx\"], root[\"@angular/material\"], root[\"ng2-alfresco-core\"], root[\"@angular/common\"], root[\"ng2-alfresco-datatable\"], root[\"rxjs/Observable\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_8__, __WEBPACK_EXTERNAL_MODULE_17__, __WEBPACK_EXTERNAL_MODULE_152__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 114);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4918c403d90e07ea407d","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/core\"\n// module id = 0\n// module chunks = 0 1","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslib/tslib.es6.js\n// module id = 1\n// module chunks = 0 1","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"rxjs/Rx\"\n// module id = 2\n// module chunks = 0 1","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/material\"\n// module id = 3\n// module chunks = 0 1","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ng2-alfresco-core\"\n// module id = 4\n// module chunks = 1","module.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/common\"\n// module id = 8\n// module chunks = 0 1","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Response } from '@angular/http';\nimport { RatingBody } from 'alfresco-js-api';\nimport { AlfrescoApiService } from 'ng2-alfresco-core';\nimport { Observable } from 'rxjs/Rx';\n\n@Injectable()\nexport class RatingService {\n\n    constructor(private apiService: AlfrescoApiService) {\n    }\n\n    getRating(nodeId: string, ratingType: any): any {\n        return Observable.fromPromise(this.apiService.getInstance().core.ratingsApi.getRating(nodeId, ratingType))\n            .map(res => res)\n            .catch(this.handleError);\n    }\n\n    postRating(nodeId: string, ratingType: any, vote: any): any {\n        let ratingBody: RatingBody = {\n            'id': ratingType,\n            'myRating': vote\n        };\n        return Observable.fromPromise(this.apiService.getInstance().core.ratingsApi.rate(nodeId, ratingBody))\n            .map(res => res)\n            .catch(this.handleError);\n    }\n\n    deleteRating(nodeId: string, ratingType: any): any {\n        return Observable.fromPromise(this.apiService.getInstance().core.ratingsApi.removeRating(nodeId, ratingType))\n            .map(res => res)\n            .catch(this.handleError);\n    }\n\n    private handleError(error: Response): any {\n        console.error(error);\n        return Observable.throw(error || 'Server error');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./contents-service/services/rating.service.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_17__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ng2-alfresco-datatable\"\n// module id = 17\n// module chunks = 1","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport {\n    MatButtonModule,\n    MatChipsModule,\n    MatDialogModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatRippleModule\n} from '@angular/material';\n\nexport function modules() {\n    return [\n        MatIconModule,\n        MatListModule,\n        MatButtonModule,\n        MatInputModule,\n        MatChipsModule,\n        MatDialogModule,\n        MatRippleModule\n    ];\n}\n\n@NgModule({\n    imports: modules(),\n    exports: modules()\n})\nexport class MaterialModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./contents-service/material.module.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EventEmitter, Injectable, Output } from '@angular/core';\nimport { AlfrescoApiService, LogService } from 'ng2-alfresco-core';\nimport { Observable } from 'rxjs/Rx';\n\n/**\n * @returns {TagService}\n */\n@Injectable()\nexport class TagService {\n\n    @Output()\n    refresh = new EventEmitter();\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    getTagsByNodeId(nodeId: string): any {\n        return Observable.fromPromise(this.apiService.getInstance().core.tagsApi.getNodeTags(nodeId))\n            .catch(err => this.handleError(err));\n    }\n\n    getAllTheTags() {\n        return Observable.fromPromise(this.apiService.getInstance().core.tagsApi.getTags())\n            .catch(err => this.handleError(err));\n    }\n\n    addTag(nodeId: string, tagName: string): any {\n        let alfrescoApi: any = this.apiService.getInstance();\n        let tagBody = new alfrescoApi.core.TagBody();\n        tagBody.tag = tagName;\n\n        let promiseAdd = Observable.fromPromise(this.apiService.getInstance().core.tagsApi.addTag(nodeId, tagBody));\n\n        promiseAdd.subscribe((data) => {\n            this.refresh.emit(data);\n        }, (err) => {\n            this.handleError(err);\n        });\n\n        return promiseAdd;\n    }\n\n    removeTag(nodeId: string, tag: string): any {\n        let promiseRemove = Observable.fromPromise(this.apiService.getInstance().core.tagsApi.removeTag(nodeId, tag));\n\n        promiseRemove.subscribe((data) => {\n            this.refresh.emit(data);\n        }, (err) => {\n            this.handleError(err);\n        });\n\n        return promiseRemove;\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return Observable.throw(error || 'Server error');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./contents-service/services/tag.service.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    AfterContentInit, Component, ContentChild, ElementRef, EventEmitter, HostListener, Input, NgZone,\n    OnChanges, OnInit, Output, SimpleChanges, TemplateRef, ViewChild, ViewEncapsulation\n} from '@angular/core';\nimport { DeletedNodesPaging, MinimalNodeEntity, MinimalNodeEntryEntity, NodePaging, Pagination, PersonEntry, SitePaging } from 'alfresco-js-api';\nimport { AlfrescoApiService, AppConfigService, DataColumnListComponent, UserPreferencesService } from 'ng2-alfresco-core';\nimport { DataCellEvent, DataColumn, DataRowActionEvent, DataSorting, DataTableComponent, ObjectDataColumn } from 'ng2-alfresco-datatable';\nimport { Observable, Subject } from 'rxjs/Rx';\nimport { presetsDefaultModel } from '../models/preset.model';\nimport { ImageResolver } from './../data/image-resolver.model';\nimport { RowFilter } from './../data/row-filter.model';\nimport { ShareDataRow } from './../data/share-data-row.model';\nimport { ShareDataTableAdapter } from './../data/share-datatable-adapter';\n\nimport { ContentActionModel } from './../models/content-action.model';\nimport { PermissionStyleModel } from './../models/permissions-style.model';\nimport { DocumentListService } from './../services/document-list.service';\nimport { NodeEntityEvent, NodeEntryEvent } from './node.event';\n\ndeclare var require: any;\n\nexport enum PaginationStrategy {\n    Finite,\n    Infinite\n}\n\n@Component({\n    selector: 'adf-document-list',\n    styles: [require('./document-list.component.scss')],\n    template: require('./document-list.component.html'),\n    encapsulation: ViewEncapsulation.None\n})\nexport class DocumentListComponent implements OnInit, OnChanges, AfterContentInit {\n\n    static SINGLE_CLICK_NAVIGATION: string = 'click';\n    static DOUBLE_CLICK_NAVIGATION: string = 'dblclick';\n    static DEFAULT_PAGE_SIZE: number = 20;\n\n    @ContentChild(DataColumnListComponent) columnList: DataColumnListComponent;\n\n    @Input()\n    permissionsStyle: PermissionStyleModel[] = [];\n\n    @Input()\n    locationFormat: string = '/';\n\n    @Input()\n    navigate: boolean = true;\n\n    @Input()\n    navigationMode: string = DocumentListComponent.DOUBLE_CLICK_NAVIGATION; // click|dblclick\n\n    @Input()\n    thumbnails: boolean = false;\n\n    @Input()\n    selectionMode: string = 'single'; // null|single|multiple\n\n    @Input()\n    multiselect: boolean = false;\n\n    @Input()\n    enablePagination: boolean = true;\n\n    @Input()\n    contentActions: boolean = false;\n\n    @Input()\n    contentActionsPosition: string = 'right'; // left|right\n\n    @Input()\n    contextMenuActions: boolean = false;\n\n    @Input()\n    pageSize: number = DocumentListComponent.DEFAULT_PAGE_SIZE;\n\n    @Input()\n    emptyFolderImageUrl: string = require('../assets/images/empty_doc_lib.svg');\n\n    @Input()\n    allowDropFiles: boolean = false;\n\n    @Input()\n    sorting: string[];\n\n    @Input()\n    rowStyle: string;\n\n    @Input()\n    rowStyleClass: string;\n\n    @Input()\n    loading: boolean = false;\n\n    @Input()\n    paginationStrategy: PaginationStrategy = PaginationStrategy.Finite;\n\n    @Input()\n    supportedPageSizes: number[];\n\n    infiniteLoading: boolean = false;\n    noPermission: boolean = false;\n\n    selection = new Array<MinimalNodeEntity>();\n    skipCount: number = 0;\n    pagination: Pagination;\n\n    @Input()\n    rowFilter: RowFilter|null = null;\n\n    @Input()\n    imageResolver: ImageResolver|null = null;\n\n    // The identifier of a node. You can also use one of these well-known aliases: -my- | -shared- | -root-\n    @Input()\n    currentFolderId: string = null;\n\n    @Input()\n    folderNode: MinimalNodeEntryEntity = null;\n\n    @Input()\n    node: NodePaging = null;\n\n    @Output()\n    nodeClick: EventEmitter<NodeEntityEvent> = new EventEmitter<NodeEntityEvent>();\n\n    @Output()\n    nodeDblClick: EventEmitter<NodeEntityEvent> = new EventEmitter<NodeEntityEvent>();\n\n    @Output()\n    folderChange: EventEmitter<NodeEntryEvent> = new EventEmitter<NodeEntryEvent>();\n\n    @Output()\n    preview: EventEmitter<NodeEntityEvent> = new EventEmitter<NodeEntityEvent>();\n\n    @Output()\n    ready: EventEmitter<any> = new EventEmitter();\n\n    @Output()\n    error: EventEmitter<any> = new EventEmitter();\n\n    @ViewChild(DataTableComponent)\n    dataTable: DataTableComponent;\n\n    errorMessage;\n    actions: ContentActionModel[] = [];\n    emptyFolderTemplate: TemplateRef<any>;\n    noPermissionTemplate: TemplateRef<any>;\n    contextActionHandler: Subject<any> = new Subject();\n    data: ShareDataTableAdapter;\n\n    private layoutPresets = {};\n    private currentNodeAllowableOperations: string[] = [];\n    private CREATE_PERMISSION = 'create';\n    private defaultPageSizes = [5, 10, 15, 20];\n\n    constructor(private documentListService: DocumentListService,\n                private ngZone: NgZone,\n                private elementRef: ElementRef,\n                private apiService: AlfrescoApiService,\n                private appConfig: AppConfigService,\n                private preferences: UserPreferencesService) {\n        this.supportedPageSizes = appConfig.get('document-list.supportedPageSizes', this.defaultPageSizes);\n    }\n\n    getContextActions(node: MinimalNodeEntity) {\n        if (node && node.entry) {\n            let actions = this.getNodeActions(node);\n            if (actions && actions.length > 0) {\n                return actions.map(a => {\n                    return {\n                        model: a,\n                        node: node,\n                        subject: this.contextActionHandler\n                    };\n                });\n            }\n        }\n        return null;\n    }\n\n    contextActionCallback(action) {\n        if (action) {\n            this.executeContentAction(action.node, action.model);\n        }\n    }\n\n    get hasCustomLayout(): boolean {\n        return this.columnList && this.columnList.columns && this.columnList.columns.length > 0;\n    }\n\n    getDefaultPageSize(): number {\n        let result = this.preferences.paginationSize;\n\n        const pageSizes = this.supportedPageSizes || this.defaultPageSizes;\n        if (pageSizes && pageSizes.length > 0 && pageSizes.indexOf(result) < 0) {\n            result = pageSizes[0];\n        }\n\n        return result;\n    }\n\n    ngOnInit() {\n        this.pageSize = this.getDefaultPageSize();\n        this.loadLayoutPresets();\n        this.data = new ShareDataTableAdapter(this.documentListService, null, this.getDefaultSorting());\n        this.data.thumbnails = this.thumbnails;\n        this.data.permissionsStyle = this.permissionsStyle;\n\n        if (this.rowFilter) {\n            this.data.setFilter(this.rowFilter);\n        }\n\n        if (this.imageResolver) {\n            this.data.setImageResolver(this.imageResolver);\n        }\n\n        this.contextActionHandler.subscribe(val => this.contextActionCallback(val));\n\n        this.enforceSingleClickNavigationForMobile();\n    }\n\n    ngAfterContentInit() {\n        let schema: DataColumn[] = [];\n\n        if (this.hasCustomLayout) {\n            schema = this.columnList.columns.map(c => <DataColumn> c);\n        }\n\n        if (!this.data) {\n            this.data = new ShareDataTableAdapter(this.documentListService, schema, this.getDefaultSorting());\n        } else if (schema && schema.length > 0) {\n            this.data.setColumns(schema);\n        }\n\n        let columns = this.data.getColumns();\n        if (!columns || columns.length === 0) {\n            this.setupDefaultColumns(this.currentFolderId);\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.folderNode && changes.folderNode.currentValue) {\n            this.loadFolder();\n        } else if (changes.currentFolderId && changes.currentFolderId.currentValue) {\n            if (changes.currentFolderId.previousValue !== changes.currentFolderId.currentValue) {\n                this.resetPagination();\n                this.folderNode = null;\n            }\n            if (!this.hasCustomLayout) {\n                this.setupDefaultColumns(changes.currentFolderId.currentValue);\n            }\n            this.loadFolderByNodeId(changes.currentFolderId.currentValue);\n        } else if (this.data) {\n            if (changes.node && changes.node.currentValue) {\n                this.resetSelection();\n                this.data.loadPage(changes.node.currentValue);\n            } else if (changes.rowFilter) {\n                this.data.setFilter(changes.rowFilter.currentValue);\n                if (this.currentFolderId) {\n                    this.loadFolderNodesByFolderNodeId(this.currentFolderId, this.pageSize, this.skipCount);\n                }\n            } else if (changes.imageResolver) {\n                this.data.setImageResolver(changes.imageResolver.currentValue);\n            }\n        }\n    }\n\n    reload(merge: boolean = false) {\n        this.ngZone.run(() => {\n            this.resetSelection();\n\n            if (this.folderNode) {\n                this.loadFolder(merge);\n            } else if (this.currentFolderId) {\n                this.loadFolderByNodeId(this.currentFolderId);\n            } else if (this.node) {\n                this.data.loadPage(this.node);\n                this.ready.emit();\n            }\n        });\n    }\n\n    isEmptyTemplateDefined(): boolean {\n        if (this.dataTable) {\n            if (this.emptyFolderTemplate) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    isNoPermissionTemplateDefined(): boolean {\n        if (this.dataTable) {\n            if (this.noPermissionTemplate) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    isMobile(): boolean {\n        return !!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n    }\n\n    isEmpty() {\n        return !this.data || this.data.getRows().length === 0;\n    }\n\n    isPaginationEnabled() {\n        return this.enablePagination && !this.isEmpty();\n    }\n\n    isPaginationNeeded() {\n        return this.paginationStrategy === PaginationStrategy.Finite;\n    }\n\n    getNodeActions(node: MinimalNodeEntity | any): ContentActionModel[] {\n        let target = null;\n\n        if (node && node.entry) {\n            if (node.entry.isFile) {\n                target = 'document';\n            }\n\n            if (node.entry.isFolder) {\n                target = 'folder';\n            }\n\n            if (target) {\n                let ltarget = target.toLowerCase();\n                let actionsByTarget = this.actions.filter(entry => {\n                    return entry.target.toLowerCase() === ltarget;\n                }).map(action => new ContentActionModel(action));\n\n                actionsByTarget.forEach((action) => {\n                    this.checkPermission(node, action);\n                });\n\n                return actionsByTarget;\n            }\n        }\n\n        return [];\n    }\n\n    checkPermission(node: any, action: ContentActionModel): ContentActionModel {\n        if (action.permission) {\n            if (this.hasPermissions(node)) {\n                let permissions = node.entry.allowableOperations;\n                let findPermission = permissions.find(permission => permission === action.permission);\n                if (!findPermission && action.disableWithNoPermission === true) {\n                    action.disabled = true;\n                }\n            }\n        }\n        return action;\n    }\n\n    private hasPermissions(node: any): boolean {\n        return node.entry.allowableOperations ? true : false;\n    }\n\n    @HostListener('contextmenu', ['$event'])\n    onShowContextMenu(e?: Event) {\n        if (e && this.contextMenuActions) {\n            e.preventDefault();\n        }\n    }\n\n    performNavigation(node: MinimalNodeEntity): boolean {\n        if (this.canNavigateFolder(node)) {\n            this.currentFolderId = node.entry.id;\n            this.folderNode = node.entry;\n            this.skipCount = 0;\n            this.currentNodeAllowableOperations = node.entry['allowableOperations'] ? node.entry['allowableOperations'] : [];\n            this.loadFolder();\n            this.folderChange.emit(new NodeEntryEvent(node.entry));\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Invoked when executing content action for a document or folder.\n     * @param node Node to be the context of the execution.\n     * @param action Action to be executed against the context.\n     */\n    executeContentAction(node: MinimalNodeEntity, action: ContentActionModel) {\n        if (node && node.entry && action) {\n            let handlerSub;\n\n            if (typeof action.handler === 'function') {\n                handlerSub = action.handler(node, this, action.permission);\n            } else {\n                handlerSub = Observable.of(true);\n            }\n\n            if (typeof action.execute === 'function') {\n                handlerSub.subscribe(() => { action.execute(node); });\n            }\n        }\n    }\n\n    loadFolder(merge: boolean = false) {\n        if (merge) {\n            this.infiniteLoading = true;\n        } else {\n            this.loading = true;\n        }\n\n        let nodeId = this.folderNode ? this.folderNode.id : this.currentFolderId;\n        if (nodeId) {\n            this.loadFolderNodesByFolderNodeId(nodeId, this.pageSize, this.skipCount, merge).catch(err => this.error.emit(err));\n        }\n    }\n\n    // gets folder node and its content\n    loadFolderByNodeId(nodeId: string) {\n        this.loading = true;\n        this.resetSelection();\n\n        if (nodeId === '-trashcan-') {\n            this.loadTrashcan();\n        } else if (nodeId === '-sharedlinks-') {\n            this.loadSharedLinks();\n        } else if (nodeId === '-sites-') {\n            this.loadSites();\n        } else if (nodeId === '-mysites-') {\n            this.loadMemberSites();\n        } else if (nodeId === '-favorites-') {\n            this.loadFavorites();\n        } else if (nodeId === '-recent-') {\n            this.loadRecent();\n        } else {\n            this.documentListService\n                .getFolderNode(nodeId)\n                .then(node => {\n                    this.folderNode = node;\n                    this.currentFolderId = node.id;\n                    this.skipCount = 0;\n                    this.currentNodeAllowableOperations = node['allowableOperations'] ? node['allowableOperations'] : [];\n                    return this.loadFolderNodesByFolderNodeId(node.id, this.pageSize, this.skipCount);\n                })\n                .catch(err => {\n                    if (JSON.parse(err.message).error.statusCode === 403) {\n                        this.loading = false;\n                        this.noPermission = true;\n                    }\n                    this.error.emit(err);\n                });\n        }\n    }\n\n    loadFolderNodesByFolderNodeId(id: string, maxItems: number, skipCount: number, merge: boolean = false): Promise<any> {\n        return new Promise((resolve, reject) => {\n            this.resetSelection();\n            this.documentListService\n                .getFolder(null, {\n                    maxItems: maxItems,\n                    skipCount: skipCount,\n                    rootFolderId: id\n                })\n                .subscribe(\n                    val => {\n                        if (this.isCurrentPageEmpty(val, skipCount)) {\n                            this.updateSkipCount(skipCount - maxItems);\n                            this.loadFolderNodesByFolderNodeId(id, maxItems, skipCount - maxItems).then(\n                                () => resolve(true),\n                                error => reject(error)\n                            );\n                        } else {\n                            this.data.loadPage(<NodePaging> val, merge);\n                            this.pagination = val.list.pagination;\n                            this.loading = false;\n                            this.infiniteLoading = false;\n                            this.ready.emit();\n                            resolve(true);\n                        }\n                    },\n                    error => {\n                        reject(error);\n                    });\n        });\n\n    }\n\n    resetSelection() {\n        this.dataTable.resetSelection();\n        this.selection = [];\n    }\n\n    resetPagination() {\n        this.skipCount = 0;\n    }\n\n    private loadTrashcan(): void {\n        const options = {\n            include: [ 'path', 'properties' ],\n            maxItems: this.pageSize,\n            skipCount: this.skipCount\n        };\n        this.apiService.nodesApi.getDeletedNodes(options)\n            .then((page: DeletedNodesPaging) => this.onPageLoaded(page))\n            .catch(error => this.error.emit(error));\n    }\n\n    private loadSharedLinks(): void {\n        const options = {\n            include: [ 'properties', 'allowableOperations', 'path' ],\n            maxItems: this.pageSize,\n            skipCount: this.skipCount\n        };\n        this.apiService.sharedLinksApi.findSharedLinks(options)\n            .then((page: NodePaging) => this.onPageLoaded(page))\n            .catch(error => this.error.emit(error));\n    }\n\n    private loadSites(): void {\n        const options = {\n            include: [ 'properties' ],\n            maxItems: this.pageSize,\n            skipCount: this.skipCount\n        };\n\n        this.apiService.sitesApi.getSites(options)\n            .then((page: NodePaging) => this.onPageLoaded(page))\n            .catch(error => this.error.emit(error));\n    }\n\n    private loadMemberSites(): void {\n        const options = {\n            include: [ 'properties' ],\n            maxItems: this.pageSize,\n            skipCount: this.skipCount\n        };\n\n        this.apiService.peopleApi.getSiteMembership('-me-', options)\n            .then((result: SitePaging) => {\n                let page: NodePaging = {\n                    list: {\n                        entries: result.list.entries\n                            .map(({ entry: { site }}: any) => ({\n                                entry: site\n                            })),\n                        pagination: result.list.pagination\n                    }\n                };\n\n                this.onPageLoaded(page);\n            })\n            .catch(error => this.error.emit(error));\n    }\n\n    private loadFavorites(): void {\n        const options = {\n            maxItems: this.pageSize,\n            skipCount: this.skipCount,\n            where: '(EXISTS(target/file) OR EXISTS(target/folder))',\n            include: [ 'properties', 'allowableOperations', 'path' ]\n        };\n\n        this.apiService.favoritesApi.getFavorites('-me-', options)\n            .then((result: NodePaging) => {\n                let page: NodePaging = {\n                    list: {\n                        entries: result.list.entries\n                            .map(({ entry: { target }}: any) => ({\n                                entry: target.file || target.folder\n                            }))\n                            .map(({ entry }: any) => {\n                                entry.properties = {\n                                    'cm:title': entry.title,\n                                    'cm:description': entry.description\n                                };\n                                return { entry };\n                            }),\n                        pagination: result.list.pagination\n                    }\n                };\n                this.onPageLoaded(page);\n            })\n            .catch(error => this.error.emit(error));\n    }\n\n    private loadRecent(): void {\n        this.apiService.peopleApi.getPerson('-me-')\n            .then((person: PersonEntry) => {\n                const username = person.entry.id;\n                const query = {\n                    query: {\n                        query: '*',\n                        language: 'afts'\n                    },\n                    filterQueries: [\n                        { query: `cm:modified:[NOW/DAY-30DAYS TO NOW/DAY+1DAY]` },\n                        { query: `cm:modifier:${username} OR cm:creator:${username}` },\n                        { query: `TYPE:\"content\" AND -TYPE:\"app:filelink\" AND -TYPE:\"fm:post\"` }\n                    ],\n                    include: [ 'path', 'properties', 'allowableOperations' ],\n                    sort: [{\n                        type: 'FIELD',\n                        field: 'cm:modified',\n                        ascending: false\n                    }],\n                    paging: {\n                        maxItems: this.pageSize,\n                        skipCount: this.skipCount\n                    }\n                };\n\n                return this.apiService.searchApi.search(query);\n            })\n            .then((page: NodePaging) => this.onPageLoaded(page))\n            .catch(error => this.error.emit(error));\n    }\n\n    private onPageLoaded(page: NodePaging) {\n        if (page) {\n            this.data.loadPage(page);\n            this.pagination = page.list.pagination;\n            this.loading = false;\n            this.ready.emit();\n        }\n    }\n\n    private isCurrentPageEmpty(node, skipCount): boolean {\n        return !this.hasNodeEntries(node) && this.hasPages(skipCount);\n    }\n\n    private hasPages(skipCount): boolean {\n        return skipCount > 0 && this.isPaginationEnabled();\n    }\n\n    private hasNodeEntries(node): boolean {\n        return node && node.list && node.list.entries && node.list.entries.length > 0;\n    }\n\n    /**\n     * Creates a set of predefined columns.\n     */\n    setupDefaultColumns(preset: string = 'default'): void {\n        if (this.data) {\n            const columns = this.getLayoutPreset(preset);\n            this.data.setColumns(columns);\n        }\n    }\n\n    onPreviewFile(node: MinimalNodeEntity) {\n        if (node) {\n            this.preview.emit(new NodeEntityEvent(node));\n        }\n    }\n\n    onNodeClick(node: MinimalNodeEntity) {\n        const domEvent = new CustomEvent('node-click', {\n            detail: {\n                sender: this,\n                node: node\n            },\n            bubbles: true\n        });\n        this.elementRef.nativeElement.dispatchEvent(domEvent);\n\n        const event = new NodeEntityEvent(node);\n        this.nodeClick.emit(event);\n\n        if (!event.defaultPrevented) {\n            if (this.navigate && this.navigationMode === DocumentListComponent.SINGLE_CLICK_NAVIGATION) {\n                if (node && node.entry) {\n                    if (node.entry.isFile) {\n                        this.onPreviewFile(node);\n                    }\n\n                    if (node.entry.isFolder) {\n                        this.performNavigation(node);\n                    }\n                }\n            }\n        }\n    }\n\n    onNodeDblClick(node: MinimalNodeEntity) {\n        const domEvent = new CustomEvent('node-dblclick', {\n            detail: {\n                sender: this,\n                node: node\n            },\n            bubbles: true\n        });\n        this.elementRef.nativeElement.dispatchEvent(domEvent);\n\n        const event = new NodeEntityEvent(node);\n        this.nodeDblClick.emit(event);\n\n        if (!event.defaultPrevented) {\n            if (this.navigate && this.navigationMode === DocumentListComponent.DOUBLE_CLICK_NAVIGATION) {\n                if (node && node.entry) {\n                    if (node.entry.isFile) {\n                        this.onPreviewFile(node);\n                    }\n\n                    if (node.entry.isFolder) {\n                        this.performNavigation(node);\n                    }\n                }\n            }\n        }\n    }\n\n    onNodeSelect(event: { row: ShareDataRow, selection: Array<ShareDataRow> }) {\n        this.selection = event.selection.map(entry => entry.node);\n        const domEvent = new CustomEvent('node-select', {\n            detail: {\n                node: event.row.node,\n                selection: this.selection\n            },\n            bubbles: true\n        });\n        this.elementRef.nativeElement.dispatchEvent(domEvent);\n    }\n\n    onNodeUnselect(event: { row: ShareDataRow, selection: Array<ShareDataRow> }) {\n        this.selection = event.selection.map(entry => entry.node);\n        const domEvent = new CustomEvent('node-unselect', {\n            detail: {\n                node: event.row.node,\n                selection: this.selection\n            },\n            bubbles: true\n        });\n        this.elementRef.nativeElement.dispatchEvent(domEvent);\n    }\n\n    onShowRowContextMenu(event: DataCellEvent) {\n        if (this.contextMenuActions) {\n            let args = event.value;\n            let node = (<ShareDataRow> args.row).node;\n            if (node) {\n                args.actions = this.getContextActions(node) || [];\n            }\n        }\n    }\n\n    onShowRowActionsMenu(event: DataCellEvent) {\n        if (this.contentActions) {\n            let args = event.value;\n            let node = (<ShareDataRow> args.row).node;\n            if (node) {\n                args.actions = this.getNodeActions(node) || [];\n            }\n        }\n    }\n\n    onExecuteRowAction(event: DataRowActionEvent) {\n        if (this.contentActions) {\n            let args = event.value;\n            let node = (<ShareDataRow> args.row).node;\n            let action = (<ContentActionModel> args.action);\n            this.executeContentAction(node, action);\n        }\n    }\n\n    onChangePageSize(event: Pagination): void {\n        this.preferences.paginationSize = event.maxItems;\n        this.pageSize = event.maxItems;\n        this.skipCount = 0;\n        this.reload();\n    }\n\n    onChangePageNumber(page: Pagination): void {\n        this.pageSize = page.maxItems;\n        this.skipCount = page.skipCount;\n        this.reload();\n    }\n\n    onNextPage(event: Pagination): void {\n        this.skipCount = event.skipCount;\n        this.reload();\n    }\n\n    loadNextBatch(event: Pagination) {\n        this.skipCount = event.skipCount;\n        this.reload(true);\n    }\n\n    onPrevPage(event: Pagination): void {\n        this.skipCount = event.skipCount;\n        this.reload();\n    }\n\n    private enforceSingleClickNavigationForMobile(): void {\n        if (this.isMobile()) {\n            this.navigationMode = DocumentListComponent.SINGLE_CLICK_NAVIGATION;\n        }\n    }\n\n    private getDefaultSorting(): DataSorting {\n        let defaultSorting: DataSorting;\n        if (this.sorting) {\n            const [key, direction] = this.sorting;\n            defaultSorting = new DataSorting(key, direction);\n        }\n        return defaultSorting;\n    }\n\n    canNavigateFolder(node: MinimalNodeEntity): boolean {\n        if (this.isCustomSource(this.currentFolderId)) {\n            return false;\n        }\n\n        if (node && node.entry && node.entry.isFolder) {\n            return true;\n        }\n\n        return false;\n    }\n\n    isCustomSource(folderId: string): boolean {\n        const sources = ['-trashcan-', '-sharedlinks-', '-sites-', '-mysites-', '-favorites-', '-recent-'];\n\n        if (sources.indexOf(folderId) > -1) {\n            return true;\n        }\n\n        return false;\n    }\n\n    updateSkipCount(newSkipCount) {\n        this.skipCount = newSkipCount;\n    }\n\n    hasCurrentNodePermission(permission: string): boolean {\n        let hasPermission: boolean = false;\n        if (this.currentNodeAllowableOperations.length > 0) {\n            let permFound = this.currentNodeAllowableOperations.find(element => element === permission);\n            hasPermission = permFound ? true : false;\n        }\n        return hasPermission;\n    }\n\n    hasCreatePermission() {\n        return this.hasCurrentNodePermission(this.CREATE_PERMISSION);\n    }\n\n    private loadLayoutPresets(): void {\n        const externalSettings = this.appConfig.get('document-list.presets', null);\n\n        if (externalSettings) {\n            this.layoutPresets = Object.assign({}, presetsDefaultModel, externalSettings);\n        } else {\n            this.layoutPresets = presetsDefaultModel;\n        }\n\n    }\n\n    private getLayoutPreset(name: string = 'default'): DataColumn[] {\n        return (this.layoutPresets[name] || this.layoutPresets['default']).map(col => new ObjectDataColumn(col));\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./contents-service/document-list/components/document-list.component.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class ContentActionModel {\n    icon: string;\n    title: string;\n    handler: ContentActionHandler;\n    execute: Function;\n    target: string;\n    permission: string;\n    disableWithNoPermission: boolean = false;\n    disabled: boolean = false;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.icon = obj.icon;\n            this.title = obj.title;\n            this.handler = obj.handler;\n            this.execute = obj.execute;\n            this.target = obj.target;\n            this.permission = obj.permission;\n            this.disableWithNoPermission = obj.disableWithNoPermission;\n            this.disabled = obj.disabled;\n        }\n    }\n}\n\nexport type ContentActionHandler = (obj: any, target?: any, permission?: string) => any;\n\nexport class DocumentActionModel extends ContentActionModel {\n    constructor(json?: any)  {\n        super(json);\n        this.target = 'document';\n    }\n}\n\nexport class FolderActionModel extends  ContentActionModel {\n    constructor(json?: any)  {\n        super(json);\n        this.target = 'folder';\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./contents-service/document-list/models/content-action.model.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class PermissionModel {\n    type: string;\n    action: string;\n    permission: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.type = obj.type || null;\n            this.action = obj.action || null;\n            this.permission = obj.permission || null;\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./contents-service/document-list/models/permissions.model.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\nimport { RatingService } from './../services/rating.service';\n\n@Component({\n    selector: 'adf-rating',\n    styles: [require('./rating.component.scss')],\n    template: require('./rating.component.html'),\n    providers: [RatingService],\n    encapsulation: ViewEncapsulation.None\n})\nexport class RatingComponent implements OnChanges {\n\n    @Input()\n    nodeId: string;\n\n    average: number = 0;\n\n    ratingType: string = 'fiveStar';\n\n    @Output()\n    changeVote = new EventEmitter();\n\n    stars: Array<any> = [];\n\n    constructor(private ratingService: RatingService) {\n    }\n\n    ngOnChanges() {\n        let ratingObserver = this.ratingService.getRating(this.nodeId, this.ratingType);\n\n        ratingObserver.subscribe(\n            (data) => {\n                if (data.entry.aggregate) {\n                    this.average = data.entry.aggregate.average;\n                    this.calculateStars();\n                }\n            }\n        );\n\n        return ratingObserver;\n    }\n\n    calculateStars() {\n        this.stars = [];\n\n        for (let i = 0; i < 5; i++) {\n            if (i < this.average) {\n                this.stars.push({fill: true});\n            } else {\n                this.stars.push({fill: false});\n            }\n        }\n\n        this.changeVote.emit(this.average);\n    }\n\n    updateVote(vote: number) {\n        this.ratingService.postRating(this.nodeId, this.ratingType, vote).subscribe(\n            (data) => {\n                if (data.entry.aggregate) {\n                    if (this.average !== data.entry.aggregate.average) {\n                        this.average = data.entry.aggregate.average;\n                        this.calculateStars();\n                    }\n                }\n            }\n        );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./contents-service/social/rating.component.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\nimport { RatingService } from './../services/rating.service';\n\n@Component({\n    selector: 'adf-like',\n    styles: [require('./like.component.scss')],\n    template: require('./like.component.html'),\n    providers: [RatingService],\n    encapsulation: ViewEncapsulation.None\n})\nexport class LikeComponent implements OnChanges {\n\n    @Input()\n    nodeId: string;\n\n    likesCounter: number = 0;\n\n    ratingType: string = 'likes';\n\n    isLike: boolean = false;\n\n    @Output()\n    changeVote = new EventEmitter();\n\n    constructor(private ratingService: RatingService) {\n    }\n\n    ngOnChanges() {\n        this.clean();\n\n        let ratingObserver = this.ratingService.getRating(this.nodeId, this.ratingType);\n\n        ratingObserver.subscribe(\n            (data) => {\n                if (data.entry.aggregate) {\n                    this.likesCounter = data.entry.aggregate.numberOfRatings;\n                    if (data.entry.ratedAt) {\n                        this.isLike = true;\n                    }\n                }\n            }\n        );\n\n        return ratingObserver;\n    }\n\n    likeClick() {\n        if (this.isLike) {\n            this.ratingService.deleteRating(this.nodeId, this.ratingType).subscribe(\n                () => {\n                    this.likesCounter -= 1;\n                    this.isLike = false;\n                }\n            );\n        } else {\n            this.ratingService.postRating(this.nodeId, this.ratingType, true).subscribe(\n                (data) => {\n                    this.likesCounter = data.entry.aggregate.numberOfRatings;\n                    this.isLike = true;\n                }\n            );\n        }\n\n        this.changeVote.emit(this.likesCounter);\n    }\n\n    clean() {\n        this.isLike = false;\n        this.likesCounter = 0;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./contents-service/social/like.component.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\nimport { AlfrescoTranslationService } from 'ng2-alfresco-core';\nimport { TagService } from './../services/tag.service';\n\n/**\n *\n * This component, provide a list of the tags relative a node with actions button to add or remove new tag\n *\n * @returns {TagComponent} .\n */\n\n@Component({\n    selector: 'adf-tag-node-actions-list',\n    template: require('./tag-actions.component.html'),\n    styles: [require('./tag-actions.component.scss')],\n    encapsulation: ViewEncapsulation.None\n})\nexport class TagActionsComponent implements OnChanges {\n\n    @Input()\n    nodeId: string;\n\n    @Output()\n    successAdd: EventEmitter<any> = new EventEmitter();\n\n    @Output()\n    error: EventEmitter<any> = new EventEmitter();\n\n    @Output()\n    result = new EventEmitter();\n\n    newTagName: string;\n\n    tagsEntries: any;\n\n    errorMsg: string;\n\n    disableAddTag: boolean = true;\n\n    constructor(private tagService: TagService, private translateService: AlfrescoTranslationService) {\n        this.tagService.refresh.subscribe(() => {\n            this.refreshTag();\n        });\n    }\n\n    ngOnChanges() {\n        return this.refreshTag();\n    }\n\n    refreshTag() {\n        this.tagService.getTagsByNodeId(this.nodeId).subscribe((data) => {\n            this.tagsEntries = data.list.entries;\n            this.disableAddTag = false;\n            this.result.emit(this.tagsEntries);\n        }, () => {\n            this.tagsEntries = null;\n            this.disableAddTag = true;\n            this.result.emit(this.tagsEntries);\n        });\n    }\n\n    addTag() {\n        if (this.searchTag(this.newTagName)) {\n            this.translateService.get('TAG.MESSAGES.EXIST').subscribe((error) => {\n                this.errorMsg = error;\n            });\n            this.error.emit(this.errorMsg);\n        } else {\n            this.tagService.addTag(this.nodeId, this.newTagName).subscribe(() => {\n                this.newTagName = '';\n                this.successAdd.emit(this.nodeId);\n            });\n        }\n    }\n\n    searchTag(searchTagName: string) {\n        if (this.tagsEntries) {\n            return this.tagsEntries.find((currentTag) => {\n                return (searchTagName === currentTag.entry.tag);\n            });\n        }\n    }\n\n    cleanErrorMsg() {\n        this.errorMsg = '';\n    }\n\n    removeTag(tag: string) {\n        this.tagService.removeTag(this.nodeId, tag);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./contents-service/tag/tag-actions.component.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, OnInit, Output, ViewEncapsulation } from '@angular/core';\nimport { TagService } from '../services/tag.service';\n\n/**\n *\n * This component provide a list of all the tag inside the ECM\n *\n * @returns {TagList} .\n */\n\n@Component({\n    selector: 'adf-tag-list',\n    template: require('./tag-list.component.html'),\n    styles: [require('./tag-list.component.scss')],\n    encapsulation: ViewEncapsulation.None\n})\nexport class TagListComponent implements OnInit {\n\n    tagsEntries: any;\n\n    @Output()\n    result = new EventEmitter();\n\n    /**\n     * Constructor\n     * @param tagService\n     */\n    constructor(private tagService: TagService) {\n        this.tagService.refresh.subscribe(() => {\n            this.refreshTag();\n        });\n    }\n\n    ngOnInit() {\n        return this.refreshTag();\n    }\n\n    refreshTag() {\n        this.tagService.getAllTheTags().subscribe((data) => {\n            this.tagsEntries = data.list.entries;\n            this.result.emit(this.tagsEntries);\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./contents-service/tag/tag-list.component.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\nimport { TagService } from '../services/tag.service';\n\n/**\n *\n * This component, ShowNodeTag a list of the tag on relative a node\n *\n * @returns {TagNodeList} .\n */\n\n@Component({\n    selector: 'adf-tag-node-list',\n    template: require('./tag-node-list.component.html'),\n    styles: [require('./tag-node-list.component.scss')],\n    encapsulation: ViewEncapsulation.None\n})\nexport class TagNodeListComponent implements OnChanges {\n\n    @Input()\n    nodeId: string;\n\n    tagsEntries: any;\n\n    @Output()\n    results = new EventEmitter();\n\n    /**\n     * Constructor\n     * @param tagService\n     */\n    constructor(private tagService: TagService) {\n        this.tagService.refresh.subscribe(() => {\n            this.refreshTag();\n        });\n    }\n\n    ngOnChanges() {\n        return this.refreshTag();\n    }\n\n    refreshTag() {\n        this.tagService.getTagsByNodeId(this.nodeId).subscribe((data) => {\n            this.tagsEntries = data.list.entries;\n            this.results.emit(this.tagsEntries);\n        });\n    }\n\n    removeTag(tag: string) {\n        this.tagService.removeTag(this.nodeId, tag).subscribe(() => {\n            this.refreshTag();\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./contents-service/tag/tag-node-list.component.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\nimport { AlfrescoApiService, LogService } from 'ng2-alfresco-core';\nimport { ObjectDataTableAdapter } from 'ng2-alfresco-datatable';\n\n/**\n * <adf-webscript-get [scriptPath]=\"string\"\n *                         [scriptArgs]=\"Object\"\n *                         [contextRoot]=\"string\"\n *                         [servicePath]=\"string\"\n *                         [contentType]=\"JSON|HTML|DATATABLE\"\n *                         (success)=\"customMethod($event)>\n * </adf-webscript-get>\n *\n * This component, provide a get webscript viewer\n *\n * @InputParam {string} scriptPath path to Web Script (as defined by Web Script)\n * @InputParam {Object} scriptArgs arguments to pass to Web Script\n * @InputParam {string} contextRoot path where application is deployed default value 'alfresco'\n * @InputParam {string} servicePath path where Web Script service is mapped default value 'service'\n * @InputParam {string} contentType JSON | HTML | DATATABLE | TEXT\n *\n * @Output - success - The event is emitted when the data are recived\n *\n * @returns {WebscriptComponent} .\n */\n@Component({\n    selector: 'adf-webscript-get',\n    template: require('./webscript.component.html')\n})\nexport class WebscriptComponent implements OnChanges {\n\n    @Input()\n    scriptPath: string;\n\n    @Input()\n    scriptArgs: any;\n\n    @Input()\n    showData: boolean = true;\n\n    @Input()\n    contextRoot: string = 'alfresco';\n\n    @Input()\n    servicePath: string = 'service';\n\n    @Input()\n    contentType: string = 'TEXT';\n\n    @Output()\n    success = new EventEmitter();\n\n    data: any = undefined;\n    showError: boolean = false;\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    ngOnChanges(changes) {\n        if (this.showData) {\n            this.clean();\n        }\n\n        return new Promise((resolve, reject) => {\n            this.apiService.getInstance().webScript.executeWebScript('GET', this.scriptPath, this.scriptArgs, this.contextRoot, this.servicePath).then((webScriptdata) => {\n\n                this.data = webScriptdata;\n\n                if (this.showData) {\n                    if (this.contentType === 'DATATABLE') {\n                        this.data = this.showDataAsDataTable(webScriptdata);\n                    }\n                }\n\n                this.success.emit(this.data);\n\n                resolve();\n            }, (error) => {\n                this.logService.log('Error' + error);\n                reject();\n            });\n        });\n    }\n\n    /**\n     * show the data in a ng2-alfresco-datatable\n     *\n     * @param data\n     *\n     * @retutns the data as datatable\n     */\n    showDataAsDataTable(data: any) {\n        let datatableData: any = null;\n        try {\n\n            if (!data.schema) {\n                data.schema = ObjectDataTableAdapter.generateSchema(data.data);\n            }\n\n            if (data.schema && data.schema.length > 0) {\n                this.data = new ObjectDataTableAdapter(data.data, data.schema);\n            }\n\n        } catch (e) {\n            this.logService.error('error during the cast as datatable');\n        }\n\n        return datatableData;\n    }\n\n    clean() {\n        this.data = undefined;\n    }\n\n    isDataTableContent() {\n        return this.contentType === 'DATATABLE';\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./contents-service/webscript/webscript.component.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DatePipe } from '@angular/common';\nimport { NodePaging } from 'alfresco-js-api';\nimport { TimeAgoPipe } from 'ng2-alfresco-core';\nimport { DataColumn, DataRow, DataSorting, DataTableAdapter } from 'ng2-alfresco-datatable';\nimport { PermissionStyleModel } from './../models/permissions-style.model';\nimport { DocumentListService } from './../services/document-list.service';\nimport { ImageResolver } from './image-resolver.model';\nimport { RowFilter } from './row-filter.model';\nimport { ShareDataRow } from './share-data-row.model';\n\nexport class ShareDataTableAdapter implements DataTableAdapter {\n\n    ERR_ROW_NOT_FOUND: string = 'Row not found';\n    ERR_COL_NOT_FOUND: string = 'Column not found';\n\n    private sorting: DataSorting;\n    private rows: DataRow[];\n    private columns: DataColumn[];\n    private page: NodePaging;\n\n    private filter: RowFilter;\n    private imageResolver: ImageResolver;\n\n    thumbnails: boolean = false;\n    permissionsStyle: PermissionStyleModel[];\n    selectedRow: DataRow;\n\n    constructor(private documentListService: DocumentListService,\n                schema: DataColumn[] = [],\n                sorting?: DataSorting) {\n        this.rows = [];\n        this.columns = schema || [];\n        this.sorting = sorting;\n    }\n\n    getRows(): Array<DataRow> {\n        return this.rows;\n    }\n\n    // TODO: disable this api\n    setRows(rows: Array<DataRow>) {\n        this.rows = rows || [];\n        this.sort();\n    }\n\n    getColumns(): Array<DataColumn> {\n        return this.columns;\n    }\n\n    setColumns(columns: Array<DataColumn>) {\n        this.columns = columns || [];\n    }\n\n    getValue(row: DataRow, col: DataColumn): any {\n        if (!row) {\n            throw new Error(this.ERR_ROW_NOT_FOUND);\n        }\n        if (!col) {\n            throw new Error(this.ERR_COL_NOT_FOUND);\n        }\n        let dataRow: ShareDataRow = <ShareDataRow> row;\n        let value: any = row.getValue(col.key);\n        if (dataRow.cache[col.key] !== undefined) {\n            return dataRow.cache[col.key];\n        }\n\n        if (col.type === 'date') {\n            try {\n                const result = this.formatDate(col, value);\n                return dataRow.cacheValue(col.key, result);\n            } catch (err) {\n                console.error(`Error parsing date ${value} to format ${col.format}`);\n                return 'Error';\n            }\n        }\n\n        if (col.key === '$thumbnail') {\n\n            if (this.imageResolver) {\n                let resolved = this.imageResolver(row, col);\n                if (resolved) {\n                    return resolved;\n                }\n            }\n\n            const node = (<ShareDataRow> row).node;\n\n            if (node.entry.isFolder) {\n                return this.documentListService.getMimeTypeIcon('folder');\n            }\n\n            if (node.entry.isFile) {\n                if (this.thumbnails) {\n                    return this.documentListService.getDocumentThumbnailUrl(node);\n                }\n            }\n\n            if (node.entry.content) {\n                const mimeType = node.entry.content.mimeType;\n                if (mimeType) {\n                    return this.documentListService.getMimeTypeIcon(mimeType);\n                }\n            }\n\n            return this.documentListService.getDefaultMimeTypeIcon();\n        }\n\n        if (col.type === 'image') {\n\n            if (this.imageResolver) {\n                let resolved = this.imageResolver(row, col);\n                if (resolved) {\n                    return resolved;\n                }\n            }\n        }\n\n        return dataRow.cacheValue(col.key, value);\n    }\n\n    formatDate(col: DataColumn, value: any): string {\n        if (col.type === 'date') {\n            const format = col.format || 'medium';\n            if (format === 'timeAgo') {\n                const timeAgoPipe = new TimeAgoPipe();\n                return timeAgoPipe.transform(value);\n            } else {\n                const datePipe = new DatePipe('en-US');\n                return datePipe.transform(value, format);\n            }\n        }\n\n        return value;\n    }\n\n    getSorting(): DataSorting {\n        return this.sorting;\n    }\n\n    setSorting(sorting: DataSorting): void {\n        this.sorting = sorting;\n\n        this.sortRows(this.rows, this.sorting);\n    }\n\n    sort(key?: string, direction?: string): void {\n        let sorting = this.sorting || new DataSorting();\n        if (key) {\n            sorting.key = key;\n            sorting.direction = direction || 'asc';\n        }\n        this.setSorting(sorting);\n    }\n\n    setFilter(filter: RowFilter) {\n        this.filter = filter;\n    }\n\n    setImageResolver(resolver: ImageResolver) {\n        this.imageResolver = resolver;\n    }\n\n    private sortRows(rows: DataRow[], sorting: DataSorting) {\n        const options: Intl.CollatorOptions = {};\n\n        if (sorting && sorting.key && rows && rows.length > 0) {\n\n            if (sorting.key.includes('sizeInBytes') || sorting.key === 'name') {\n                options.numeric = true;\n            }\n\n            rows.sort((a: ShareDataRow, b: ShareDataRow) => {\n                if (a.node.entry.isFolder !== b.node.entry.isFolder) {\n                    return a.node.entry.isFolder ? -1 : 1;\n                }\n\n                let left = a.getValue(sorting.key);\n                if (left) {\n                    left = (left instanceof Date) ? left.valueOf().toString() : left.toString();\n                } else {\n                    left = '';\n                }\n\n                let right = b.getValue(sorting.key);\n                if (right) {\n                    right = (right instanceof Date) ? right.valueOf().toString() : right.toString();\n                } else {\n                    right = '';\n                }\n\n                return sorting.direction === 'asc'\n                    ? left.localeCompare(right, undefined, options)\n                    : right.localeCompare(left, undefined, options);\n            });\n        }\n    }\n\n    public loadPage(page: NodePaging, merge: boolean = false) {\n        this.page = page;\n\n        let rows = [];\n\n        if (page && page.list) {\n            let data = page.list.entries;\n            if (data && data.length > 0) {\n                rows = data.map(item => new ShareDataRow(item, this.documentListService, this.permissionsStyle));\n\n                if (this.filter) {\n                    rows = rows.filter(this.filter);\n                }\n\n                // Sort by first sortable or just first column\n                if (this.columns && this.columns.length > 0) {\n                    let sorting = this.getSorting();\n                    if (sorting) {\n                        this.sortRows(rows, sorting);\n                    } else {\n                        let sortable = this.columns.filter(c => c.sortable);\n                        if (sortable.length > 0) {\n                            this.sort(sortable[0].key, 'asc');\n                        } else {\n                            this.sort(this.columns[0].key, 'asc');\n                        }\n                    }\n                }\n            }\n        }\n\n        if (merge) {\n            this.rows = this.rows.concat(rows);\n        } else {\n            this.rows = rows;\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./contents-service/document-list/data/share-datatable-adapter.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MinimalNode, MinimalNodeEntity } from 'alfresco-js-api';\nimport { ObjectUtils } from 'ng2-alfresco-core';\nimport { DataRow } from 'ng2-alfresco-datatable';\nimport { PermissionStyleModel } from './../models/permissions-style.model';\nimport { DocumentListService } from './../services/document-list.service';\n\nexport class ShareDataRow implements DataRow {\n\n    static ERR_OBJECT_NOT_FOUND: string = 'Object source not found';\n\n    cache: { [key: string]: any } = {};\n    isSelected: boolean = false;\n    isDropTarget: boolean;\n    cssClass: string = '';\n\n    get node(): MinimalNodeEntity {\n        return this.obj;\n    }\n\n    constructor(private obj: MinimalNodeEntity, private documentListService: DocumentListService, private permissionsStyle: PermissionStyleModel[]) {\n        if (!obj) {\n            throw new Error(ShareDataRow.ERR_OBJECT_NOT_FOUND);\n        }\n\n        this.isDropTarget = this.isFolderAndHasPermissionToUpload(obj);\n\n        if (permissionsStyle) {\n            this.cssClass = this.getPermissionClass(obj);\n        }\n    }\n\n    getPermissionClass(nodeEntity: MinimalNodeEntity): string {\n        let permissionsClasses = '';\n\n        this.permissionsStyle.forEach((currentPermissionsStyle: PermissionStyleModel) => {\n\n            if (this.applyPermissionStyleToFolder(nodeEntity.entry, currentPermissionsStyle) || this.applyPermissionStyleToFile(nodeEntity.entry, currentPermissionsStyle)) {\n\n                if (this.documentListService.hasPermission(nodeEntity.entry, currentPermissionsStyle.permission)) {\n                    permissionsClasses += ` ${currentPermissionsStyle.css}`;\n                }\n            }\n\n        });\n\n        return permissionsClasses;\n    }\n\n    private applyPermissionStyleToFile(node: MinimalNode, currentPermissionsStyle: PermissionStyleModel): boolean {\n        return (currentPermissionsStyle.isFile && node.isFile);\n    }\n\n    private applyPermissionStyleToFolder(node: MinimalNode, currentPermissionsStyle: PermissionStyleModel): boolean {\n        return (currentPermissionsStyle.isFolder && node.isFolder);\n    }\n\n    isFolderAndHasPermissionToUpload(obj: MinimalNodeEntity): boolean {\n        return this.isFolder(obj) && this.documentListService.hasPermission(obj.entry, 'create');\n    }\n\n    isFolder(obj: MinimalNodeEntity): boolean {\n        return obj.entry && obj.entry.isFolder;\n    }\n\n    cacheValue(key: string, value: any): any {\n        this.cache[key] = value;\n        return value;\n    }\n\n    getValue(key: string): any {\n        if (this.cache[key] !== undefined) {\n            return this.cache[key];\n        }\n        return ObjectUtils.getValue(this.obj.entry, key);\n    }\n\n    hasValue(key: string): boolean {\n        return this.getValue(key) !== undefined;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./contents-service/document-list/data/share-data-row.model.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MinimalNodeEntity, MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport { BaseEvent } from 'ng2-alfresco-core';\n\nexport class NodeEntityEvent extends BaseEvent<MinimalNodeEntity> {\n    constructor(entity: MinimalNodeEntity) {\n        super();\n        this.value = entity;\n    }\n}\n\nexport class NodeEntryEvent extends BaseEvent<MinimalNodeEntryEntity> {\n    constructor(entity: MinimalNodeEntryEntity) {\n        super();\n        this.value = entity;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./contents-service/document-list/components/node.event.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { MinimalNodeEntity } from 'alfresco-js-api';\nimport { AlfrescoContentService } from 'ng2-alfresco-core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Rx';\nimport { ContentActionHandler } from '../models/content-action.model';\nimport { PermissionModel } from '../models/permissions.model';\nimport { DocumentListService } from './document-list.service';\nimport { NodeActionsService } from './node-actions.service';\n\n@Injectable()\nexport class DocumentActionsService {\n\n    permissionEvent: Subject<PermissionModel> = new Subject<PermissionModel>();\n    error: Subject<Error> = new Subject<Error>();\n    success: Subject<string> = new Subject<string>();\n\n    private handlers: { [id: string]: ContentActionHandler; } = {};\n\n    constructor(private nodeActionsService: NodeActionsService,\n                private documentListService?: DocumentListService,\n                private contentService?: AlfrescoContentService) {\n        this.setupActionHandlers();\n    }\n\n    getHandler(key: string): ContentActionHandler {\n        if (key) {\n            let lkey = key.toLowerCase();\n            return this.handlers[lkey] || null;\n        }\n        return null;\n    }\n\n    setHandler(key: string, handler: ContentActionHandler): boolean {\n        if (key) {\n            let lkey = key.toLowerCase();\n            this.handlers[lkey] = handler;\n            return true;\n        }\n        return false;\n    }\n\n    canExecuteAction(obj: any): boolean {\n        return this.documentListService && obj && obj.entry.isFile === true;\n    }\n\n    private setupActionHandlers() {\n        this.handlers['download'] = this.download.bind(this);\n        this.handlers['copy'] = this.copyNode.bind(this);\n        this.handlers['move'] = this.moveNode.bind(this);\n        this.handlers['delete'] = this.deleteNode.bind(this);\n    }\n\n    private download(obj: any): Observable<boolean> {\n        if (this.canExecuteAction(obj) && this.contentService) {\n            let link = document.createElement('a');\n            document.body.appendChild(link);\n            link.setAttribute('download', 'download');\n            link.href = this.contentService.getContentUrl(obj);\n            link.click();\n            document.body.removeChild(link);\n            return Observable.of(true);\n        }\n        return Observable.of(false);\n    }\n\n    private copyNode(obj: MinimalNodeEntity, target?: any, permission?: string) {\n        const actionObservable = this.nodeActionsService.copyContent(obj.entry, permission);\n        this.prepareHandlers(actionObservable, 'content', 'copy', target, permission);\n        return actionObservable;\n    }\n\n    private moveNode(obj: MinimalNodeEntity, target?: any, permission?: string) {\n        const actionObservable = this.nodeActionsService.moveContent(obj.entry, permission);\n        this.prepareHandlers(actionObservable, 'content', 'move', target, permission);\n        return actionObservable;\n    }\n\n    private prepareHandlers(actionObservable, type: string, action: string, target?: any, permission?: string): void {\n        actionObservable.subscribe(\n            (fileOperationMessage) => {\n                if (target && typeof target.reload === 'function') {\n                    target.reload();\n                }\n                this.success.next(fileOperationMessage);\n            },\n            this.error.next.bind(this.error)\n        );\n    }\n\n    private deleteNode(obj: any, target?: any, permission?: string): Observable<any> {\n        let handlerObservable;\n\n        if (this.canExecuteAction(obj)) {\n            if (this.contentService.hasPermission(obj.entry, permission)) {\n                handlerObservable = this.documentListService.deleteNode(obj.entry.id);\n                handlerObservable.subscribe(() => {\n                    if (target && typeof target.reload === 'function') {\n                        target.reload();\n                    }\n                    this.success.next(obj.entry.id);\n                });\n                return handlerObservable;\n            } else {\n                this.permissionEvent.next(new PermissionModel({type: 'content', action: 'delete', permission: permission}));\n                return Observable.throw(new Error('No permission to delete'));\n            }\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./contents-service/document-list/services/document-actions.service.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { MinimalNodeEntity } from 'alfresco-js-api';\nimport { AlfrescoContentService } from 'ng2-alfresco-core';\nimport { Observable, Subject } from 'rxjs/Rx';\nimport { ContentActionHandler } from '../models/content-action.model';\nimport { PermissionModel } from '../models/permissions.model';\nimport { DocumentListService } from './document-list.service';\nimport { NodeActionsService } from './node-actions.service';\n\n@Injectable()\nexport class FolderActionsService {\n\n    permissionEvent: Subject<PermissionModel> = new Subject<PermissionModel>();\n    error: Subject<Error> = new Subject<Error>();\n    success: Subject<string> = new Subject<string>();\n\n    private handlers: { [id: string]: ContentActionHandler; } = {};\n\n    constructor(private nodeActionsService: NodeActionsService,\n                private documentListService: DocumentListService,\n                private contentService: AlfrescoContentService) {\n        this.setupActionHandlers();\n    }\n\n    getHandler(key: string): ContentActionHandler {\n        if (key) {\n            let lkey = key.toLowerCase();\n            return this.handlers[lkey] || null;\n        }\n        return null;\n    }\n\n    setHandler(key: string, handler: ContentActionHandler): boolean {\n        if (key) {\n            let lkey = key.toLowerCase();\n            this.handlers[lkey] = handler;\n            return true;\n        }\n        return false;\n    }\n\n    canExecuteAction(obj: any): boolean {\n        return this.documentListService && obj && obj.entry.isFolder === true;\n    }\n\n    private setupActionHandlers() {\n        this.handlers['copy'] = this.copyNode.bind(this);\n        this.handlers['move'] = this.moveNode.bind(this);\n        this.handlers['delete'] = this.deleteNode.bind(this);\n    }\n\n    private copyNode(obj: MinimalNodeEntity, target?: any, permission?: string) {\n        const actionObservable = this.nodeActionsService.copyFolder(obj.entry, permission);\n        this.prepareHandlers(actionObservable, 'folder', 'copy', target, permission);\n        return actionObservable;\n    }\n\n    private moveNode(obj: MinimalNodeEntity, target?: any, permission?: string) {\n        const actionObservable = this.nodeActionsService.moveFolder(obj.entry, permission);\n        this.prepareHandlers(actionObservable, 'folder', 'move', target, permission);\n        return actionObservable;\n    }\n\n    private prepareHandlers(actionObservable, type: string, action: string, target?: any, permission?: string): void {\n        actionObservable.subscribe(\n            (fileOperationMessage) => {\n                if (target && typeof target.reload === 'function') {\n                    target.reload();\n                }\n                this.success.next(fileOperationMessage);\n            },\n            this.error.next.bind(this.error)\n        );\n    }\n\n    private deleteNode(obj: any, target?: any, permission?: string): Observable<any> {\n        let handlerObservable: Observable<any>;\n\n        if (this.canExecuteAction(obj)) {\n            if (this.contentService.hasPermission(obj.entry, permission)) {\n                handlerObservable = this.documentListService.deleteNode(obj.entry.id);\n                handlerObservable.subscribe(() => {\n                    if (target && typeof target.reload === 'function') {\n                        target.reload();\n                    }\n                    this.success.next(obj.entry.id);\n                });\n                return handlerObservable;\n            } else {\n                this.permissionEvent.next(new PermissionModel({type: 'folder', action: 'delete', permission: permission}));\n                return Observable.throw(new Error('No permission to delete'));\n            }\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./contents-service/document-list/services/folder-actions.service.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component } from '@angular/core';\n\nimport { ContentActionModel } from './../../models/content-action.model';\nimport { DocumentListComponent } from './../document-list.component';\n\n@Component({\n    selector: 'content-actions',\n    template: ''\n})\nexport class ContentActionListComponent {\n\n    constructor(private documentList: DocumentListComponent) {\n    }\n\n    /**\n     * Registers action handler within the parent document list component.\n     * @param action Action model to register.\n     */\n    registerAction(action: ContentActionModel): boolean {\n        if (this.documentList && action) {\n            this.documentList.actions.push(action);\n            return true;\n        }\n        return false;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./contents-service/document-list/components/content-action/content-action-list.component.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Inject, Input, OnInit, Optional, Output, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { MinimalNodeEntryEntity, NodePaging, Pagination } from 'alfresco-js-api';\nimport { AlfrescoContentService, HighlightDirective, SiteModel } from 'ng2-alfresco-core';\nimport { ImageResolver } from '../../data/image-resolver.model';\nimport { RowFilter } from '../../data/row-filter.model';\nimport { DocumentListComponent, PaginationStrategy } from '../document-list.component';\nimport { ContentNodeSelectorService } from './content-node-selector.service';\n\nexport interface ContentNodeSelectorComponentData {\n    title: string;\n    currentFolderId?: string;\n    rowFilter?: RowFilter;\n    imageResolver?: ImageResolver;\n    select: EventEmitter<MinimalNodeEntryEntity[]>;\n}\n\n@Component({\n    selector: 'adf-content-node-selector',\n    styles: [require('./content-node-selector.component.scss')],\n    template: require('./content-node-selector.component.html'),\n    encapsulation: ViewEncapsulation.None\n})\nexport class ContentNodeSelectorComponent implements OnInit {\n\n    nodes: NodePaging | null = null;\n    siteId: null | string;\n    searchTerm: string = '';\n    showingSearchResults: boolean = false;\n    loadingSearchResults: boolean = false;\n    inDialog: boolean = false;\n    chosenNode: MinimalNodeEntryEntity | null = null;\n    folderIdToShow: string | null = null;\n    paginationStrategy: PaginationStrategy;\n    pagination: Pagination;\n    skipCount: number = 0;\n\n    @Input()\n    title: string;\n\n    @Input()\n    currentFolderId: string | null = null;\n\n    @Input()\n    rowFilter: RowFilter = null;\n\n    @Input()\n    imageResolver: ImageResolver = null;\n\n    @Input()\n    pageSize: number = 10;\n\n    @Output()\n    select: EventEmitter<MinimalNodeEntryEntity[]> = new EventEmitter<MinimalNodeEntryEntity[]>();\n\n    @ViewChild(DocumentListComponent)\n    documentList: DocumentListComponent;\n\n    @ViewChild(HighlightDirective)\n    highlighter: HighlightDirective;\n\n    constructor(private contentNodeSelectorService: ContentNodeSelectorService,\n                private contentService: AlfrescoContentService,\n                @Optional() @Inject(MAT_DIALOG_DATA) data?: ContentNodeSelectorComponentData,\n                @Optional() private containingDialog?: MatDialogRef<ContentNodeSelectorComponent>) {\n        if (data) {\n            this.title = data.title;\n            this.select = data.select;\n            this.currentFolderId = data.currentFolderId;\n            this.rowFilter = data.rowFilter;\n            this.imageResolver = data.imageResolver;\n        }\n\n        if (this.containingDialog) {\n            this.inDialog = true;\n        }\n    }\n\n    ngOnInit() {\n        this.folderIdToShow = this.currentFolderId;\n        this.paginationStrategy = PaginationStrategy.Infinite;\n    }\n\n    /**\n     * Updates the site attribute and starts a new search\n     *\n     * @param chosenSite Sitemodel to search within\n     */\n    siteChanged(chosenSite: SiteModel): void {\n        this.siteId = chosenSite.guid;\n        this.updateResults();\n    }\n\n    /**\n     * Updates the searchTerm attribute and starts a new search\n     *\n     * @param searchTerm string value to search against\n     */\n    search(searchTerm: string): void {\n        this.searchTerm = searchTerm;\n        this.updateResults();\n    }\n\n    /**\n     * Returns whether breadcrumb has to be shown or not\n     */\n    needBreadcrumbs() {\n        const whenInFolderNavigation = !this.showingSearchResults,\n            whenInSelectingSearchResult = this.showingSearchResults && this.chosenNode;\n\n        return whenInFolderNavigation || whenInSelectingSearchResult;\n    }\n\n    /**\n     * Returns the actually selected|entered folder node or null in case of searching for the breadcrumb\n     */\n    get breadcrumbFolderNode(): MinimalNodeEntryEntity | null {\n        if (this.showingSearchResults && this.chosenNode) {\n            return this.chosenNode;\n        } else {\n            return this.documentList.folderNode;\n        }\n    }\n\n    /**\n     * Clear the search input\n     */\n    clear(): void {\n        this.searchTerm = '';\n        this.nodes = null;\n        this.skipCount = 0;\n        this.chosenNode = null;\n        this.showingSearchResults = false;\n        this.folderIdToShow = this.currentFolderId;\n    }\n\n    /**\n     * Update the result list depending on the criterias\n     */\n    private updateResults(): void {\n        if (this.searchTerm.length === 0) {\n            this.folderIdToShow = this.siteId || this.currentFolderId;\n        } else {\n            this.startNewSearch();\n        }\n    }\n\n    /**\n     * Load the first page of a new search result\n     */\n    private startNewSearch(): void {\n        this.nodes = null;\n        this.skipCount = 0;\n        this.chosenNode = null;\n        this.folderIdToShow = null;\n        this.querySearch();\n    }\n\n    /**\n     * Loads the next batch of search results\n     *\n     * @param event Pagination object\n     */\n    getNextPageOfSearch(event: Pagination): void {\n        this.skipCount = event.skipCount;\n        this.querySearch();\n    }\n\n    /**\n     * Perform the call to searchService with the proper parameters\n     */\n    private querySearch(): void {\n        if (this.isSearchTermLongEnough()) {\n            this.loadingSearchResults = true;\n\n            this.contentNodeSelectorService.search(this.searchTerm, this.siteId, this.skipCount, this.pageSize)\n                .subscribe(this.showSearchResults.bind(this));\n        }\n    }\n\n    /**\n     * Show the results of the search\n     *\n     * @param results Search results\n     */\n    private showSearchResults(results: NodePaging): void {\n        this.showingSearchResults = true;\n        this.loadingSearchResults = false;\n\n        // Documentlist hack, since data displaying for preloaded nodes is a little bit messy there\n        if (!this.nodes) {\n            this.nodes = results;\n        } else {\n            this.documentList.data.loadPage(results, true);\n        }\n\n        this.pagination = results.list.pagination;\n        this.highlight();\n    }\n\n    /**\n     * Predicate method to decide whether searchTerm fulfills the necessary criteria\n     */\n    isSearchTermLongEnough(): boolean {\n        return this.searchTerm.length > 3;\n    }\n\n    /**\n     * Hightlight the actual searchterm in the next frame\n     */\n    highlight(): void {\n        setTimeout(() => {\n            this.highlighter.highlight(this.searchTerm);\n        }, 0);\n    }\n\n    /**\n     * Invoked when user selects a node\n     *\n     * @param event CustomEvent for node-select\n     */\n    onNodeSelect(event: any): void {\n        this.attemptNodeSelection(event.detail.node.entry);\n    }\n\n    /**\n     * Sets showingSearchResults state to be able to differentiate between search results or folder results\n     */\n    onFolderChange(): void {\n        this.showingSearchResults = false;\n    }\n\n    /**\n     * Attempts to set the currently loaded node\n     */\n    onFolderLoaded(): void {\n        this.attemptNodeSelection(this.documentList.folderNode);\n    }\n\n    /**\n     * Selects node as chosen if it has the right permission, clears the selection otherwise\n     *\n     * @param entry\n     */\n    private attemptNodeSelection(entry: MinimalNodeEntryEntity): void {\n        if (this.contentService.hasPermission(entry, 'create')) {\n            this.chosenNode = entry;\n        } else {\n            this.resetChosenNode();\n        }\n    }\n\n    /**\n     * Clears the chosen node\n     */\n    resetChosenNode(): void {\n        this.chosenNode = null;\n    }\n\n    /**\n     * Emit event with the chosen node\n     */\n    choose(): void {\n        this.select.next([this.chosenNode]);\n    }\n\n    /**\n     * Close the dialog\n     */\n    close(): void {\n        this.containingDialog.close();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./contents-service/document-list/components/content-node-selector/content-node-selector.component.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Response } from '@angular/http';\nimport { MinimalNodeEntity, MinimalNodeEntryEntity, NodePaging } from 'alfresco-js-api';\nimport { AlfrescoApiService, AlfrescoAuthenticationService, AlfrescoContentService, LogService, PermissionsEnum, ThumbnailService } from 'ng2-alfresco-core';\nimport { Observable } from 'rxjs/Rx';\n\n@Injectable()\nexport class DocumentListService {\n\n    static ROOT_ID = '-root-';\n\n    constructor(authService: AlfrescoAuthenticationService,\n                private contentService: AlfrescoContentService,\n                private apiService: AlfrescoApiService,\n                private logService: LogService,\n                private thumbnailService: ThumbnailService) {\n    }\n\n    private getNodesPromise(folder: string, opts?: any): Promise<NodePaging> {\n\n        let rootNodeId = DocumentListService.ROOT_ID;\n        if (opts && opts.rootFolderId) {\n            rootNodeId = opts.rootFolderId;\n        }\n\n        let params: any = {\n            includeSource: true,\n            include: ['path', 'properties', 'allowableOperations']\n        };\n\n        if (folder) {\n            params.relativePath = folder;\n        }\n\n        if (opts) {\n            if (opts.maxItems) {\n                params.maxItems = opts.maxItems;\n            }\n            if (opts.skipCount) {\n                params.skipCount = opts.skipCount;\n            }\n        }\n\n        return this.apiService.getInstance().nodes.getNodeChildren(rootNodeId, params);\n    }\n\n    deleteNode(nodeId: string): Observable<any> {\n        return Observable.fromPromise(this.apiService.getInstance().nodes.deleteNode(nodeId));\n    }\n\n    /**\n     * Copy a node to destination node\n     *\n     * @param nodeId The id of the node to be copied\n     * @param targetParentId The id of the folder-node where the node have to be copied to\n     */\n    copyNode(nodeId: string, targetParentId: string) {\n        return Observable.fromPromise(this.apiService.getInstance().nodes.copyNode(nodeId, { targetParentId }))\n            .catch(err => this.handleError(err));\n    }\n\n    /**\n     * Move a node to destination node\n     *\n     * @param nodeId The id of the node to be moved\n     * @param targetParentId The id of the folder-node where the node have to be moved to\n     */\n    moveNode(nodeId: string, targetParentId: string) {\n        return Observable.fromPromise(this.apiService.getInstance().nodes.moveNode(nodeId, { targetParentId }))\n            .catch(err => this.handleError(err));\n    }\n\n    /**\n     * Create a new folder in the path.\n     * @param name Folder name\n     * @param parentId Parent folder ID\n     * @returns {any}\n     */\n    createFolder(name: string, parentId: string): Observable<MinimalNodeEntity> {\n        return Observable.fromPromise(this.apiService.getInstance().nodes.createFolder(name, '/', parentId))\n            .catch(err => this.handleError(err));\n    }\n\n    /**\n     * Gets the folder node with the specified relative name path below the root node.\n     * @param folder Path to folder.\n     * @param opts Options.\n     * @returns {Observable<NodePaging>} Folder entity.\n     */\n    getFolder(folder: string, opts?: any) {\n        return Observable.fromPromise(this.getNodesPromise(folder, opts))\n            .map(res => <NodePaging> res)\n            .catch(err => this.handleError(err));\n    }\n\n    getFolderNode(nodeId: string): Promise<MinimalNodeEntryEntity> {\n        let opts: any = {\n            includeSource: true,\n            include: ['path', 'properties', 'allowableOperations']\n        };\n\n        let nodes: any = this.apiService.getInstance().nodes;\n        return nodes.getNodeInfo(nodeId, opts);\n    }\n\n    /**\n     * Get thumbnail URL for the given document node.\n     * @param node Node to get URL for.\n     * @returns {string} URL address.\n     */\n    getDocumentThumbnailUrl(node: MinimalNodeEntity) {\n        return this.thumbnailService.getDocumentThumbnailUrl(node);\n    }\n\n    getMimeTypeIcon(mimeType: string): string {\n        return this.thumbnailService.getMimeTypeIcon(mimeType);\n    }\n\n    getDefaultMimeTypeIcon(): string {\n        return this.thumbnailService.getDefaultMimeTypeIcon();\n    }\n\n    hasPermission(node: any, permission: PermissionsEnum|string): boolean {\n        return this.contentService.hasPermission(node, permission);\n    }\n\n    private handleError(error: Response) {\n        // in a real world app, we may send the error to some remote logging infrastructure\n        // instead of just logging it to the console\n        this.logService.error(error);\n        return Observable.throw(error || 'Server error');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./contents-service/document-list/services/document-list.service.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './social';\nexport * from './tag';\nexport * from './webscript';\nexport * from './services';\nexport * from './document-list';\n\n\n\n// WEBPACK FOOTER //\n// ./contents-service/index.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './public-api';\n\n\n\n// WEBPACK FOOTER //\n// ./contents-service/social/index.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './rating.component';\nexport * from './like.component';\nexport * from './social-module';\n\n\n\n// WEBPACK FOOTER //\n// ./contents-service/social/public-api.ts","\n        var result = require(\"!!../../node_modules/raw-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./rating.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./contents-service/social/rating.component.scss\n// module id = 117\n// module chunks = 1","module.exports = \".adf-rating-container {\\n  overflow: hidden;\\n  width: 100%; }\\n  .adf-rating-container .adf-rating-star {\\n    float: left;\\n    transition: all .3s;\\n    padding: 1px;\\n    cursor: pointer; }\\n    .adf-rating-container .adf-rating-star .mat-list-item-content {\\n      padding: 0 2px !important; }\\n  .adf-rating-container .adf-colored-star {\\n    color: #ffe944; }\\n  .adf-rating-container .adf-grey-star {\\n    color: #808080; }\\n  .adf-rating-container .adf-stars-container {\\n    padding: 0 !important;\\n    margin: 0 !important;\\n    display: inline-block; }\\n  .adf-rating-container .adf-rating-star:hover {\\n    transform: rotate(13deg) scale(1.2); }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./node_modules/sass-loader/lib/loader.js!./contents-service/social/rating.component.scss\n// module id = 118\n// module chunks = 1","module.exports = \"<mat-list id=\\\"adf-rating-container\\\" class=\\\"adf-rating-container\\\">\\n    <mat-list-item class=\\\"adf-rating-star\\\" *ngFor=\\\"let currentRate of stars; let idx = index\\\">\\n            <span id=\\\"adf-rate-{{idx}}\\\">\\n                <mat-icon id=\\\"adf-grey-star-{{idx}}\\\" *ngIf=\\\"currentRate.fill\\\" class=\\\"adf-colored-star\\\"\\n                         (click)=\\\"updateVote(idx + 1)\\\">star_rate\\n                </mat-icon>\\n                <mat-icon id=\\\"adf-colored-star-{{idx}}\\\" *ngIf=\\\"!currentRate.fill\\\" class=\\\"adf-grey-star\\\"\\n                         (click)=\\\"updateVote(idx + 1)\\\">star_border\\n                </mat-icon>\\n            </span>\\n    </mat-list-item>\\n</mat-list>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./contents-service/social/rating.component.html\n// module id = 119\n// module chunks = 1","\n        var result = require(\"!!../../node_modules/raw-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./like.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./contents-service/social/like.component.scss\n// module id = 120\n// module chunks = 1","module.exports = \".adf-like-container {\\n  overflow: hidden;\\n  width: 100%; }\\n  .adf-like-container .adf-like {\\n    padding: 5px;\\n    cursor: pointer;\\n    float: left;\\n    margin: 5px 0px 5px 5px; }\\n  .adf-like-container .adf-like-select {\\n    cursor: pointer;\\n    color: #2196f3; }\\n  .adf-like-container .adf-like-select:hover {\\n    cursor: pointer;\\n    color: #808080; }\\n  .adf-like-container .adf-like-grey {\\n    cursor: pointer;\\n    color: #808080; }\\n  .adf-like-container .adf-like-grey:hover {\\n    cursor: pointer;\\n    color: #2196f3; }\\n  .adf-like-container .adf-like-counter {\\n    float: left;\\n    padding: 13px 0 0 0; }\\n  .adf-like-container .adf-left {\\n    float: left;\\n    padding: 13px 0 0 4px; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./node_modules/sass-loader/lib/loader.js!./contents-service/social/like.component.scss\n// module id = 121\n// module chunks = 1","module.exports = \"<div id=\\\"adf-like-container\\\" class=\\\"adf-like-container\\\">\\n    <div class=\\\"adf-like\\\">\\n        <span id=\\\"adf-like-{{nodeId}}\\\" [ngClass]=\\\"{'adf-like-select': isLike ,'adf-like-grey': !isLike  }\\\"\\n              (click)=\\\"likeClick()\\\">\\n            <mat-icon>thumb_up</mat-icon>\\n        </span>\\n    </div>\\n    <div id=\\\"adf-like-counter\\\" class=\\\"adf-like-counter\\\">{{likesCounter}}</div>\\n    <div class=\\\"adf-left\\\" *ngIf=\\\"likesCounter<=1\\\">Like</div>\\n    <div class=\\\"adf-left\\\" *ngIf=\\\"likesCounter>1\\\">Likes</div>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./contents-service/social/like.component.html\n// module id = 122\n// module chunks = 1","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { CoreModule } from 'ng2-alfresco-core';\nimport { MaterialModule } from '../material.module';\n\nimport { RatingService } from '../services/rating.service';\nimport { LikeComponent } from './like.component';\nimport { RatingComponent } from './rating.component';\n\n@NgModule({\n    imports: [\n        CoreModule,\n        MaterialModule\n    ],\n    exports: [\n        RatingComponent,\n        LikeComponent\n    ],\n    declarations: [\n        RatingComponent,\n        LikeComponent\n    ],\n    providers: [\n        RatingService\n    ]\n})\nexport class SocialModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./contents-service/social/social-module.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './public-api';\n\n\n\n// WEBPACK FOOTER //\n// ./contents-service/tag/index.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './tag-actions.component';\nexport * from './tag-list.component';\nexport * from './tag-node-list.component';\nexport * from './tag-module';\n\n\n\n// WEBPACK FOOTER //\n// ./contents-service/tag/public-api.ts","module.exports = \"<mat-list>\\n    <mat-list-item *ngFor=\\\"let currentEntry of tagsEntries; let idx = index\\\">\\n        <div class=\\\"adf-tag-actions-container\\\" id=\\\"tag_delete_{{idx}}\\\" (click)=\\\"removeTag(currentEntry.entry.id)\\\">\\n            <div class=\\\"adf-tag-actions-delete-text\\\" id=\\\"tag_name_{{idx}}\\\">\\n                {{currentEntry.entry.tag}}\\n            </div>\\n            <mat-icon class=\\\"adf-tag-actions-delete-icon\\\">delete</mat-icon>\\n        </div>\\n    </mat-list-item>\\n</mat-list>\\n<table class=\\\"adf-full-width\\\" cellspacing=\\\"0\\\">\\n    <tr>\\n        <td>\\n            <mat-form-field class=\\\"adf-full-width\\\">\\n                <input matInput placeholder=\\\"{{'TAG.LABEL.NEWTAG' | translate }}\\\"\\n                       type=\\\"text\\\"\\n                       (keypress)=\\\"cleanErrorMsg()\\\"\\n                       [(ngModel)]=\\\"newTagName\\\"\\n                       id=\\\"new-tag-text\\\"/>\\n                <mat-hint *ngIf=\\\"error\\\" [ngStyle]=\\\"{'color': 'red'}\\\" align=\\\"start\\\">{{errorMsg}}</mat-hint>\\n            </mat-form-field>\\n        </td>\\n        <td>\\n            <button class=\\\"adf-full-width\\\" color=\\\"primary\\\" id=\\\"add-tag\\\" (click)=\\\"addTag()\\\" [disabled]=\\\"disableAddTag\\\"\\n                    mat-raised-button>\\n                {{'TAG.BUTTON.ADD' | translate }}\\n            </button>\\n        </td>\\n    </tr>\\n</table>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./contents-service/tag/tag-actions.component.html\n// module id = 126\n// module chunks = 1","\n        var result = require(\"!!../../node_modules/raw-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./tag-actions.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./contents-service/tag/tag-actions.component.scss\n// module id = 127\n// module chunks = 1","module.exports = \".adf-full-width {\\n  width: 100%; }\\n\\n.adf-tag-actions-delete-icon {\\n  float: right;\\n  cursor: pointer; }\\n\\n.adf-tag-actions-delete-text {\\n  font-size: 16px;\\n  float: left; }\\n\\n.adf-tag-actions-container {\\n  padding: 8px 0 8px 0;\\n  height: 20px; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./node_modules/sass-loader/lib/loader.js!./contents-service/tag/tag-actions.component.scss\n// module id = 128\n// module chunks = 1","module.exports = \"<mat-list>\\n    <mat-list-item *ngFor=\\\"let currentEntry of tagsEntries; let idx = index\\\">\\n        <div class=\\\"adf-list-tag\\\" id=\\\"tag_name_{{idx}}\\\">{{currentEntry.entry.tag}}</div>\\n    </mat-list-item>\\n</mat-list>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./contents-service/tag/tag-list.component.html\n// module id = 129\n// module chunks = 1","\n        var result = require(\"!!../../node_modules/raw-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./tag-list.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./contents-service/tag/tag-list.component.scss\n// module id = 130\n// module chunks = 1","module.exports = \".adf-list-tag {\\n  padding: 16px;\\n  font-size: 16px; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./node_modules/sass-loader/lib/loader.js!./contents-service/tag/tag-list.component.scss\n// module id = 131\n// module chunks = 1","module.exports = \"<mat-chip-list>\\n    <mat-chip class=\\\"adf-tag-chips adf-primary-background-color\\\" *ngFor=\\\"let currentEntry of tagsEntries; let idx = index\\\">\\n        <span id=\\\"tag_name_{{idx}}\\\">{{currentEntry.entry.tag}}</span>\\n        <button class=\\\"adf-tag-chips-delete\\\" id=\\\"tag_delete_{{idx}}\\\" type=\\\"button\\\" (click)=\\\"removeTag(currentEntry.entry.id)\\\">\\n            <mat-icon class=\\\"adf-tag-chips-delete-icon adf-primary-contrast-text-color\\\" matChipRemove>cancel</mat-icon>\\n        </button>\\n    </mat-chip>\\n</mat-chip-list>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./contents-service/tag/tag-node-list.component.html\n// module id = 132\n// module chunks = 1","\n        var result = require(\"!!../../node_modules/raw-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./tag-node-list.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./contents-service/tag/tag-node-list.component.scss\n// module id = 133\n// module chunks = 1","module.exports = \".adf-tag-chips-delete {\\n  overflow: visible;\\n  cursor: pointer;\\n  height: 17px;\\n  width: 20px;\\n  float: right;\\n  border: 0;\\n  background: none;\\n  padding: 0;\\n  margin: -1px 0px 0px 10px; }\\n\\n.adf-tag-chips-delete-icon {\\n  font-size: 20px;\\n  background-repeat: no-repeat;\\n  display: inline-block;\\n  fill: currentColor;\\n  height: 20px;\\n  width: 20px; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./node_modules/sass-loader/lib/loader.js!./contents-service/tag/tag-node-list.component.scss\n// module id = 134\n// module chunks = 1","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { CoreModule, TRANSLATION_PROVIDER } from 'ng2-alfresco-core';\nimport { MaterialModule } from '../material.module';\nimport { TagService } from '../services/tag.service';\nimport { TagActionsComponent } from './tag-actions.component';\nimport { TagListComponent } from './tag-list.component';\nimport { TagNodeListComponent } from './tag-node-list.component';\n\n@NgModule({\n    imports: [\n        CoreModule,\n        MaterialModule\n    ],\n    exports: [\n        TagActionsComponent,\n        TagListComponent,\n        TagNodeListComponent\n    ],\n    declarations: [\n        TagActionsComponent,\n        TagListComponent,\n        TagNodeListComponent\n    ],\n    providers: [\n        TagService,\n        {\n            provide: TRANSLATION_PROVIDER,\n            multi: true,\n            useValue: {\n                name: 'ng2-alfresco-tag',\n                source: 'assets/ng2-alfresco-tag'\n            }\n        }\n    ]\n})\nexport class TagModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./contents-service/tag/tag-module.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './public-api';\n\n\n\n// WEBPACK FOOTER //\n// ./contents-service/webscript/index.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './webscript.component';\nexport * from './webscript-module';\n\n\n\n// WEBPACK FOOTER //\n// ./contents-service/webscript/public-api.ts","module.exports = \"<div *ngIf=\\\"showData\\\">\\n    <div *ngIf=\\\"contentType === 'JSON'\\\" id=\\\"webscript-data-JSON\\\">{{data | json}}</div>\\n    <div *ngIf=\\\"contentType === 'HTML'\\\" id=\\\"webscript-data-HTML\\\" [innerHTML]=\\\"data\\\"></div>\\n    <div *ngIf=\\\"contentType === 'TEXT'\\\" id=\\\"webscript-data-TEXT\\\">{{data}}</div>\\n    <div *ngIf=\\\"isDataTableContent()\\\">\\n        <adf-datatable id=\\\"webscript-datatable-wrapper\\\" [data]=\\\"data\\\"></adf-datatable>\\n        <div>\\n            <div *ngIf=\\\"showError\\\" id=\\\"error\\\">{{'WEBSCRIPT.ERROR' | translate: {\\n                data: data,\\n                contentType: contentType\\n                }\\n                }}\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./contents-service/webscript/webscript.component.html\n// module id = 138\n// module chunks = 1","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { CoreModule, TRANSLATION_PROVIDER } from 'ng2-alfresco-core';\nimport { DataTableModule } from 'ng2-alfresco-datatable';\nimport { MaterialModule } from '../material.module';\nimport { WebscriptComponent } from './webscript.component';\n\n@NgModule({\n    imports: [\n        CoreModule,\n        MaterialModule,\n        DataTableModule\n    ],\n    exports: [\n        WebscriptComponent\n    ],\n    declarations: [\n        WebscriptComponent\n    ],\n    providers: [\n        {\n            provide: TRANSLATION_PROVIDER,\n            multi: true,\n            useValue: {\n                name: 'ng2-alfresco-webscript',\n                source: 'assets/ng2-alfresco-webscript'\n            }\n        }\n    ]\n})\nexport class WebScriptModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./contents-service/webscript/webscript-module.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './public-api';\n\n\n\n// WEBPACK FOOTER //\n// ./contents-service/services/index.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './rating.service';\nexport * from './tag.service';\n\n\n\n// WEBPACK FOOTER //\n// ./contents-service/services/public-api.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './public-api';\n\n\n\n// WEBPACK FOOTER //\n// ./contents-service/document-list/index.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './components/document-list.component';\nexport * from './components/node.event';\nexport * from './components/content-column/content-column.component';\nexport * from './components/content-column/content-column-list.component';\nexport * from './components/content-action/content-action.component';\nexport * from './components/content-action/content-action-list.component';\nexport * from './components/content-node-selector/content-node-selector.component';\nexport * from './components/empty-folder/empty-folder-content.directive';\nexport * from './components/no-permission/no-permission-content.directive';\nexport * from './components/breadcrumb/breadcrumb.component';\nexport * from './components/site-dropdown/sites-dropdown.component';\n\n// data\nexport * from './data/share-datatable-adapter';\nexport * from './data/share-data-row.model';\n\n// services\nexport * from './services/folder-actions.service';\nexport * from './services/document-actions.service';\nexport * from './services/document-list.service';\nexport * from './services/node-actions.service';\n\n// models\nexport * from './models/content-action.model';\nexport * from './models/document-library.model';\nexport * from './models/permissions.model';\nexport * from './models/permissions-style.model';\n\n\n\n// WEBPACK FOOTER //\n// ./contents-service/document-list/public-api.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let presetsDefaultModel = {\n    '-trashcan-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'name',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'path',\n            type: 'location',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.LOCATION',\n            format: this.locationFormat,\n            sortable: true\n        },\n        {\n            key: 'content.sizeInBytes',\n            type: 'fileSize',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SIZE',\n            sortable: true\n        },\n        {\n            key: 'archivedAt',\n            type: 'date',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.DELETED_ON',\n            format: 'timeAgo',\n            sortable: true\n        },\n        {\n            key: 'archivedByUser.displayName',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.DELETED_BY',\n            sortable: true\n        }\n    ],\n    '-sites-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'title',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'visibility',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.STATUS',\n            sortable: true\n        }\n    ],\n    '-mysites-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'title',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'visibility',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.STATUS',\n            sortable: true\n        }\n    ],\n    '-favorites-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'name',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'path',\n            type: 'location',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.LOCATION',\n            format: this.locationFormat,\n            sortable: true\n        },\n        {\n            key: 'content.sizeInBytes',\n            type: 'fileSize',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SIZE',\n            sortable: true\n        },\n        {\n            key: 'modifiedAt',\n            type: 'date',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_ON',\n            format: 'timeAgo',\n            sortable: true\n        },\n        {\n            key: 'modifiedByUser.displayName',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_BY',\n            sortable: true\n        }\n    ],\n    '-recent-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'name',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'path',\n            type: 'location',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.LOCATION',\n            cssClass: 'ellipsis-cell',\n            format: this.locationFormat,\n            sortable: true\n        },\n        {\n            key: 'content.sizeInBytes',\n            type: 'fileSize',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SIZE',\n            sortable: true\n        },\n        {\n            key: 'modifiedAt',\n            type: 'date',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_ON',\n            format: 'timeAgo',\n            sortable: true\n        }\n    ],\n    '-sharedlinks-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'name',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'path',\n            type: 'location',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.LOCATION',\n            cssClass: 'ellipsis-cell',\n            format: this.locationFormat,\n            sortable: true\n        },\n        {\n            key: 'content.sizeInBytes',\n            type: 'fileSize',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SIZE',\n            sortable: true\n        },\n        {\n            key: 'modifiedAt',\n            type: 'date',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_ON',\n            format: 'timeAgo',\n            sortable: true\n        },\n        {\n            key: 'modifiedByUser.displayName',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_BY',\n            sortable: true\n        },\n        {\n            key: 'sharedByUser.displayName',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SHARED_BY',\n            sortable: true\n        }\n    ],\n    'default': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'name',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'content.sizeInBytes',\n            type: 'fileSize',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SIZE',\n            sortable: true\n        },\n        {\n            key: 'modifiedAt',\n            type: 'date',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_ON',\n            format: 'timeAgo',\n            sortable: true\n        },\n        {\n            key: 'modifiedByUser.displayName',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_BY',\n            sortable: true\n        }\n    ]\n};\n\n\n\n// WEBPACK FOOTER //\n// ./contents-service/document-list/models/preset.model.ts","module.exports = __webpack_public_path__ + \"contents-service/document-list/assets/images/empty_doc_lib.a89c064e4edfa54d2e347bf594947219.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./contents-service/document-list/assets/images/empty_doc_lib.svg\n// module id = 145\n// module chunks = 1","\n        var result = require(\"!!../../../node_modules/raw-loader/index.js!../../../node_modules/sass-loader/lib/loader.js!./document-list.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./contents-service/document-list/components/document-list.component.scss\n// module id = 146\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./node_modules/sass-loader/lib/loader.js!./contents-service/document-list/components/document-list.component.scss\n// module id = 147\n// module chunks = 1","module.exports = \"<adf-datatable\\n    [selectionMode]=\\\"selectionMode\\\"\\n    [data]=\\\"data\\\"\\n    [actions]=\\\"contentActions\\\"\\n    [actionsPosition]=\\\"contentActionsPosition\\\"\\n    [multiselect]=\\\"multiselect\\\"\\n    [allowDropFiles]=\\\"allowDropFiles\\\"\\n    [contextMenu]=\\\"contextMenuActions\\\"\\n    [rowStyle]=\\\"rowStyle\\\"\\n    [rowStyleClass]=\\\"rowStyleClass\\\"\\n    [loading]=\\\"loading\\\"\\n    [noPermission]=\\\"noPermission\\\"\\n    [showHeader]=\\\"!isEmpty()\\\"\\n    (showRowContextMenu)=\\\"onShowRowContextMenu($event)\\\"\\n    (showRowActionsMenu)=\\\"onShowRowActionsMenu($event)\\\"\\n    (executeRowAction)=\\\"onExecuteRowAction($event)\\\"\\n    (rowClick)=\\\"onNodeClick($event.value?.node)\\\"\\n    (rowDblClick)=\\\"onNodeDblClick($event.value?.node)\\\"\\n    (row-select)=\\\"onNodeSelect($event.detail)\\\"\\n    (row-unselect)=\\\"onNodeUnselect($event.detail)\\\">\\n\\n    <div *ngIf=\\\"!isEmptyTemplateDefined()\\\">\\n        <no-content-template>\\n            <ng-template>\\n                <adf-empty-list>\\n                    <div class=\\\"adf-empty-list_template adf-empty-folder\\\">\\n                        <div class=\\\"adf-empty-folder-this-space-is-empty\\\">{{'ADF-DOCUMENT-LIST.EMPTY.HEADER' | translate}}</div>\\n                        <div fxHide.lt-md=\\\"true\\\" class=\\\"adf-empty-folder-drag-drop\\\">{{ 'ADF-DATATABLE.EMPTY.DRAG-AND-DROP.TITLE' | translate }}</div>\\n                        <div fxHide.lt-md=\\\"true\\\" class=\\\"adf-empty-folder-any-files-here-to-add\\\">{{ 'ADF-DATATABLE.EMPTY.DRAG-AND-DROP.SUBTITLE' | translate }}</div>\\n                        <img class=\\\"adf-empty-folder-image\\\" [src]=\\\"emptyFolderImageUrl\\\">\\n                    </div>\\n                    <!-- <div adf-empty-list-header class=\\\"adf-empty-list-header\\\"> {{'ADF-DOCUMENT-LIST.EMPTY.HEADER' | translate}} </div> -->\\n                </adf-empty-list>\\n            </ng-template>\\n        </no-content-template>\\n    </div>\\n\\n    <div *ngIf=\\\"!isNoPermissionTemplateDefined()\\\">\\n        <no-permission-template>\\n            <ng-template>\\n                <div class=\\\"adf-no-permission__template\\\">\\n                    <mat-icon>ic_error</mat-icon>\\n                    <p class=\\\"adf-no-permission__template--text\\\">{{ 'ADF-DOCUMENT-LIST.NO_PERMISSION' | translate }}</p>\\n                </div>\\n            </ng-template>\\n        </no-permission-template>\\n    </div>\\n\\n    <div>\\n        <loading-content-template>\\n            <ng-template>\\n                <div class=\\\"adf-document-list-loading-container\\\">\\n                    <mat-progress-spinner\\n                        id=\\\"adf-document-list-loading\\\"\\n                        class=\\\"adf-document-list-loading-margin\\\"\\n                        [color]=\\\"'primary'\\\"\\n                        [mode]=\\\"'indeterminate'\\\">\\n                    </mat-progress-spinner>\\n                </div>\\n            </ng-template>\\n        </loading-content-template>\\n    </div>\\n</adf-datatable>\\n\\n<ng-container *ngIf=\\\"isPaginationEnabled()\\\">\\n    <adf-pagination\\n        *ngIf=\\\"isPaginationNeeded()\\\"\\n        class=\\\"adf-documentlist-pagination\\\"\\n        (changePageSize)=\\\"onChangePageSize($event)\\\"\\n        (changePageNumber)=\\\"onChangePageNumber($event)\\\"\\n        (nextPage)=\\\"onNextPage($event)\\\"\\n        (prevPage)=\\\"onPrevPage($event)\\\"\\n        [pagination]=\\\"pagination\\\"\\n        [supportedPageSizes]=\\\"supportedPageSizes\\\">\\n    </adf-pagination>\\n\\n    <adf-infinite-pagination\\n        *ngIf=\\\"!isPaginationNeeded()\\\"\\n        [pagination]=\\\"pagination\\\"\\n        [pageSize]=\\\"pageSize\\\"\\n        [loading]=\\\"infiniteLoading\\\"\\n        (loadMore)=\\\"loadNextBatch($event)\\\">\\n            {{ 'ADF-DOCUMENT-LIST.LAYOUT.LOAD_MORE' | translate }}\\n    </adf-infinite-pagination>\\n</ng-container>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./contents-service/document-list/components/document-list.component.html\n// module id = 148\n// module chunks = 1","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { AfterContentInit, Component, ContentChild, Input, OnInit, TemplateRef } from '@angular/core';\nimport { LogService } from 'ng2-alfresco-core';\nimport { DataColumn } from 'ng2-alfresco-datatable';\n\nimport { ContentColumnListComponent } from './content-column-list.component';\n\n@Component({\n    selector: 'content-column',\n    template: ''\n})\nexport class ContentColumnComponent implements OnInit, AfterContentInit, DataColumn {\n\n    @Input()\n    key: string;\n\n    @Input()\n    type: string = 'text';\n\n    @Input()\n    format: string;\n\n    @Input()\n    sortable: boolean = false;\n\n    @Input()\n    title: string = '';\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    /**\n     * Title to be used for screen readers.\n     */\n    @Input('sr-title')\n    srTitle: string;\n\n    @Input('class')\n    cssClass: string;\n\n    constructor(private list: ContentColumnListComponent, private logService: LogService) {\n        this.logService.log('ContentColumnComponent is deprecated starting with 1.7.0 and may be removed in future versions. Use DataColumnComponent instead.');\n    }\n\n    ngOnInit() {\n        if (!this.srTitle && this.key === '$thumbnail') {\n            this.srTitle = 'Thumbnail';\n        }\n    }\n\n    ngAfterContentInit() {\n        this.register();\n    }\n\n    register(): boolean {\n        if (this.list) {\n            return this.list.registerColumn(this);\n        }\n        return false;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./contents-service/document-list/components/content-column/content-column.component.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component } from '@angular/core';\nimport { LogService } from 'ng2-alfresco-core';\nimport { DataColumn } from 'ng2-alfresco-datatable';\n\nimport { DocumentListComponent } from './../document-list.component';\n\n@Component({\n    selector: 'content-columns',\n    template: ''\n})\nexport class ContentColumnListComponent {\n\n    constructor(private documentList: DocumentListComponent, private logService: LogService ) {\n        this.logService.log('ContentColumnListComponent is deprecated starting with 1.7.0 and may be removed in future versions. Use DataColumnListComponent instead.');\n    }\n\n    /**\n     * Registers column model within the parent document list component.\n     * @param column Column definition model to register.\n     */\n    registerColumn(column: DataColumn): boolean {\n        if (this.documentList && column) {\n            let columns = this.documentList.data.getColumns();\n            columns.push(column);\n            return true;\n        }\n        return false;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./contents-service/document-list/components/content-column/content-column-list.component.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\n\nimport { ContentActionHandler } from '../../models/content-action.model';\nimport { DocumentActionsService } from '../../services/document-actions.service';\nimport { FolderActionsService } from '../../services/folder-actions.service';\nimport { ContentActionModel } from './../../models/content-action.model';\nimport { ContentActionListComponent } from './content-action-list.component';\n\n@Component({\n    selector: 'content-action',\n    template: '',\n    providers: [\n        DocumentActionsService,\n        FolderActionsService\n    ]\n})\nexport class ContentActionComponent implements OnInit, OnChanges {\n\n    @Input()\n    title: string = 'Action';\n\n    @Input()\n    icon: string;\n\n    @Input()\n    handler: string;\n\n    @Input()\n    target: string;\n\n    @Input()\n    permission: string;\n\n    @Input()\n    disableWithNoPermission: boolean;\n\n    @Input()\n    disabled: boolean = false;\n\n    @Output()\n    execute = new EventEmitter();\n\n    @Output()\n    permissionEvent = new EventEmitter();\n\n    @Output()\n    error = new EventEmitter();\n\n    @Output()\n    success = new EventEmitter();\n\n    model: ContentActionModel;\n\n    constructor(\n        private list: ContentActionListComponent,\n        private documentActions: DocumentActionsService,\n        private folderActions: FolderActionsService) {\n        this.model = new ContentActionModel();\n    }\n\n    ngOnInit() {\n        this.model = new ContentActionModel({\n            title: this.title,\n            icon: this.icon,\n            permission: this.permission,\n            disableWithNoPermission: this.disableWithNoPermission,\n            target: this.target,\n            disabled: this.disabled\n        });\n\n        if (this.handler) {\n            this.model.handler = this.getSystemHandler(this.target, this.handler);\n        }\n\n        if (this.execute) {\n            this.model.execute = (value: any): void => {\n                this.execute.emit({ value });\n            };\n        }\n\n        this.register();\n    }\n\n    register(): boolean {\n        if (this.list) {\n            return this.list.registerAction(this.model);\n        }\n        return false;\n    }\n\n    ngOnChanges(changes) {\n        // update localizable properties\n        this.model.title = this.title;\n    }\n\n    getSystemHandler(target: string, name: string): ContentActionHandler {\n        if (target) {\n            let ltarget = target.toLowerCase();\n\n            if (ltarget === 'document') {\n                if (this.documentActions) {\n                    this.documentActions.permissionEvent.subscribe((permision) => {\n                        this.permissionEvent.emit(permision);\n                    });\n\n                    this.documentActions.error.subscribe((errors) => {\n                        this.error.emit(errors);\n                    });\n\n                    this.documentActions.success.subscribe((message) => {\n                        this.success.emit(message);\n                    });\n\n                    return this.documentActions.getHandler(name);\n                }\n                return null;\n            }\n\n            if (ltarget === 'folder') {\n                if (this.folderActions) {\n                    this.folderActions.permissionEvent.subscribe((permision) => {\n                        this.permissionEvent.emit(permision);\n                    });\n\n                    this.folderActions.error.subscribe((errors) => {\n                        this.error.emit(errors);\n                    });\n\n                    this.folderActions.success.subscribe((message) => {\n                        this.success.emit(message);\n                    });\n\n                    return this.folderActions.getHandler(name);\n                }\n                return null;\n            }\n        }\n        return null;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./contents-service/document-list/components/content-action/content-action.component.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_152__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"rxjs/Observable\"\n// module id = 152\n// module chunks = 1","\n        var result = require(\"!!../../../../node_modules/raw-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./content-node-selector.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./contents-service/document-list/components/content-node-selector/content-node-selector.component.scss\n// module id = 153\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./node_modules/sass-loader/lib/loader.js!./contents-service/document-list/components/content-node-selector/content-node-selector.component.scss\n// module id = 154\n// module chunks = 1","module.exports = \"<header matDialogTitle\\n    class=\\\"adf-content-node-selector-title\\\"\\n    data-automation-id=\\\"content-node-selector-title\\\">{{title}}</header>\\n\\n<section matDialogContent\\n    class=\\\"adf-content-node-selector-content\\\"\\n    (node-select)=\\\"onNodeSelect($event)\\\">\\n\\n    <mat-form-field floatPlaceholder=\\\"never\\\" class=\\\"adf-content-node-selector-content-input\\\">\\n        <input #searchInput\\n            matInput\\n            placeholder=\\\"Search\\\"\\n            (input)=\\\"search(searchInput.value)\\\"\\n            [value]=\\\"searchTerm\\\"\\n            data-automation-id=\\\"content-node-selector-search-input\\\">\\n\\n        <mat-icon *ngIf=\\\"searchTerm.length > 0\\\"\\n                matSuffix (click)=\\\"clear()\\\"\\n                class=\\\"adf-content-node-selector-content-input-icon\\\"\\n                data-automation-id=\\\"content-node-selector-search-clear\\\">clear</mat-icon>\\n\\n        <mat-icon *ngIf=\\\"searchTerm.length === 0\\\"\\n            matSuffix\\n            class=\\\"adf-content-node-selector-content-input-icon\\\"\\n            data-automation-id=\\\"content-node-selector-search-icon\\\">search</mat-icon>\\n\\n    </mat-form-field>\\n\\n    <adf-sites-dropdown\\n        (change)=\\\"siteChanged($event)\\\"\\n        data-automation-id=\\\"content-node-selector-sites-combo\\\"></adf-sites-dropdown>\\n\\n    <adf-toolbar>\\n        <adf-toolbar-title>\\n            <adf-dropdown-breadcrumb *ngIf=\\\"needBreadcrumbs()\\\"\\n                class=\\\"adf-content-node-selector-content-breadcrumb\\\"\\n                [target]=\\\"documentList\\\"\\n                [folderNode]=\\\"breadcrumbFolderNode\\\"\\n                data-automation-id=\\\"content-node-selector-content-breadcrumb\\\">\\n            </adf-dropdown-breadcrumb>\\n        </adf-toolbar-title>\\n    </adf-toolbar>\\n\\n    <div class=\\\"adf-content-node-selector-content-list\\\" data-automation-id=\\\"content-node-selector-content-list\\\">\\n        <adf-document-list\\n                    #documentList\\n                    adf-highlight\\n                    adf-highlight-selector=\\\".cell-value adf-datatable-cell .adf-datatable-cell-value\\\"\\n                    [node]=\\\"nodes\\\"\\n                    [rowFilter]=\\\"rowFilter\\\"\\n                    [imageResolver]=\\\"imageResolver\\\"\\n                    [currentFolderId]=\\\"folderIdToShow\\\"\\n                    selectionMode=\\\"single\\\"\\n                    [contextMenuActions]=\\\"false\\\"\\n                    [contentActions]=\\\"false\\\"\\n                    [allowDropFiles]=\\\"false\\\"\\n                    [enablePagination]=\\\"!showingSearchResults\\\"\\n                    paginationStrategy=\\\"{{paginationStrategy}}\\\"\\n                    [pageSize]=\\\"pageSize\\\"\\n                    (folderChange)=\\\"onFolderChange()\\\"\\n                    (ready)=\\\"onFolderLoaded()\\\"\\n                    data-automation-id=\\\"content-node-selector-document-list\\\">\\n            <empty-folder-content>\\n                <ng-template>\\n                    <div>{{ 'NODE_SELECTOR.NO_RESULTS' | translate }}</div>\\n                </ng-template>\\n            </empty-folder-content>\\n        </adf-document-list>\\n\\n        <adf-infinite-pagination\\n            *ngIf=\\\"showingSearchResults && isSearchTermLongEnough()\\\"\\n            [pagination]=\\\"pagination\\\"\\n            [pageSize]=\\\"pageSize\\\"\\n            [loading]=\\\"loadingSearchResults\\\"\\n            (loadMore)=\\\"getNextPageOfSearch($event)\\\"\\n            data-automation-id=\\\"content-node-selector-search-pagination\\\">\\n            {{ 'ADF-DOCUMENT-LIST.LAYOUT.LOAD_MORE' | translate }}\\n        </adf-infinite-pagination>\\n    </div>\\n\\n</section>\\n\\n<footer matDialogActions class=\\\"adf-content-node-selector-actions\\\">\\n\\n    <button *ngIf=\\\"inDialog\\\"\\n        mat-button\\n        class=\\\"adf-content-node-selector-actions-cancel\\\"\\n        (click)=\\\"close()\\\"\\n        data-automation-id=\\\"content-node-selector-actions-cancel\\\">{{ 'NODE_SELECTOR.CANCEL' | translate }}\\n    </button>\\n\\n    <button mat-button\\n        [disabled]=\\\"!chosenNode\\\"\\n        class=\\\"adf-content-node-selector-actions-choose\\\"\\n        (click)=\\\"choose()\\\"\\n        data-automation-id=\\\"content-node-selector-actions-choose\\\">{{ 'NODE_SELECTOR.CHOOSE' | translate }}\\n    </button>\\n\\n</footer>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./contents-service/document-list/components/content-node-selector/content-node-selector.component.html\n// module id = 155\n// module chunks = 1","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AfterContentInit, ContentChild, Directive, TemplateRef } from '@angular/core';\nimport { DocumentListComponent } from './../document-list.component';\n\n@Directive({\n    selector: 'empty-folder-content'\n})\nexport class EmptyFolderContentDirective implements AfterContentInit {\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    constructor(private documentList: DocumentListComponent) {\n    }\n\n    ngAfterContentInit() {\n        this.documentList.emptyFolderTemplate = this.template;\n        this.documentList.dataTable.noContentTemplate = this.template;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./contents-service/document-list/components/empty-folder/empty-folder-content.directive.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AfterContentInit, ContentChild, Directive, TemplateRef } from '@angular/core';\nimport { DocumentListComponent } from './../document-list.component';\n\n@Directive({\n    selector: 'no-permission-content'\n})\nexport class NoPermissionContentDirective implements AfterContentInit {\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    constructor(private documentList: DocumentListComponent) {\n    }\n\n    ngAfterContentInit() {\n        this.documentList.noPermissionTemplate = this.template;\n        this.documentList.dataTable.noPermissionTemplate = this.template;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./contents-service/document-list/components/no-permission/no-permission-content.directive.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { MinimalNodeEntryEntity, PathElementEntity } from 'alfresco-js-api';\nimport { DocumentListComponent } from '../document-list.component';\n\n@Component({\n    selector: 'adf-breadcrumb',\n    template: require('./breadcrumb.component.html'),\n    styles: [require('./breadcrumb.component.scss')],\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        'class': 'adf-breadcrumb'\n    }\n})\nexport class BreadcrumbComponent implements OnChanges {\n\n    @Input()\n    folderNode: MinimalNodeEntryEntity = null;\n\n    @Input()\n    root: string = null;\n\n    @Input()\n    rootId: string = null;\n\n    @Input()\n    target: DocumentListComponent;\n\n    route: PathElementEntity[] = [];\n\n    get hasRoot(): boolean {\n        return !!this.root;\n    }\n\n    @Output()\n    navigate: EventEmitter<PathElementEntity> = new EventEmitter<PathElementEntity>();\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.folderNode) {\n            const node: MinimalNodeEntryEntity = changes.folderNode.currentValue;\n            this.route = this.parseRoute(node);\n        }\n    }\n\n    parseRoute(node: MinimalNodeEntryEntity): PathElementEntity[] {\n        if (node && node.path) {\n            const route = <PathElementEntity[]> (node.path.elements || []).slice();\n\n            route.push(<PathElementEntity> {\n                id: node.id,\n                name: node.name\n            });\n\n            const rootPos = this.getElementPosition(route, this.rootId);\n            if (rootPos > 0) {\n                route.splice(0, rootPos);\n            }\n\n            if (rootPos === -1 && this.rootId) {\n                route[0].id = this.rootId;\n            }\n\n            if (this.root) {\n                route[0].name = this.root;\n            }\n\n            return route;\n        }\n\n        return [];\n    }\n\n    private getElementPosition(route: PathElementEntity[], nodeId: string): number {\n        let result: number = -1;\n\n        if (route && route.length > 0 && nodeId) {\n            result = route.findIndex(el => el.id === nodeId);\n        }\n\n        return result;\n    }\n\n    onRoutePathClick(route: PathElementEntity, event?: Event): void {\n        if (event) {\n            event.preventDefault();\n        }\n\n        if (route) {\n            this.navigate.emit(route);\n\n            if (this.target) {\n                this.target.loadFolderByNodeId(route.id);\n            }\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./contents-service/document-list/components/breadcrumb/breadcrumb.component.ts","module.exports = \"<div *ngIf=\\\"folderNode\\\" data-automation-id=\\\"breadcrumb\\\" class=\\\"adf-breadcrumb-container\\\">\\n    <li *ngFor=\\\"let item of route; let last = last\\\"\\n        [class.active]=\\\"last\\\"\\n        [ngSwitch]=\\\"last\\\"\\n        title=\\\"{{ item.name | translate }}\\\"\\n        class=\\\"adf-breadcrumb-item\\\">\\n\\n        <a *ngSwitchDefault href=\\\"#\\\" [attr.data-automation-id]=\\\"'breadcrumb_' + item.name\\\"\\n           class=\\\"adf-breadcrumb-item-anchor\\\"\\n           (click)=\\\"onRoutePathClick(item, $event)\\\">\\n            {{ item.name | translate }}\\n        </a>\\n\\n        <div *ngSwitchCase=\\\"true\\\" class=\\\"adf-breadcrumb-item-current\\\">\\n            {{ item.name | translate }}\\n        </div>\\n\\n        <mat-icon class=\\\"adf-breadcrumb-item-chevron\\\" *ngIf=\\\"!last\\\">\\n            chevron_right\\n        </mat-icon>\\n    </li>\\n</div>\\n<div *ngIf=\\\"!folderNode && hasRoot\\\">\\n    <li class=\\\"adf-breadcrumb-item\\\">\\n        <div class=\\\"adf-breadcrumb-item-current\\\">\\n            {{ root | translate }}\\n        </div>\\n    </li>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./contents-service/document-list/components/breadcrumb/breadcrumb.component.html\n// module id = 159\n// module chunks = 1","\n        var result = require(\"!!../../../../node_modules/raw-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./breadcrumb.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./contents-service/document-list/components/breadcrumb/breadcrumb.component.scss\n// module id = 160\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./node_modules/sass-loader/lib/loader.js!./contents-service/document-list/components/breadcrumb/breadcrumb.component.scss\n// module id = 161\n// module chunks = 1","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { SiteModel, SitesApiService } from 'ng2-alfresco-core';\n\n@Component({\n    selector: 'adf-sites-dropdown',\n    styles: [require('./sites-dropdown.component.scss')],\n    template: require('./sites-dropdown.component.html')\n})\nexport class DropdownSitesComponent implements OnInit {\n\n    @Input()\n    hideMyFiles: boolean = false;\n\n    @Output()\n    change: EventEmitter<SiteModel> = new EventEmitter();\n\n    public MY_FILES_VALUE = 'default';\n\n    siteList = [];\n\n    public siteSelected: string;\n\n    constructor(private sitesService: SitesApiService) {}\n\n    ngOnInit() {\n        this.sitesService.getSites().subscribe((result) => {\n            this.siteList = result;\n        },\n        (error) => {});\n    }\n\n    selectedSite() {\n        let siteFound;\n        if (this.siteSelected === this.MY_FILES_VALUE) {\n            siteFound = new SiteModel();\n        }else {\n           siteFound = this.siteList.find( site => site.guid === this.siteSelected);\n        }\n        this.change.emit(siteFound);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./contents-service/document-list/components/site-dropdown/sites-dropdown.component.ts","\n        var result = require(\"!!../../../../node_modules/raw-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./sites-dropdown.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./contents-service/document-list/components/site-dropdown/sites-dropdown.component.scss\n// module id = 163\n// module chunks = 1","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./node_modules/sass-loader/lib/loader.js!./contents-service/document-list/components/site-dropdown/sites-dropdown.component.scss\n// module id = 164\n// module chunks = 1","module.exports = \"<div id=\\\"site-dropdown-container\\\" class=\\\"adf-site-dropdown-container\\\">\\n    <mat-form-field>\\n        <mat-select\\n            class=\\\"adf-site-dropdown-list-element\\\"\\n            id=\\\"site-dropdown\\\"\\n            placeholder=\\\"{{'DROPDOWN.PLACEHOLDER_LABEL' | translate}}\\\"\\n            floatPlaceholder=\\\"never\\\"\\n            data-automation-id=\\\"site-my-files-select\\\"\\n            [(ngModel)]=\\\"siteSelected\\\"\\n            (ngModelChange)=\\\"selectedSite()\\\">\\n            <mat-option *ngIf=\\\"!hideMyFiles\\\" data-automation-id=\\\"site-my-files-option\\\" id=\\\"default_site_option\\\" [value]=\\\"MY_FILES_VALUE\\\">{{'DROPDOWN.MY_FILES_OPTION' | translate}}</mat-option>\\n            <mat-option *ngFor=\\\"let site of siteList\\\" [value]=\\\"site.guid\\\">\\n                {{ site.title }}\\n            </mat-option>\\n        </mat-select>\\n    </mat-form-field>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./contents-service/document-list/components/site-dropdown/sites-dropdown.component.html\n// module id = 165\n// module chunks = 1","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EventEmitter, Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport { AlfrescoContentService } from 'ng2-alfresco-core';\nimport { DataColumn } from 'ng2-alfresco-datatable';\nimport { Subject } from 'rxjs/Rx';\nimport { ContentNodeSelectorComponent, ContentNodeSelectorComponentData } from '../components/content-node-selector/content-node-selector.component';\nimport { ShareDataRow } from '../data/share-data-row.model';\nimport { DocumentListService } from './document-list.service';\n\n@Injectable()\nexport class NodeActionsService {\n\n    constructor(private dialog: MatDialog,\n                private documentListService?: DocumentListService,\n                private contentService?: AlfrescoContentService) {}\n\n    /**\n     * Copy content node\n     *\n     * @param contentEntry node to copy\n     * @param permission permission which is needed to apply the action\n     */\n    public copyContent(contentEntry: MinimalNodeEntryEntity, permission?: string): Subject<string> {\n        return this.doFileOperation('copy', 'content', contentEntry, permission);\n    }\n\n    /**\n     * Copy folder node\n     *\n     * @param contentEntry node to copy\n     * @param permission permission which is needed to apply the action\n     */\n    public copyFolder(contentEntry: MinimalNodeEntryEntity, permission?: string): Subject<string> {\n        return this.doFileOperation('copy', 'folder', contentEntry, permission);\n    }\n\n    /**\n     * Move content node\n     *\n     * @param contentEntry node to move\n     * @param permission permission which is needed to apply the action\n     */\n    public moveContent(contentEntry: MinimalNodeEntryEntity, permission?: string): Subject<string> {\n        return this.doFileOperation('move', 'content', contentEntry, permission);\n    }\n\n    /**\n     * Move folder node\n     *\n     * @param contentEntry node to move\n     * @param permission permission which is needed to apply the action\n     */\n    public moveFolder(contentEntry: MinimalNodeEntryEntity, permission?: string): Subject<string> {\n        return this.doFileOperation('move', 'folder', contentEntry, permission);\n    }\n\n    /**\n     * General method for performing the given operation (copy|move)\n     *\n     * @param action the action to perform (copy|move)\n     * @param type type of the content (content|folder)\n     * @param contentEntry the contentEntry which has to have the action performed on\n     * @param permission permission which is needed to apply the action\n     */\n    private doFileOperation(action: string, type: string, contentEntry: MinimalNodeEntryEntity, permission?: string): Subject<string> {\n        const observable: Subject<string> = new Subject<string>();\n\n        if (this.contentService.hasPermission(contentEntry, permission)) {\n            const data: ContentNodeSelectorComponentData = {\n                title: `${action} ${contentEntry.name} to ...`,\n                currentFolderId: contentEntry.parentId,\n                rowFilter: this.rowFilter.bind(this, contentEntry.id),\n                imageResolver: this.imageResolver.bind(this),\n                select: new EventEmitter<MinimalNodeEntryEntity[]>()\n            };\n\n            this.dialog.open(ContentNodeSelectorComponent, { data, panelClass: 'adf-content-node-selector-dialog', width: '630px' });\n\n            data.select.subscribe((selections: MinimalNodeEntryEntity[]) => {\n                const selection = selections[0];\n                this.documentListService[`${action}Node`].call(this.documentListService, contentEntry.id, selection.id)\n                    .subscribe(\n                        observable.next.bind(observable, `OPERATION.SUCCES.${type.toUpperCase()}.${action.toUpperCase()}`),\n                        observable.error.bind(observable)\n                    );\n                this.dialog.closeAll();\n            });\n\n            return observable;\n        } else {\n            observable.error(new Error(JSON.stringify({ error: { statusCode: 403 } })));\n            return observable;\n        }\n    }\n\n    private rowFilter(currentNodeId, row: ShareDataRow): boolean {\n        const node: MinimalNodeEntryEntity = row.node.entry;\n\n        if (node.id === currentNodeId || node.isFile) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    private imageResolver(row: ShareDataRow, col: DataColumn): string|null {\n        const entry: MinimalNodeEntryEntity = row.node.entry;\n        if (!this.contentService.hasPermission(entry, 'create')) {\n            return this.documentListService.getMimeTypeIcon('disable/folder');\n        }\n\n        return null;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./contents-service/document-list/services/node-actions.service.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// note: contains only limited subset of available fields\n\nimport { MinimalNodeEntity, MinimalNodeEntryEntity } from 'alfresco-js-api';\n\nexport class NodePaging {\n    list: NodePagingList;\n}\n\nexport class NodePagingList {\n    pagination: Pagination;\n    entries: NodeMinimalEntry[];\n}\n\nexport class NodeMinimalEntry implements MinimalNodeEntity {\n    entry: NodeMinimal;\n}\n\nexport class Pagination {\n    count: number;\n    hasMoreItems: boolean;\n    totalItems: number;\n    skipCount: number;\n    maxItems: number;\n}\n\nexport class NodeMinimal implements MinimalNodeEntryEntity {\n    id: string;\n    parentId: string;\n    name: string;\n    nodeType: string;\n    isFolder: boolean;\n    isFile: boolean;\n    modifiedAt: Date;\n    modifiedByUser: UserInfo;\n    createdAt: Date;\n    createdByUser: UserInfo;\n    content: ContentInfo;\n    path: PathInfoEntity;\n    properties: NodeProperties = {};\n}\n\nexport class UserInfo {\n    displayName: string;\n    id: string;\n}\n\nexport class ContentInfo {\n    mimeType: string;\n    mimeTypeName: string;\n    sizeInBytes: number;\n    encoding: string;\n}\n\nexport class PathInfoEntity {\n    elements: PathElementEntity[];\n    isComplete: boolean;\n    name: string;\n}\n\nexport class PathElementEntity {\n    id: string;\n    name: string;\n}\n\nexport interface NodeProperties {\n    [key: string]: any;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./contents-service/document-list/models/document-library.model.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PermissionsEnum } from 'ng2-alfresco-core';\n\nexport class PermissionStyleModel {\n    css: string;\n    permission: PermissionsEnum;\n    isFolder: boolean = true;\n    isFile: boolean = true;\n\n    constructor(css: string, permission: PermissionsEnum, isFile: boolean = true, isFolder: boolean = true) {\n        this.css = css;\n        this.permission = permission;\n        this.isFile = isFile;\n        this.isFolder = isFolder;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./contents-service/document-list/models/permissions-style.model.ts"],"sourceRoot":""}
