/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require("@angular/core");
var ng2_alfresco_core_1 = require("ng2-alfresco-core");
var upload_service_1 = require("../services/upload.service");
var FileUploadingDialogComponent = (function () {
    function FileUploadingDialogComponent(cd, translate, _uploaderService) {
        this.cd = cd;
        this._uploaderService = _uploaderService;
        this.isDialogActive = false;
        this.totalCompleted = 0;
        this._isDialogMinimized = false;
        translate.addTranslationFolder('ng2-alfresco-upload', 'node_modules/ng2-alfresco-upload/src');
    }
    FileUploadingDialogComponent.prototype.ngOnInit = function () {
        var _this = this;
        if (this._uploaderService.filesUpload$) {
            this.listSubscription = this._uploaderService.filesUpload$.subscribe(function (fileList) {
                _this.filesUploadingList = fileList;
                if (_this.filesUploadingList.length > 0) {
                    _this.isDialogActive = true;
                    _this.cd.detectChanges();
                }
            });
        }
        if (this._uploaderService.totalCompleted$) {
            this.counterSubscription = this._uploaderService.totalCompleted$.subscribe(function (total) {
                _this.totalCompleted = total;
                _this.cd.detectChanges();
            });
        }
    };
    FileUploadingDialogComponent.prototype.toggleShowDialog = function () {
        this.isDialogActive = !this.isDialogActive;
    };
    FileUploadingDialogComponent.prototype.toggleDialogMinimize = function () {
        this._isDialogMinimized = !this._isDialogMinimized;
    };
    FileUploadingDialogComponent.prototype.ngOnDestroy = function () {
        this.listSubscription.unsubscribe();
        this.counterSubscription.unsubscribe();
        this.cd.detach();
    };
    return FileUploadingDialogComponent;
}());
FileUploadingDialogComponent = __decorate([
    core_1.Component({
        selector: 'file-uploading-dialog',
        moduleId: module.id,
        template: "<div class=\"file-dialog\" [ngClass]=\"{show: isDialogActive}\">     <div class=\"header\">         <div class=\"title\">             <span id=\"total-upload-completed\">{{totalCompleted}}</span> {{'FILE_UPLOAD.MESSAGES.COMPLETED' | translate}}         </div>         <div class=\"buttons\">             <div class=\"minimize-button\" [ngClass]=\"{active: _isDialogMinimized}\" (keyup.enter)=\"toggleDialogMinimize()\" (click)=\"toggleDialogMinimize()\" tabindex=\"0\">                 <i class=\"material-icons down\" title=\"minimize upload list\">keyboard_arrow_down</i>                 <i class=\"material-icons up\" title=\"expand upload list\">keyboard_arrow_up</i>             </div>              <div class=\"close-button\" (click)=\"toggleShowDialog()\" (keyup.enter)=\"toggleShowDialog()\" tabindex=\"0\" title=\"close upload list\">                 <i class=\"material-icons\">clear</i>             </div>         </div>     </div>     <div class=\"body-dialog\" *ngIf=\"filesUploadingList\"  [ngClass]=\"{hide: _isDialogMinimized}\">         <alfresco-file-uploading-list [filesUploadingList]=\"filesUploadingList\"></alfresco-file-uploading-list>     </div> </div>",
        styles: [":host{     position: fixed;     bottom: 0;     width: 100%;     z-index: 1; }  :host .show {     display: block !important; }  :host .hide {     display: none !important; }  :host .file-dialog {     width: 700px;     display: none;     -webkit-box-shadow: 0 2px 8px 0 rgba(0, 0, 0, .2);     box-shadow: -2px -1px 8px 3px rgba(0, 0, 0, .2);     -webkit-border-radius: 2px;     border-radius: 2px;     -webkit-transform: translate3d(0, 0, 0);     transform: translate3d(0, 0, 0);     -webkit-transition-delay: 0s;     transition-delay: 0s;     opacity: 1;     -webkit-transition: transform .15s cubic-bezier(0.4, 0.0, 1, 1), opacity .15s cubic-bezier(0.4, 0.0, 1, 1), visibility 0ms linear .15s;     transition: transform .15s cubic-bezier(0.4, 0.0, 1, 1), opacity .15s cubic-bezier(0.4, 0.0, 1, 1), visibility 0ms linear .15s;     bottom: 0px;     left: auto;     max-height: 350px;     overflow: visible;     right: 24px;     position: fixed; }  :host .file-dialog .header {     background-color: rgb(31, 188, 210);     border: 1px transparent solid;     border-bottom: 1px solid #c7c7c7;     -moz-border-radius-topleft: 2px;     -webkit-border-top-left-radius: 2px;     border-top-left-radius: 2px;     -moz-border-radius-topright: 2px;     -webkit-border-top-right-radius: 2px;     border-top-right-radius: 2px;     bottom: 0px;     color: white;     font-size: 14px;     height: 52px;     line-height: 52px;     padding: 0px 10px 0px 10px; }  :host .file-dialog .header .title {     float: left;     min-width: 150px;     color: white; }  :host .file-dialog .header .buttons {     float: right;     padding: 10px 10px 10px 10px;     text-align: center;     color: white;     font-size: 14px;     opacity: 0.5; }  :host .file-dialog .header .close-button {     cursor: pointer;     float: left;     height: 35px;     width: 35px;     -webkit-border-radius: 2px;     -moz-border-radius: 2px;     border-radius: 2px;     border: 1px solid transparent; }  :host .file-dialog .header .close-button:hover {     border: 1px solid white;     opacity: 1.0; }  .minimize-button {     display: flex;     align-items: center;     justify-content: center; }  :host .file-dialog .header .minimize-button {     cursor: pointer;     float: left;     height: 35px;     width: 35px;     margin-right: 10px;     -webkit-border-radius: 2px;     -moz-border-radius: 2px;     border-radius: 2px;     border: 1px solid transparent; }  .up {     display: none; }  .down {     display: block; }  .active .up {     display: block; }  .active .down {     display: none; }  .file-dialog .header .minimize-button:hover {     border: 1px solid white;     opacity: 1.0; }  :host .file-dialog .body-dialog {     float: left;     height: 100%;     margin-top: -4px;     border-bottom: 1px solid #C0C0C0;     border-right: 1px solid #C0C0C0;     border-left: 1px solid #C0C0C0;     max-height: 200px;     overflow-y: auto;     width: 99.6%; }  :host .mdl-data-table th {     text-align: left; }  @media (max-width: 720px) {     :host .file-dialog {         width: 100%;         right: 0;     } }"],
        host: { '[class.dialog-show]': 'toggleShowDialog' }
    }),
    __metadata("design:paramtypes", [core_1.ChangeDetectorRef,
        ng2_alfresco_core_1.AlfrescoTranslationService,
        upload_service_1.UploadService])
], FileUploadingDialogComponent);
exports.FileUploadingDialogComponent = FileUploadingDialogComponent;

//# sourceMappingURL=data:application/json;charset=utf8;base64,
