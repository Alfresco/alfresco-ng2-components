{
  "$schema": "./node_modules/@angular/cli/lib/config/schema.json",
  "version": 1,
  "newProjectRoot": "lib",
  "projects": {
    "demoshell": {
      "root": "demo-shell",
      "sourceRoot": "demo-shell/src",
      "projectType": "application",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "allowedCommonJsDependencies": [
              "minimatch",
              "minimatch-browser",
              "superagent",
              "event-emitter",
              "brace-expansion",
              "zen-observable",
              "subscriptions-transport-ws",
              "d",
              "chart.js"
            ],
            "outputPath": "dist/demo-shell",
            "index": "demo-shell/src/index.html",
            "main": "demo-shell/src/main.ts",
            "tsConfig": "tsconfig.dev.json",
            "polyfills": "demo-shell/src/polyfills.ts",
            "stylePreprocessorOptions": {
              "includePaths": [
                "lib"
              ]
            },
            "assets": [
              "demo-shell/src/assets",
              "demo-shell/src/favicon-96x96.png",
              "demo-shell/src/app.config.json",
              {
                "glob": "**/*",
                "input": "demo-shell/src/assets",
                "output": "/assets"
              },
              {
                "glob": "app.config.json",
                "input": "demo-shell/src",
                "output": "/"
              },
              {
                "glob": "**/*",
                "input": "demo-shell/resources",
                "output": "/resources"
              },
              {
                "glob": "**/*",
                "input": "demo-shell/src/app/components/lazy-loading/i18n",
                "output": "/resources/lazy-loading/i18n"
              },
              {
                "glob": "**/*",
                "input": "lib/core/src/lib/assets",
                "output": "/assets"
              },
              {
                "glob": "**/*",
                "input": "lib/process-services/src/lib/assets",
                "output": "/assets"
              },
              {
                "glob": "**/*",
                "input": "lib/process-services-cloud/src/lib/assets",
                "output": "/assets"
              },
              {
                "glob": "**/*",
                "input": "lib/content-services/src/lib/assets",
                "output": "/assets"
              },
              {
                "glob": "**/*",
                "input": "lib/core/src/lib/i18n",
                "output": "/assets/adf-core/i18n"
              },
              {
                "glob": "**/*",
                "input": "lib/content-services/src/lib/i18n",
                "output": "/assets/adf-content-services/i18n"
              },
              {
                "glob": "**/*",
                "input": "lib/process-services/src/lib/i18n",
                "output": "/assets/adf-process-services/i18n"
              },
              {
                "glob": "**/*",
                "input": "lib/process-services-cloud/src/lib/i18n",
                "output": "/assets/adf-process-services-cloud/i18n"
              },
              {
                "glob": "**/*",
                "input": "lib/insights/src/lib/i18n",
                "output": "/assets/adf-insights/i18n"
              },
              {
                "glob": "pdf.worker.min.js",
                "input": "node_modules/pdfjs-dist/build",
                "output": "/"
              },
              {
                "glob": "**/*",
                "input": "node_modules/monaco-editor",
                "output": "/assets/monaco/"
              }
            ],
            "styles": [
              {
                "inject": false,
                "input": "lib/core/src/lib/styles/prebuilt/adf-blue-orange.scss",
                "bundleName": "adf-blue-orange"
              },
              {
                "inject": false,
                "input": "lib/core/src/lib/styles/prebuilt/adf-blue-purple.scss",
                "bundleName": "adf-blue-purple"
              },
              {
                "inject": false,
                "input": "lib/core/src/lib/styles/prebuilt/adf-cyan-orange.scss",
                "bundleName": "adf-cyan-orange"
              },
              {
                "inject": false,
                "input": "lib/core/src/lib/styles/prebuilt/adf-cyan-purple.scss",
                "bundleName": "adf-cyan-purple"
              },
              {
                "inject": false,
                "input": "lib/core/src/lib/styles/prebuilt/adf-green-orange.scss",
                "bundleName": "adf-green-orange"
              },
              {
                "inject": false,
                "input": "lib/core/src/lib/styles/prebuilt/adf-green-purple.scss",
                "bundleName": "adf-green-purple"
              },
              {
                "inject": false,
                "input": "lib/core/src/lib/styles/prebuilt/adf-indigo-pink.scss",
                "bundleName": "adf-indigo-pink"
              },
              {
                "inject": false,
                "input": "lib/core/src/lib/styles/prebuilt/adf-pink-bluegrey.scss",
                "bundleName": "adf-pink-bluegrey"
              },
              {
                "inject": false,
                "input": "lib/core/src/lib/styles/prebuilt/adf-purple-green.scss",
                "bundleName": "adf-purple-green"
              },
              "demo-shell/src/assets/fonts/muli/muli.css",
              "demo-shell/src/styles.scss",
              "demo-shell/src/custom-style-dev.scss",
              "node_modules/cropperjs/dist/cropper.min.css",
              "node_modules/pdfjs-dist/web/pdf_viewer.css"
            ],
            "scripts": [
              "node_modules/pdfjs-dist/build/pdf.js",
              "node_modules/pdfjs-dist/web/pdf_viewer.js",
              "node_modules/raphael/raphael.min.js",
              "node_modules/moment/min/moment.min.js"
            ],
            "vendorChunk": true,
            "extractLicenses": false,
            "buildOptimizer": false,
            "sourceMap": true,
            "optimization": false,
            "namedChunks": true
          },
          "configurations": {
            "production": {
              "budgets": [
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "12kb"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "extractLicenses": true,
              "buildOptimizer": true,
              "verbose": false,
              "fileReplacements": [
                {
                  "replace": "demo-shell/src/environments/environment.ts",
                  "with": "demo-shell/src/environments/environment.prod.ts"
                }
              ]
            },
            "canary": {
              "fileReplacements": [
                {
                  "replace": "demo-shell/src/environments/environment.ts",
                  "with": "demo-shell/src/environments/environment.canary.ts"
                }
              ]
            },
            "e2e": {
              "budgets": [
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "extractLicenses": true,
              "buildOptimizer": true,
              "verbose": false,
              "fileReplacements": [
                {
                  "replace": "demo-shell/src/environments/environment.ts",
                  "with": "demo-shell/src/environments/environment.e2e.ts"
                }
              ]
            }
          },
          "defaultConfiguration": ""
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "demoshell:build",
            "host": "0.0.0.0",
            "port": 3000,
            "proxyConfig": "demo-shell/proxy.conf.js",
            "disableHostCheck": true
          },
          "configurations": {
            "production": {
              "browserTarget": "demoshell:build:production"
            },
            "canary": {
              "browserTarget": "demoshell:build:canary"
            },
            "e2e": {
              "browserTarget": "demoshell:build:e2e"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "demo-shell/**/*.ts",
              "demo-shell/**/*.html"
            ]
          }
        },
        "spellcheck": {
          "executor": "nx:run-commands",
              "options": {
              "commands": [
                  {
                      "command": "npx cspell 'demo-shell/**/*.ts'"
                  }
              ]
          }
        }
      }
    },
    "demoshell-e2e": {
      "root": "demo-shell",
      "sourceRoot": "./demo-shell",
      "projectType": "application",
      "architect": {
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "proxyConfig": "./e2e/proxy.conf.js",
            "browserTarget": "dev:build",
            "port": 3000
          },
          "configurations": {
            "production": {
              "browserTarget": "dev:build:production"
            }
          }
        },
        "e2e": {
          "builder": "@angular-devkit/build-angular:protractor",
          "options": {
            "protractorConfig": "./e2e/protractor.conf.js",
            "devServerTarget": "lib-e2e-test:serve"
          }
        }
      }
    },
    "core": {
      "projectType": "library",
      "root": "lib/core",
      "sourceRoot": "lib/core",
      "prefix": "adf",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:ng-packagr",
          "options": {
            "tsConfig": "lib/core/tsconfig.lib.json",
            "project": "lib/core/ng-package.json"
          },
          "dependsOn": ["^build", "license"],
          "configurations": {
            "production": {
              "project": "lib/core/ng-package.json",
              "tsConfig": "lib/core/tsconfig.lib.prod.json"
            },
            "development": {
              "tsConfig": "lib/core/tsconfig.lib.json"
            }
          },
          "defaultConfiguration": "production"
        },
        "test": {
          "builder": "@angular-devkit/build-angular:karma",
          "options": {
            "main": "lib/core/test.ts",
            "tsConfig": "lib/core/tsconfig.spec.json",
            "karmaConfig": "lib/core/karma.conf.js",
            "sourceMap": true,
            "codeCoverage": true,
            "styles": [
              "demo-shell/src/styles.scss"
            ]
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "lib/core/**/*.ts",
              "lib/core/**/*.html",
              "lib/core/api/**/*.ts",
              "lib/core/api/**/*.html",
              "lib/core/auth/**/*.ts",
              "lib/core/auth/**/*.html",
              "lib/core/shell/**/*.ts",
              "lib/core/shell/**/*.html",
              "lib/core/breadcrumbs/**/*.ts",
              "lib/core/breadcrumbs/**/*.html"
            ]
          }
        },
        "storybook": {
          "builder": "@storybook/angular:start-storybook",
          "options": {
            "port": 4400,
            "browserTarget": "core:storybook",
            "configDir": "lib/core/.storybook",
            "compodoc": false,
            "styles": [
              "demo-shell/src/assets/fonts/muli/muli.css",
              "demo-shell/src/styles.scss",
              "demo-shell/src/custom-style-dev.scss",
              "node_modules/cropperjs/dist/cropper.min.css",
              "node_modules/pdfjs-dist/web/pdf_viewer.css"
            ]
          },
          "configurations": {
            "ci": {
              "quiet": true
            }
          }
        },
        "build-storybook": {
          "builder": "@storybook/angular:build-storybook",
          "options": {
            "browserTarget": "core:build-storybook",
            "configDir": "lib/core/.storybook",
            "outputDir": "dist/storybook/core",
            "compodoc": false,
            "styles": [
              "demo-shell/src/assets/fonts/muli/muli.css",
              "demo-shell/src/styles.scss",
              "demo-shell/src/custom-style-dev.scss",
              "node_modules/cropperjs/dist/cropper.min.css",
              "node_modules/pdfjs-dist/web/pdf_viewer.css"
            ]
          },
          "configurations": {
            "ci": {
              "quiet": true
            }
          }
        },
        "spellcheck": {
          "executor": "nx:run-commands",
              "options": {
              "commands": [
                  {
                      "command": "npx cspell 'lib/core/**/*.ts'"
                  }
              ]
          }
        },
        "stylelint": {
          "executor": "nx:run-commands",
              "options": {
              "commands": [
                  {
                      "command": "npx stylelint lib/core/**/*.scss --config stylelint-config.json"
                  }
              ]
          }
        },
        "license": {
          "executor": "nx:run-commands",
              "options": {
              "commands": [
                  {
                      "command": "npx license-checker --production  --failOn 'GPL;GPL-2.0' > licenses.txt"
                  }
              ]
          }
        },
        "pretheme": {
          "executor": "nx:run-commands",
              "options": {
              "commands": [
                  {
                      "command": "npx webpack -- --config ./lib/config/webpack.style.js --progress --profile --bail"
                  }
              ]
          }
        },
        "npm-publish": {
          "executor": "nx:run-commands",
          "dependsOn": [
            "build"
          ],
          "options": {
            "cwd": "dist/libs/core",
            "commands": [
              {
                "command": "npm publish --tag {args.tag}",
                "forwardAllArgs": true
              }
            ]
          }
        }
      }
    },
    "content-services": {
      "root": "lib/content-services",
      "sourceRoot": "lib/content-services/src",
      "projectType": "library",
      "prefix": "adf",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:ng-packagr",
          "options": {
            "tsConfig": "lib/content-services/tsconfig.lib.json",
            "project": "lib/content-services/ng-package.json"
          },
          "configurations": {
            "production": {
              "project": "lib/content-services/ng-package.json",
              "tsConfig": "lib/content-services/tsconfig.lib.prod.json"
            }
          },
          "defaultConfiguration": "production"
        },
        "test": {
          "builder": "@angular-devkit/build-angular:karma",
          "options": {
            "main": "lib/content-services/src/test.ts",
            "tsConfig": "lib/content-services/tsconfig.spec.json",
            "karmaConfig": "lib/content-services/karma.conf.js",
            "sourceMap": true,
            "codeCoverage": true
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "lib/content-services/**/*.ts",
              "lib/content-services/**/*.html"
            ]
          }
        },
        "storybook": {
          "builder": "@storybook/angular:start-storybook",
          "options": {
            "port": 4400,
            "browserTarget": "content-services:storybook",
            "configDir": "lib/content-services/.storybook",
            "compodoc": false,
            "styles": [
              "demo-shell/src/assets/fonts/muli/muli.css",
              "demo-shell/src/styles.scss",
              "demo-shell/src/custom-style-dev.scss",
              "node_modules/cropperjs/dist/cropper.min.css",
              "node_modules/pdfjs-dist/web/pdf_viewer.css"
            ]
          },
          "configurations": {
            "ci": {
              "quiet": true
            }
          }
        },
        "build-storybook": {
          "builder": "@storybook/angular:build-storybook",
          "options": {
            "browserTarget": "content-services:build-storybook",
            "configDir": "lib/content-services/.storybook",
            "outputDir": "dist/storybook/content-services",
            "compodoc": false,
            "styles": [
              "demo-shell/src/assets/fonts/muli/muli.css",
              "demo-shell/src/styles.scss",
              "demo-shell/src/custom-style-dev.scss",
              "node_modules/cropperjs/dist/cropper.min.css",
              "node_modules/pdfjs-dist/web/pdf_viewer.css"
            ]
          },
          "configurations": {
            "ci": {
              "quiet": true
            }
          }
        },
        "spellcheck": {
          "executor": "nx:run-commands",
              "options": {
              "commands": [
                  {
                      "command": "npx cspell 'lib/content-services/**/*.ts'"
                  }
              ]
          }
        },
        "stylelint": {
          "executor": "nx:run-commands",
              "options": {
              "commands": [
                  {
                      "command": "npx stylelint lib/content-services/**/*.scss --config stylelint-config.json"
                  }
              ]
          }
        },
        "npm-publish": {
          "executor": "nx:run-commands",
          "dependsOn": [
            "build"
          ],
          "options": {
            "cwd": "dist/libs/content-services",
            "commands": [
              {
                "command": "npm publish --tag {args.tag}",
                "forwardAllArgs": true
              }
            ]
          }
        }
      }
    },
    "process-services": {
      "root": "lib/process-services",
      "sourceRoot": "lib/process-services",
      "projectType": "library",
      "prefix": "adf",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:ng-packagr",
          "options": {
            "tsConfig": "lib/process-services/tsconfig.lib.json",
            "project": "lib/process-services/ng-package.json"
          },
          "configurations": {
            "production": {
              "project": "lib/process-services/ng-package.json",
              "tsConfig": "lib/process-services/tsconfig.lib.prod.json"
            }
          },
          "defaultConfiguration": "production"
        },
        "test": {
          "builder": "@angular-devkit/build-angular:karma",
          "options": {
            "main": "lib/process-services/src/test.ts",
            "tsConfig": "lib/process-services/tsconfig.spec.json",
            "karmaConfig": "lib/process-services/karma.conf.js",
            "sourceMap": true,
            "codeCoverage": true
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "lib/process-services/**/*.ts",
              "lib/process-services/**/*.html"
            ]
          }
        },
        "spellcheck": {
          "executor": "nx:run-commands",
              "options": {
              "commands": [
                  {
                      "command": "npx cspell 'lib/process-services/**/*.ts'"
                  }
              ]
          },
          "stylelint": {
            "executor": "nx:run-commands",
                "options": {
                "commands": [
                    {
                        "command": "npx stylelint lib/process-services/**/*.scss --config stylelint-config.json"
                    }
                ]
            }
          }
        },
        "stylelint": {
          "executor": "nx:run-commands",
              "options": {
              "commands": [
                  {
                      "command": "npx stylelint lib/process-services-cloud/**/*.scss --config stylelint-config.json"
                  }
              ]
          }
        },
        "npm-publish": {
          "executor": "nx:run-commands",
          "dependsOn": [
            "build"
          ],
          "options": {
            "cwd": "dist/libs/process-services",
            "commands": [
              {
                "command": "npm publish --tag {args.tag}",
                "forwardAllArgs": true
              }
            ]
        }
        }
      }
    },
    "process-services-cloud": {
      "root": "lib/process-services-cloud",
      "sourceRoot": "lib/process-services-cloud/src",
      "projectType": "library",
      "prefix": "adf-cloud",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:ng-packagr",
          "options": {
            "tsConfig": "lib/process-services-cloud/tsconfig.lib.json",
            "project": "lib/process-services-cloud/ng-package.json"
          },
          "configurations": {
            "production": {
              "project": "lib/process-services-cloud/ng-package.json",
              "tsConfig": "lib/process-services-cloud/tsconfig.lib.prod.json"
            }
          },
          "defaultConfiguration": "production"
        },
        "test": {
          "builder": "@angular-devkit/build-angular:karma",
          "options": {
            "main": "lib/process-services-cloud/src/test.ts",
            "tsConfig": "lib/process-services-cloud/tsconfig.spec.json",
            "karmaConfig": "lib/process-services-cloud/karma.conf.js",
            "sourceMap": true,
            "codeCoverage": true
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "lib/process-services-cloud/**/*.ts",
              "lib/process-services-cloud/**/*.html"
            ]
          }
        },
        "storybook": {
          "builder": "@storybook/angular:start-storybook",
          "options": {
            "port": 4400,
            "browserTarget": "process-services-cloud:storybook",
            "configDir": "lib/process-services-cloud/.storybook",
            "compodoc": false,
            "styles": [
              "demo-shell/src/assets/fonts/muli/muli.css",
              "demo-shell/src/styles.scss",
              "demo-shell/src/custom-style-dev.scss",
              "node_modules/cropperjs/dist/cropper.min.css",
              "node_modules/pdfjs-dist/web/pdf_viewer.css"
            ]
          },
          "configurations": {
            "ci": {
              "quiet": true
            }
          }
        },
        "build-storybook": {
          "builder": "@storybook/angular:build-storybook",
          "options": {
            "browserTarget": "process-services-cloud:build-storybook",
            "configDir": "lib/process-services-cloud/.storybook",
            "outputDir": "dist/storybook/process-services-cloud",
            "compodoc": false,
            "styles": [
              "demo-shell/src/assets/fonts/muli/muli.css",
              "demo-shell/src/styles.scss",
              "demo-shell/src/custom-style-dev.scss",
              "node_modules/cropperjs/dist/cropper.min.css",
              "node_modules/pdfjs-dist/web/pdf_viewer.css"
            ]
          },
          "configurations": {
            "ci": {
              "quiet": true
            }
          }
        },

        "e2e-playwright": {
          "executor": "nx:run-commands",
              "options": {
              "commands": [
                  {
                      "command": "npx playwright test --config='e2e-playwright/playwright.config.ts'"
                  }
              ]
          }
        },
        "spellcheck": {
          "executor": "nx:run-commands",
              "options": {
              "commands": [
                  {
                      "command": "npx cspell 'lib/process-services-cloud/**/*.ts'"
                  }
              ]
          }
        },
        "stylelint": {
          "executor": "nx:run-commands",
              "options": {
              "commands": [
                  {
                      "command": "npx stylelint lib/process-services-cloud/**/*.scss --config stylelint-config.json"
                  }
              ]
          }
        },
        "npm-publish": {
          "executor": "nx:run-commands",
          "dependsOn": [
            "build"
          ],
          "options": {
            "cwd": "dist/libs/process-services-cloud",
            "commands": [
              {
                "command": "npm publish --tag {args.tag}",
                "forwardAllArgs": true
              }
            ]
          }
        }
      }
    },
    "insights": {
      "root": "lib/insights",
      "sourceRoot": "lib/insights/src",
      "projectType": "library",
      "prefix": "adf",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:ng-packagr",
          "options": {
            "tsConfig": "lib/insights/tsconfig.lib.json",
            "project": "lib/insights/ng-package.json"
          },
          "configurations": {
            "production": {
              "project": "lib/insights/ng-package.json",
              "tsConfig": "lib/insights/tsconfig.lib.prod.json"
            }
          },
          "defaultConfiguration": "production"
        },
        "test": {
          "builder": "@angular-devkit/build-angular:karma",
          "options": {
            "main": "lib/insights/src/test.ts",
            "tsConfig": "lib/insights/tsconfig.spec.json",
            "karmaConfig": "lib/insights/karma.conf.js",
            "sourceMap": true,
            "codeCoverage": true
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "lib/insights/**/*.ts",
              "lib/insights/**/*.html"
            ]
          }
        },
        "spellcheck": {
          "executor": "nx:run-commands",
              "options": {
              "commands": [
                  {
                      "command": "npx cspell 'lib/insights/**/*.ts'"
                  }
              ]
          }
        },
        "stylelint": {
          "executor": "nx:run-commands",
              "options": {
              "commands": [
                  {
                      "command": "npx stylelint lib/insights/**/*.scss --config stylelint-config.json"
                  }
              ]
          }
        },
        "npm-publish": {
          "executor": "nx:run-commands",
          "dependsOn": [
            "build"
          ],
          "options": {
            "cwd": "dist/libs/insights",
            "commands": [
              {
                "command": "npm publish --tag {args.tag}",
                "forwardAllArgs": true
              }
            ]
          }
        }
      }
    },
    "extensions": {
      "root": "lib/extensions",
      "sourceRoot": "lib/extensions/src",
      "projectType": "library",
      "prefix": "adf",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:ng-packagr",
          "options": {
            "tsConfig": "lib/extensions/tsconfig.lib.json",
            "project": "lib/extensions/ng-package.json"
          },
          "configurations": {
            "production": {
              "tsConfig": "lib/extensions/tsconfig.lib.prod.json"
            }
          },
          "defaultConfiguration": "production"
        },
        "test": {
          "builder": "@angular-devkit/build-angular:karma",
          "options": {
            "main": "lib/extensions/src/test.ts",
            "tsConfig": "lib/extensions/tsconfig.spec.json",
            "karmaConfig": "lib/extensions/karma.conf.js",
            "sourceMap": true,
            "codeCoverage": true
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "lib/extensions/**/*.ts",
              "lib/extensions/**/*.html"
            ]
          },
          "dependsOn": ["spellcheck"]
        },
        "spellcheck": {
          "executor": "nx:run-commands",
              "options": {
              "commands": [
                  {
                      "command": "npx cspell 'lib/extensions/**/*.ts'"
                  }
              ]
          }
        },
        "npm-publish": {
          "executor": "nx:run-commands",
          "dependsOn": [
            "build"
          ],
          "options": {
            "cwd": "dist/libs/extensions",
            "commands": [
              {
                "command": "npm publish --tag {args.tag}",
                "forwardAllArgs": true
              }
            ]
          }
        }
      }
    },
    "testing": {
      "root": "lib/testing",
      "sourceRoot": "lib/testing/src",
      "projectType": "library",
      "prefix": "adf",
      "architect": {
        "build": {
          "builder": "@nrwl/node:webpack",
          "options": {
            "projectRoot": "lib/testing",
            "outputPath": "dist/libs/testing",
            "main": "lib/testing/index.ts",
            "generatePackageJson" : true,
            "tsConfig": "lib/testing/tsconfig.lib.prod.json",
            "additionalEntryPoints": [
              {
                "entryName": "shared",
                "entryPath": "/lib/testing/src/lib/shared/index.ts"
              }
            ]
          },
          "configurations": {
            "production": {
              "projectRoot": "lib/testing",
              "outputPath": "dist/libs/testing",
              "main": "lib/testing/index.ts",
              "generatePackageJson" : true,
              "tsConfig": "lib/testing/tsconfig.lib.prod.json"
            }
          },
          "defaultConfiguration": "production"
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "lib/testing/**/*.ts",
              "lib/testing/**/*.html"
            ]
          }
        },
        "bundle": {
          "executor": "nx:run-commands",
          "options": {
            "commands": [
              {
                "command": "echo testing bundle created"
              }
            ]
          },
          "dependsOn": [
            "copyToNodeModules"
          ]
        },
        "copyToNodeModules": {
          "executor": "nx:run-commands",
          "options": {
            "commands": [
              {
                "command": "rm -rf ./node_modules/@alfresco/adf-testing/ && mkdir -p ./node_modules/@alfresco/adf-testing/ &&  cp -R ./dist/libs/testing/* ./node_modules/@alfresco/adf-testing/"
              }
            ]
          },
          "dependsOn": [
            {
              "projects": "self",
              "target": "build"
            }
          ]
        },
        "npm-publish": {
          "executor": "nx:run-commands",
          "dependsOn": [
            "build"
          ],
          "options": {
            "cwd": "dist/libs/testing",
            "commands": [
              {
                "command": "npm publish --tag {args.tag}",
                "forwardAllArgs": true
              }
            ]
          }
        }
      }
    },
    "eslint-angular": {
      "root": "lib/eslint-angular",
      "sourceRoot": "lib/eslint-angular/src",
      "projectType": "library",
      "prefix": "adf",
      "architect": {
        "build": {
          "builder": "@nrwl/node:webpack",
          "options": {
            "projectRoot": "lib/eslint-angular",
            "outputPath": "dist/libs/eslint-plugin-eslint-angular",
            "main": "lib/eslint-angular/index.ts",
            "generatePackageJson" : true,
            "tsConfig": "lib/eslint-angular/tsconfig.lib.prod.json"
          },
          "configurations": {
            "production": {
              "projectRoot": "lib/eslint-angular",
              "outputPath": "dist/libs/eslint-plugin-eslint-angular",
              "main": "lib/eslint-angular/index.ts",
              "generatePackageJson" : true,
              "tsConfig": "lib/eslint-angular/tsconfig.lib.prod.json"
            }
          },
          "defaultConfiguration": "production"
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "lib/eslint-angular/**/*.ts"
            ]
          }
        },
        "bundle": {
          "executor": "nx:run-commands",
          "options": {
            "commands": [
              {
                "command": "echo testing bundle created"
              }
            ]
          }
        },
        "npm-publish": {
          "executor": "nx:run-commands",
          "dependsOn": [
            "build"
          ],
          "options": {
            "cwd": "dist/libs/eslint-plugin-eslint-angular",
            "commands": [
              {
                "command": "npm publish --tag {args.tag}",
                "forwardAllArgs": true
              }
            ]
          }
        }
      }
    },
    "cli": {
      "root": "lib/cli",
      "sourceRoot": "lib/cli",
      "projectType": "library",
      "prefix": "adf",
      "architect": {
        "build": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "cd lib/cli && npm i && npm run dist"
            ]
          },
          "configurations": {
            "production": {
              "tsConfig": "lib/cli/tsconfig.json"
            }
          },
          "defaultConfiguration": "production"
        },
        "bundle": {
          "executor": "nx:run-commands",
          "options": {
            "commands": [
              {
                "command": "echo cli bundle created"
              }
            ]
          },
          "dependsOn": [
            "copyToNodeModules"
          ]
        },
        "copyToNodeModules": {
          "executor": "nx:run-commands",
          "options": {
            "commands": [
              {
                "command": "rm -rf ./node_modules/@alfresco/adf-cli/ && mkdir -p ./node_modules/@alfresco/adf-cli/ && cp -R ./dist/libs/cli/* ./node_modules/@alfresco/adf-cli/"
              }
            ]
          },
          "dependsOn": [
            {
              "projects": "self",
              "target": "build"
            }
          ]
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "lib/cli/**/*.ts",
              "lib/cli/**/*.html"
            ]
          }
        },
        "npm-publish": {
          "executor": "nx:run-commands",
          "dependsOn": [
            "build"
          ],
          "options": {
            "cwd": "dist/libs/cli",
            "commands": [
              {
                "command": "npm publish --tag {args.tag}",
                "forwardAllArgs": true
              }
            ]
          }
        }
      }
    },
    "stories": {
      "root": "lib/stories",
      "sourceRoot": "lib/stories",
      "projectType": "library",
      "architect": {
        "storybook": {
          "builder": "@storybook/angular:start-storybook",
          "options": {
            "port": 4400,
            "browserTarget": "stories:storybook",
            "configDir": "lib/stories/.storybook",
            "compodoc": false,
            "styles": [
              "demo-shell/src/assets/fonts/muli/muli.css",
              "demo-shell/src/styles.scss",
              "demo-shell/src/custom-style-dev.scss",
              "node_modules/cropperjs/dist/cropper.min.css",
              "node_modules/pdfjs-dist/web/pdf_viewer.css"
            ]
          },
          "configurations": {
            "ci": {
              "quiet": true
            }
          }
        },
        "build-storybook": {
          "builder": "@storybook/angular:build-storybook",
          "options": {
            "browserTarget": "stories:build-storybook",
            "configDir": "lib/stories/.storybook",
            "outputDir": "dist/storybook/stories",
            "compodoc": false,
            "styles": [
              "demo-shell/src/assets/fonts/muli/muli.css",
              "demo-shell/src/styles.scss",
              "demo-shell/src/custom-style-dev.scss",
              "node_modules/cropperjs/dist/cropper.min.css",
              "node_modules/pdfjs-dist/web/pdf_viewer.css"
            ]
          },
          "configurations": {
            "ci": {
              "quiet": true
            }
          }
        }
      }
    }
  },
  "defaultProject": "demoshell"
}
